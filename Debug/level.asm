; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\source\level.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT PARA USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0CA@EJINICOK@Can?8t?5initialise?5object?5system?$CB?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@PEANDJCI@gfx?2font1?4bmp?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@HCJJELIG@gfx?2font2?4bmp?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@NPEAPNH@gfx?2shadow?4bmp?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@IPIJIIBB@gfx?2fxpage1?4bmp?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@JBNPKLP@gfx?2fxpage2?4bmp?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@MCEBCJBK@gfx?2fxpage3?4bmp?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@BCCGIDGB@levels?2?$CFs?2?$CFs?$CFc?4bmp?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03NDPLAFDJ@vis?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03IINIKNLB@rim?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03HMIODOLK@fin?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03GAOMKMFM@ncp?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CE@IPIKBCOC@Level?5has?5no?5Collision?5Polygon?5d@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05NAOIJFC@Error?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BP@OAPPGMGN@Collision?5polygon?5data?5corrupt?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BO@OKPOEPAO@No?5collision?5grid?5information?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07KGMMFLDN@Warning?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03KDBOCEAF@lit?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03NELGANAE@fob?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03KGCDCHED@taz?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03HCJNGPAC@fan?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03NJKMHLPI@tri?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03GOGOMMPD@cam?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03IAKKBENL@fld?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03OLAGBHBG@por?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@EMLOACPE@levels?2?$CK?4?$CK?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CB@OLNOFNJP@Can?8t?5find?5any?5level?5directories@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05MBDEGLCK@ERROR?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01LFCBOECM@?4?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02DJGKEECL@?4?4?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@DBMFEKGK@levels?2?$CFs?2?$CFs?4inf?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0IK@MEDHFMBD@c?3?2documents?5and?5settings?2jarhea@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CC@IDODPALJ@Can?8t?5alloc?5memory?5for?5level?5inf@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08OBKBFOJH@Untitled?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@MDOPLCBO@gfx?2envstill?4bmp?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@NAGKBPNF@gfx?2envroll?4bmp?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04IPKHEEB@NAME?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08HFDINBAD@ENVSTILL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07JBKLKJLM@ENVROLL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08MMLBBOCM@STARTPOS?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08OEKJENGB@?$CFf?5?$CFf?5?$CFf?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@KCMEHBFN@STARTPOSREV?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08CJPJEAGA@STARTROT?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02NJPGOMH@?$CFf?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@IHHLLMGE@STARTROTREV?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09MHADLFIK@STARTGRID?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@BHKNOHAG@STARTGRIDREV?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07NNHEBCMK@FARCLIP?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08BAKBEEOO@FOGSTART?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08LEIJKPJO@FOGCOLOR?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@HMBPFMCO@?$CFld?5?$CFld?5?$CFld?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@GIFOHMFJ@VERTFOGSTART?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@IAPFPPDL@VERTFOGEND?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@BABMLLHH@WORLDRGBPER?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03JALODAI@?$CFld?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@KDMFOCKL@MODELRGBPER?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@DFJILMPM@INSTANCERGBPER?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07MHJKEOHF@MIRRORS?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@CBINCAEI@?$CFld?5?$CFf?5?$CFf?5?$CFf?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PBHODAHK@levels?2?$CFs?2reversed?2?$CFs?4?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@IJPJFJHL@levels?2?$CFs?2?$CFs?4?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@KFHDMKEC@levels?2?$CFs?2reversed?2?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@NLMLOBPK@levels?2?$CFs?2?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IsEqualGUID
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _==
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _acosl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _asinl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _atanl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _atan2l
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ceill
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _cosl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _coshl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _expl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _fabsl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _floorl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _fmodl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _frexpl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ldexpl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _logl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _log10l
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _modfl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _powl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sinl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sinhl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sqrtl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tanl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tanhl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _frexpf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ldexpf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _acosf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _asinf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _atanf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _atan2f
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ceilf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _cosf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _coshf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _expf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _fabsf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _floorf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _fmodf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _logf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _log10f
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _modff
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _powf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sinf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sinhf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sqrtf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tanf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tanhf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sqrt@@YAMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStaticLevelModels@@YAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LEV_InitLevel@@YAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LEV_EndLevel@@YAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?s_LoadTrackData@@YAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindLevels@@YAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeLevels@@YAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLevelNum@@YAJPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLevelFilename@@YAPADPADJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadLevelFields@@YA_NPAULEVELINFO@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Pow_int@N@@YANNH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Pow_int@H@@YAHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Pow_int@M@@YAMMH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Pow_int@O@@YAOOH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?__LINE__Var@?1??LoadLevelFields@@YA_NPAULEVELINFO@@@Z@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?__LINE__Var@?1??FreeLevels@@YAXXZ@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?__LINE__Var@?1??FindLevels@@YAXXZ@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCD
INCLUDELIB OLDNAMES

PUBLIC	?LevelInf@@3PAULEVELINFO@@A			; LevelInf
PUBLIC	?LEV_StartPos@@3UVectorStruct@@A		; LEV_StartPos
PUBLIC	?LEV_StartRot@@3MA				; LEV_StartRot
PUBLIC	?LEV_StartGrid@@3JA				; LEV_StartGrid
PUBLIC	?LEV_LevelFieldPos@@3PAUVectorStruct@@A		; LEV_LevelFieldPos
PUBLIC	?LEV_LevelFieldMat@@3PATMatrixUnion@@A		; LEV_LevelFieldMat
_BSS	SEGMENT
?LevelInf@@3PAULEVELINFO@@A DD 01H DUP (?)		; LevelInf
?LEV_StartPos@@3UVectorStruct@@A DB 0cH DUP (?)		; LEV_StartPos
?LEV_StartRot@@3MA DD 01H DUP (?)			; LEV_StartRot
?LEV_StartGrid@@3JA DD 01H DUP (?)			; LEV_StartGrid
?LEV_LevelFieldPos@@3PAUVectorStruct@@A DD 01H DUP (?)	; LEV_LevelFieldPos
?LEV_LevelFieldMat@@3PATMatrixUnion@@A DD 01H DUP (?)	; LEV_LevelFieldMat
_BSS	ENDS
PUBLIC	??_C@_0CA@EJINICOK@Can?8t?5initialise?5object?5system?$CB?$AA@ ; `string'
PUBLIC	?LEV_InitLevel@@YAXXZ				; LEV_InitLevel
EXTRN	?FLD_Gravity@@3MA:DWORD				; FLD_Gravity
EXTRN	?FLD_GlobalBBox@@3UBBOX@@A:BYTE			; FLD_GlobalBBox
EXTRN	?FLD_GlobalSize@@3UVectorStruct@@A:BYTE		; FLD_GlobalSize
EXTRN	?FLD_GravityField@@3PAUForceFieldStruct@@A:DWORD ; FLD_GravityField
EXTRN	?InitSparks@@YAXXZ:NEAR				; InitSparks
EXTRN	?CAM_MainCamera@@3PAUCameraStruct@@A:DWORD	; CAM_MainCamera
EXTRN	?InitJumpSparkOffsets@@YAXXZ:NEAR		; InitJumpSparkOffsets
EXTRN	?SetBackgroundColor@@YAXJ@Z:NEAR		; SetBackgroundColor
EXTRN	?D3Ddevice@@3PAUIDirect3DDevice3@@A:DWORD	; D3Ddevice
EXTRN	?RenderStateChange@@3JA:DWORD			; RenderStateChange
EXTRN	?ClearSkids@@YAXXZ:NEAR				; ClearSkids
EXTRN	?PLR_InitPlayers@@YAXXZ:NEAR			; PLR_InitPlayers
EXTRN	__fltused:NEAR
EXTRN	?Identity@@3TMatrixUnion@@A:BYTE		; Identity
EXTRN	?ZeroVector@@3UVectorStruct@@A:BYTE		; ZeroVector
EXTRN	?DownVec@@3UVectorStruct@@A:BYTE		; DownVec
EXTRN	?Box@@YAJPAD0J@Z:NEAR				; Box
EXTRN	?QuitGame@@3DA:BYTE				; QuitGame
EXTRN	?GameSettings@@3UGAME_SETTINGS@@A:BYTE		; GameSettings
EXTRN	?OBJ_InitObjSys@@YAJXZ:NEAR			; OBJ_InitObjSys
EXTRN	?AddLinearField@@YAPAUForceFieldStruct@@JJPAUVectorStruct@@PATMatrixUnion@@PAUBBOX@@00MM@Z:NEAR ; AddLinearField
EXTRN	?InitPolyBuckets@@YAXXZ:NEAR			; InitPolyBuckets
EXTRN	?AddCamera@@YAPAUCameraStruct@@MMMMJ@Z:NEAR	; AddCamera
EXTRN	?InitCameras@@YAXXZ:NEAR			; InitCameras
EXTRN	?SetNearFar@@YAXMM@Z:NEAR			; SetNearFar
EXTRN	?SetFogVars@@YAXMMM@Z:NEAR			; SetFogVars
EXTRN	?InitLevelModels@@YAXXZ:NEAR			; InitLevelModels
;	COMDAT ??_C@_0CA@EJINICOK@Can?8t?5initialise?5object?5system?$CB?$AA@
; File c:\documents and settings\jarhead\desktop\shit to display my love for xbox revolt and fuck you borman-ness\revolt source\source\level.cpp
CONST	SEGMENT
??_C@_0CA@EJINICOK@Can?8t?5initialise?5object?5system?$CB?$AA@ DB 'Can''t'
	DB	' initialise object system!', 00H		; `string'
; Function compile flags: /Odt /ZI
CONST	ENDS
;	COMDAT ?LEV_InitLevel@@YAXXZ
_TEXT	SEGMENT
?LEV_InitLevel@@YAXXZ PROC NEAR				; LEV_InitLevel, COMDAT

; 112  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 113  : 
; 114  : 	// init object system
; 115  : 	if (!OBJ_InitObjSys())

	call	?OBJ_InitObjSys@@YAJXZ			; OBJ_InitObjSys
	test	eax, eax
	jne	SHORT $L83029

; 116  : 	{
; 117  : 		Box(NULL, "Can't initialise object system!", MB_OK);

	push	0
	push	OFFSET FLAT:??_C@_0CA@EJINICOK@Can?8t?5initialise?5object?5system?$CB?$AA@
	push	0
	call	?Box@@YAJPAD0J@Z			; Box
	add	esp, 12					; 0000000cH

; 118  : 		QuitGame = TRUE;

	mov	BYTE PTR ?QuitGame@@3DA, 1		; QuitGame

; 119  : 		return;

	jmp	$L83028
$L83029:

; 120  : 	}
; 121  : 
; 122  : 	// init player system
; 123  : 	PLR_InitPlayers();

	call	?PLR_InitPlayers@@YAXXZ			; PLR_InitPlayers

; 124  : 
; 125  : 	// init level model system
; 126  : 	InitLevelModels();

	call	?InitLevelModels@@YAXXZ			; InitLevelModels

; 127  : 	LoadStaticLevelModels();

	call	?LoadStaticLevelModels@@YAXXZ		; LoadStaticLevelModels

; 128  : 
; 129  : 	// Set near / far + fog
; 130  : 	SetNearFar(48.0f, LevelInf[GameSettings.Level].FarClip);

	mov	eax, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	edx, DWORD PTR [ecx+eax+184]
	push	edx
	push	1111490560				; 42400000H
	call	?SetNearFar@@YAXMM@Z			; SetNearFar
	add	esp, 8

; 131  : 	SetFogVars(LevelInf[GameSettings.Level].FogStart, LevelInf[GameSettings.Level].VertFogStart, LevelInf[GameSettings.Level].VertFogEnd);

	mov	eax, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	edx, DWORD PTR [ecx+eax+200]
	push	edx
	mov	eax, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	edx, DWORD PTR [ecx+eax+196]
	push	edx
	mov	eax, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	edx, DWORD PTR [ecx+eax+188]
	push	edx
	call	?SetFogVars@@YAXMMM@Z			; SetFogVars
	add	esp, 12					; 0000000cH

; 132  : 	FOG_COLOR(LevelInf[GameSettings.Level].FogColor);

	mov	eax, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	edx, DWORD PTR [ecx+eax+192]
	push	edx
	push	34					; 00000022H
	mov	eax, DWORD PTR ?D3Ddevice@@3PAUIDirect3DDevice3@@A ; D3Ddevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?D3Ddevice@@3PAUIDirect3DDevice3@@A ; D3Ddevice
	push	edx
	call	DWORD PTR [ecx+88]
	mov	eax, DWORD PTR ?RenderStateChange@@3JA	; RenderStateChange
	add	eax, 1
	mov	DWORD PTR ?RenderStateChange@@3JA, eax	; RenderStateChange

; 133  : 	SetBackgroundColor(LevelInf[GameSettings.Level].FogColor);

	mov	eax, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	edx, DWORD PTR [ecx+eax+192]
	push	edx
	call	?SetBackgroundColor@@YAXJ@Z		; SetBackgroundColor
	add	esp, 4

; 134  : 
; 135  : 	// Init spark engine
; 136  : 	InitSparks();

	call	?InitSparks@@YAXXZ			; InitSparks

; 137  : 
; 138  : 	// init poly buckets
; 139  : 	InitPolyBuckets();

	call	?InitPolyBuckets@@YAXXZ			; InitPolyBuckets

; 140  : 
; 141  : 	// init cameras
; 142  : 	InitCameras();

	call	?InitCameras@@YAXXZ			; InitCameras

; 143  : 	CAM_MainCamera = AddCamera(0, 0, 0, 0, CAMERA_FLAG_PRIMARY);

	push	1
	push	0
	push	0
	push	0
	push	0
	call	?AddCamera@@YAPAUCameraStruct@@MMMMJ@Z	; AddCamera
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?CAM_MainCamera@@3PAUCameraStruct@@A, eax ; CAM_MainCamera

; 144  : 
; 145  : 	// init skidmarks
; 146  : 	ClearSkids();

	call	?ClearSkids@@YAXXZ			; ClearSkids

; 147  : 
; 148  : 	// setup track
; 149  : 	s_LoadTrackData();

	call	?s_LoadTrackData@@YAXXZ			; s_LoadTrackData

; 150  : 
; 151  : 	// init jump spark offsets
; 152  : 	InitJumpSparkOffsets();

	call	?InitJumpSparkOffsets@@YAXXZ		; InitJumpSparkOffsets

; 153  : 
; 154  : 	// Add gravity
; 155  : 	FLD_GravityField = AddLinearField(FIELD_PARENT_NONE, FIELD_PRIORITY_MAX, &ZeroVector, &Identity, &FLD_GlobalBBox, &FLD_GlobalSize, &DownVec, FLD_Gravity, ZERO);

	push	0
	mov	eax, DWORD PTR ?FLD_Gravity@@3MA
	push	eax
	push	OFFSET FLAT:?DownVec@@3UVectorStruct@@A	; DownVec
	push	OFFSET FLAT:?FLD_GlobalSize@@3UVectorStruct@@A ; FLD_GlobalSize
	push	OFFSET FLAT:?FLD_GlobalBBox@@3UBBOX@@A	; FLD_GlobalBBox
	push	OFFSET FLAT:?Identity@@3TMatrixUnion@@A	; Identity
	push	OFFSET FLAT:?ZeroVector@@3UVectorStruct@@A ; ZeroVector
	push	0
	push	-1
	call	?AddLinearField@@YAPAUForceFieldStruct@@JJPAUVectorStruct@@PATMatrixUnion@@PAUBBOX@@00MM@Z ; AddLinearField
	add	esp, 36					; 00000024H
	mov	DWORD PTR ?FLD_GravityField@@3PAUForceFieldStruct@@A, eax ; FLD_GravityField

; 156  : 
; 157  : 	// misc littlies
; 158  : 	GameSettings.Paws = FALSE;

	mov	DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+28, 0
$L83028:

; 159  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?LEV_InitLevel@@YAXXZ ENDP				; LEV_InitLevel
_TEXT	ENDS
EXTRN	?LoadOneLevelModel@@YAJJJUrenderflags@@J@Z:NEAR	; LoadOneLevelModel
; Function compile flags: /Odt /ZI
;	COMDAT ?LoadStaticLevelModels@@YAXXZ
_TEXT	SEGMENT
_rflag$ = -4						; size = 4
?LoadStaticLevelModels@@YAXXZ PROC NEAR			; LoadStaticLevelModels, COMDAT

; 97   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 98   : 	struct renderflags rflag;
; 99   : 
; 100  : 	LoadOneLevelModel(LEVEL_MODEL_PICKUP, FALSE, rflag, 0);

	push	0
	mov	eax, DWORD PTR _rflag$[ebp]
	push	eax
	push	0
	push	34					; 00000022H
	call	?LoadOneLevelModel@@YAJJJUrenderflags@@J@Z ; LoadOneLevelModel
	add	esp, 16					; 00000010H

; 101  : 	LoadOneLevelModel(LEVEL_MODEL_FIREWORK, FALSE, rflag, TPAGE_FX1);

	push	27					; 0000001bH
	mov	eax, DWORD PTR _rflag$[ebp]
	push	eax
	push	0
	push	37					; 00000025H
	call	?LoadOneLevelModel@@YAJJJUrenderflags@@J@Z ; LoadOneLevelModel
	add	esp, 16					; 00000010H

; 102  : 	LoadOneLevelModel(LEVEL_MODEL_WATERBOMB, FALSE, rflag, 0);

	push	0
	mov	eax, DWORD PTR _rflag$[ebp]
	push	eax
	push	0
	push	39					; 00000027H
	call	?LoadOneLevelModel@@YAJJJUrenderflags@@J@Z ; LoadOneLevelModel
	add	esp, 16					; 00000010H

; 103  : 	LoadOneLevelModel(LEVEL_MODEL_CHROMEBALL, FALSE, rflag, 0);

	push	0
	mov	eax, DWORD PTR _rflag$[ebp]
	push	eax
	push	0
	push	38					; 00000026H
	call	?LoadOneLevelModel@@YAJJJUrenderflags@@J@Z ; LoadOneLevelModel
	add	esp, 16					; 00000010H

; 104  : 	LoadOneLevelModel(LEVEL_MODEL_BOMBBALL, FALSE, rflag, 0);

	push	0
	mov	eax, DWORD PTR _rflag$[ebp]
	push	eax
	push	0
	push	40					; 00000028H
	call	?LoadOneLevelModel@@YAJJJUrenderflags@@J@Z ; LoadOneLevelModel
	add	esp, 16					; 00000010H

; 105  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?LoadStaticLevelModels@@YAXXZ ENDP			; LoadStaticLevelModels
_TEXT	ENDS
PUBLIC	?LEV_EndLevel@@YAXXZ				; LEV_EndLevel
EXTRN	?FreeMirrorPlanes@@YAXXZ:NEAR			; FreeMirrorPlanes
EXTRN	?SaveTrackTimes@@YAXPAULEVELINFO@@@Z:NEAR	; SaveTrackTimes
EXTRN	?FreeWorld@@YAXXZ:NEAR				; FreeWorld
EXTRN	?FreeTriggers@@YAXXZ:NEAR			; FreeTriggers
EXTRN	?KillFileTriggers@@YAXXZ:NEAR			; KillFileTriggers
EXTRN	?FreeAiNodes@@YAXXZ:NEAR			; FreeAiNodes
EXTRN	?GRD_FreeGrids@@YAXXZ:NEAR			; GRD_FreeGrids
EXTRN	?KillEditCamNodes@@YAXXZ:NEAR			; KillEditCamNodes
EXTRN	?FreeEditCamNodeModels@@YAXXZ:NEAR		; FreeEditCamNodeModels
EXTRN	?KillFileFields@@YAXXZ:NEAR			; KillFileFields
EXTRN	?FreeFileFieldModels@@YAXXZ:NEAR		; FreeFileFieldModels
EXTRN	?FreeInstanceModels@@YAXXZ:NEAR			; FreeInstanceModels
EXTRN	?FreeInstanceRGBs@@YAXXZ:NEAR			; FreeInstanceRGBs
EXTRN	?PLR_KillAllPlayers@@YAXXZ:NEAR			; PLR_KillAllPlayers
EXTRN	?KillFileObjects@@YAXXZ:NEAR			; KillFileObjects
EXTRN	?FreeFileObjectModels@@YAXXZ:NEAR		; FreeFileObjectModels
EXTRN	?FreeSfx@@YAXXZ:NEAR				; FreeSfx
EXTRN	?KillEditAiNodes@@YAXXZ:NEAR			; KillEditAiNodes
EXTRN	?DestroyCollPolys@@YAXPAUCollPolyStruct@@@Z:NEAR ; DestroyCollPolys
EXTRN	?DestroyCollGrids@@YAXXZ:NEAR			; DestroyCollGrids
EXTRN	?FreeEditAiNodeModels@@YAXXZ:NEAR		; FreeEditAiNodeModels
EXTRN	?KillFileZones@@YAXXZ:NEAR			; KillFileZones
EXTRN	?FreeEditLightModels@@YAXXZ:NEAR		; FreeEditLightModels
EXTRN	?FreeAiZones@@YAXXZ:NEAR			; FreeAiZones
EXTRN	?COL_WorldCollPoly@@3PAUCollPolyStruct@@A:DWORD	; COL_WorldCollPoly
EXTRN	?COL_NWorldCollPolys@@3FA:WORD			; COL_NWorldCollPolys
EXTRN	?COL_InstanceCollPoly@@3PAUCollPolyStruct@@A:DWORD ; COL_InstanceCollPoly
EXTRN	?COL_NInstanceCollPolys@@3FA:WORD		; COL_NInstanceCollPolys
EXTRN	?EditMode@@3JA:DWORD				; EditMode
EXTRN	?AI_Testing@@3JA:DWORD				; AI_Testing
EXTRN	?OBJ_KillObjSys@@YAXXZ:NEAR			; OBJ_KillObjSys
EXTRN	?FreeForceFields@@YAXXZ:NEAR			; FreeForceFields
EXTRN	?FreeTextures@@YAXXZ:NEAR			; FreeTextures
EXTRN	?KillEditPortals@@YAXXZ:NEAR			; KillEditPortals
EXTRN	?KillPolyBuckets@@YAXXZ:NEAR			; KillPolyBuckets
EXTRN	?FreeLevelModels@@YAXXZ:NEAR			; FreeLevelModels
; Function compile flags: /Odt /ZI
;	COMDAT ?LEV_EndLevel@@YAXXZ
_TEXT	SEGMENT
?LEV_EndLevel@@YAXXZ PROC NEAR				; LEV_EndLevel, COMDAT

; 166  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 167  : 	// kill world collision
; 168  : 	DestroyCollGrids();

	call	?DestroyCollGrids@@YAXXZ		; DestroyCollGrids

; 169  : 	DestroyCollPolys(COL_WorldCollPoly);

	mov	eax, DWORD PTR ?COL_WorldCollPoly@@3PAUCollPolyStruct@@A ; COL_WorldCollPoly
	push	eax
	call	?DestroyCollPolys@@YAXPAUCollPolyStruct@@@Z ; DestroyCollPolys
	add	esp, 4

; 170  : 	COL_WorldCollPoly = NULL;

	mov	DWORD PTR ?COL_WorldCollPoly@@3PAUCollPolyStruct@@A, 0 ; COL_WorldCollPoly

; 171  : 	COL_NWorldCollPolys = 0;

	mov	WORD PTR ?COL_NWorldCollPolys@@3FA, 0	; COL_NWorldCollPolys

; 172  : 	DestroyCollPolys(COL_InstanceCollPoly);

	mov	eax, DWORD PTR ?COL_InstanceCollPoly@@3PAUCollPolyStruct@@A ; COL_InstanceCollPoly
	push	eax
	call	?DestroyCollPolys@@YAXPAUCollPolyStruct@@@Z ; DestroyCollPolys
	add	esp, 4

; 173  : 	COL_InstanceCollPoly = NULL;

	mov	DWORD PTR ?COL_InstanceCollPoly@@3PAUCollPolyStruct@@A, 0 ; COL_InstanceCollPoly

; 174  : 	COL_NInstanceCollPolys = 0;

	mov	WORD PTR ?COL_NInstanceCollPolys@@3FA, 0 ; COL_NInstanceCollPolys

; 175  : 
; 176  : 	// Free any force field stuff
; 177  : 	FreeForceFields();

	call	?FreeForceFields@@YAXXZ			; FreeForceFields

; 178  : 
; 179  : 	// kill textures
; 180  : 	FreeTextures();

	call	?FreeTextures@@YAXXZ			; FreeTextures

; 181  : 
; 182  : 	// kill world mesh
; 183  : 	FreeWorld();

	call	?FreeWorld@@YAXXZ			; FreeWorld

; 184  : 
; 185  : 	// kill car info
; 186  : //	DestroyCarInfo();
; 187  : //	NCarTypes = 0;
; 188  : 
; 189  : 	// kill poly buckets
; 190  : 	KillPolyBuckets();

	call	?KillPolyBuckets@@YAXXZ			; KillPolyBuckets

; 191  : 
; 192  : 	// free mirror planes
; 193  : 	FreeMirrorPlanes();

	call	?FreeMirrorPlanes@@YAXXZ		; FreeMirrorPlanes

; 194  : 
; 195  : 	// free instance stuff
; 196  : 	FreeInstanceRGBs();

	call	?FreeInstanceRGBs@@YAXXZ		; FreeInstanceRGBs

; 197  : 	FreeInstanceModels();

	call	?FreeInstanceModels@@YAXXZ		; FreeInstanceModels

; 198  : 
; 199  : 	// free sfx
; 200  : 	FreeSfx();

	call	?FreeSfx@@YAXXZ				; FreeSfx

; 201  : 
; 202  : 	// free ai nodes
; 203  : 	FreeAiNodes();

	call	?FreeAiNodes@@YAXXZ			; FreeAiNodes

; 204  : 
; 205  : 	// free ai zones
; 206  : 	FreeAiZones();

	call	?FreeAiZones@@YAXXZ			; FreeAiZones

; 207  : 
; 208  : 	// free triggers
; 209  : 	FreeTriggers();

	call	?FreeTriggers@@YAXXZ			; FreeTriggers

; 210  : 
; 211  : 	// save best track times
; 212  : 	SaveTrackTimes(&LevelInf[GameSettings.Level]);

	mov	eax, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	eax, 232				; 000000e8H
	add	eax, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	push	eax
	call	?SaveTrackTimes@@YAXPAULEVELINFO@@@Z	; SaveTrackTimes
	add	esp, 4

; 213  : 
; 214  : 	// free edit stuff
; 215  : 	if (AI_Testing)

	cmp	DWORD PTR ?AI_Testing@@3JA, 0		; AI_Testing
	je	SHORT $L83034

; 216  : 	{
; 217  : 		FreeEditAiNodeModels();							// !MT! Temp moved out during AI testing

	call	?FreeEditAiNodeModels@@YAXXZ		; FreeEditAiNodeModels
$L83034:

; 218  : 	}
; 219  : 
; 220  : 	if (EditMode == EDIT_VISIBOXES)

	cmp	DWORD PTR ?EditMode@@3JA, 2		; EditMode
	jne	SHORT $L83035

; 221  : 	{
; 222  : 		if (!AI_Testing) FreeEditAiNodeModels();

	cmp	DWORD PTR ?AI_Testing@@3JA, 0		; AI_Testing
	jne	SHORT $L83035
	call	?FreeEditAiNodeModels@@YAXXZ		; FreeEditAiNodeModels
$L83035:

; 223  : 	}
; 224  : 
; 225  : 	if (EditMode == EDIT_LIGHTS)

	cmp	DWORD PTR ?EditMode@@3JA, 1		; EditMode
	jne	SHORT $L83037

; 226  : 	{
; 227  : 		FreeEditLightModels();

	call	?FreeEditLightModels@@YAXXZ		; FreeEditLightModels
$L83037:

; 228  : 	}
; 229  : 
; 230  : 	if (EditMode == EDIT_OBJECTS)

	cmp	DWORD PTR ?EditMode@@3JA, 3		; EditMode
	jne	SHORT $L83038

; 231  : 	{
; 232  : 		KillFileObjects();

	call	?KillFileObjects@@YAXXZ			; KillFileObjects

; 233  : 		FreeFileObjectModels();

	call	?FreeFileObjectModels@@YAXXZ		; FreeFileObjectModels
$L83038:

; 234  : 	}
; 235  : 
; 236  : 	if (EditMode == EDIT_AINODES)

	cmp	DWORD PTR ?EditMode@@3JA, 5		; EditMode
	jne	SHORT $L83039

; 237  : 	{
; 238  : 		KillEditAiNodes();

	call	?KillEditAiNodes@@YAXXZ			; KillEditAiNodes

; 239  : 		if (!AI_Testing) FreeEditAiNodeModels();

	cmp	DWORD PTR ?AI_Testing@@3JA, 0		; AI_Testing
	jne	SHORT $L83039
	call	?FreeEditAiNodeModels@@YAXXZ		; FreeEditAiNodeModels
$L83039:

; 240  : 	}
; 241  : 
; 242  : 	if (EditMode == EDIT_ZONES)

	cmp	DWORD PTR ?EditMode@@3JA, 6		; EditMode
	jne	SHORT $L83041

; 243  : 	{
; 244  : 		KillFileZones();

	call	?KillFileZones@@YAXXZ			; KillFileZones

; 245  : 		if (!AI_Testing) FreeEditAiNodeModels();

	cmp	DWORD PTR ?AI_Testing@@3JA, 0		; AI_Testing
	jne	SHORT $L83041
	call	?FreeEditAiNodeModels@@YAXXZ		; FreeEditAiNodeModels
$L83041:

; 246  : 	}
; 247  : 
; 248  : 	if (EditMode == EDIT_TRIGGERS)

	cmp	DWORD PTR ?EditMode@@3JA, 7		; EditMode
	jne	SHORT $L83043

; 249  : 	{
; 250  : 		KillFileTriggers();

	call	?KillFileTriggers@@YAXXZ		; KillFileTriggers
$L83043:

; 251  : 	}
; 252  : 
; 253  : 	if (EditMode == EDIT_CAM)

	cmp	DWORD PTR ?EditMode@@3JA, 8		; EditMode
	jne	SHORT $L83044

; 254  : 	{
; 255  : 		KillEditCamNodes();

	call	?KillEditCamNodes@@YAXXZ		; KillEditCamNodes

; 256  : 		FreeEditCamNodeModels();

	call	?FreeEditCamNodeModels@@YAXXZ		; FreeEditCamNodeModels
$L83044:

; 257  : 	}
; 258  : 
; 259  : 	if (EditMode == EDIT_FIELDS)

	cmp	DWORD PTR ?EditMode@@3JA, 9		; EditMode
	jne	SHORT $L83045

; 260  : 	{
; 261  : 		KillFileFields();

	call	?KillFileFields@@YAXXZ			; KillFileFields

; 262  : 		FreeFileFieldModels();

	call	?FreeFileFieldModels@@YAXXZ		; FreeFileFieldModels
$L83045:

; 263  : 	}
; 264  : 
; 265  : 	if (EditMode == EDIT_PORTALS)

	cmp	DWORD PTR ?EditMode@@3JA, 10		; EditMode, 0000000aH
	jne	SHORT $L83046

; 266  : 	{
; 267  : 		KillEditPortals();

	call	?KillEditPortals@@YAXXZ			; KillEditPortals
$L83046:

; 268  : 	}
; 269  : 
; 270  : 	// free level models
; 271  : 	FreeLevelModels();

	call	?FreeLevelModels@@YAXXZ			; FreeLevelModels

; 272  : 
; 273  : 	// Kill player system
; 274  : 	PLR_KillAllPlayers();

	call	?PLR_KillAllPlayers@@YAXXZ		; PLR_KillAllPlayers

; 275  : 
; 276  : 	// kill object system
; 277  : 	OBJ_KillObjSys();

	call	?OBJ_KillObjSys@@YAXXZ			; OBJ_KillObjSys

; 278  : 
; 279  : 	// Kill grid buffers
; 280  : 	GRD_FreeGrids();

	call	?GRD_FreeGrids@@YAXXZ			; GRD_FreeGrids

; 281  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?LEV_EndLevel@@YAXXZ ENDP				; LEV_EndLevel
_TEXT	ENDS
PUBLIC	??_C@_0O@PEANDJCI@gfx?2font1?4bmp?$AA@		; `string'
PUBLIC	??_C@_0O@HCJJELIG@gfx?2font2?4bmp?$AA@		; `string'
PUBLIC	??_C@_0P@NPEAPNH@gfx?2shadow?4bmp?$AA@		; `string'
PUBLIC	??_C@_0BA@IPIJIIBB@gfx?2fxpage1?4bmp?$AA@	; `string'
PUBLIC	??_C@_0BA@JBNPKLP@gfx?2fxpage2?4bmp?$AA@	; `string'
PUBLIC	??_C@_0BA@MCEBCJBK@gfx?2fxpage3?4bmp?$AA@	; `string'
PUBLIC	??_C@_0BD@BCCGIDGB@levels?2?$CFs?2?$CFs?$CFc?4bmp?$AA@ ; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_03NDPLAFDJ@vis?$AA@			; `string'
PUBLIC	??_C@_03IINIKNLB@rim?$AA@			; `string'
PUBLIC	??_C@_03HMIODOLK@fin?$AA@			; `string'
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
PUBLIC	??_C@_03GAOMKMFM@ncp?$AA@			; `string'
PUBLIC	??_C@_0CE@IPIKBCOC@Level?5has?5no?5Collision?5Polygon?5d@ ; `string'
PUBLIC	??_C@_05NAOIJFC@Error?$AA@			; `string'
PUBLIC	??_C@_0BP@OAPPGMGN@Collision?5polygon?5data?5corrupt?$AA@ ; `string'
PUBLIC	??_C@_0BO@OKPOEPAO@No?5collision?5grid?5information?$AA@ ; `string'
PUBLIC	??_C@_07KGMMFLDN@Warning?$AA@			; `string'
PUBLIC	??_C@_03KDBOCEAF@lit?$AA@			; `string'
PUBLIC	??_C@_03NELGANAE@fob?$AA@			; `string'
PUBLIC	??_C@_03KGCDCHED@taz?$AA@			; `string'
PUBLIC	??_C@_03HCJNGPAC@fan?$AA@			; `string'
PUBLIC	??_C@_03NJKMHLPI@tri?$AA@			; `string'
PUBLIC	??_C@_03GOGOMMPD@cam?$AA@			; `string'
PUBLIC	??_C@_03IAKKBENL@fld?$AA@			; `string'
PUBLIC	??_C@_03OLAGBHBG@por?$AA@			; `string'
PUBLIC	?GetLevelFilename@@YAPADPADJ@Z			; GetLevelFilename
PUBLIC	?LoadLevelFields@@YA_NPAULEVELINFO@@@Z		; LoadLevelFields
EXTRN	?LoadCameraNodes@@YAJPAU_iobuf@@@Z:NEAR		; LoadCameraNodes
EXTRN	?CAM_NCameraNodes@@3JA:DWORD			; CAM_NCameraNodes
EXTRN	_fclose:NEAR
EXTRN	_fopen:NEAR
EXTRN	?LoadVisiBoxes@@YAXPAD@Z:NEAR			; LoadVisiBoxes
EXTRN	?InitVisiBoxes@@YAXXZ:NEAR			; InitVisiBoxes
EXTRN	?SetPermVisiBoxes@@YAXXZ:NEAR			; SetPermVisiBoxes
EXTRN	?LoadMirrorPlanes@@YA_NPAD@Z:NEAR		; LoadMirrorPlanes
EXTRN	?SetMirrorParams@@YAXPAULEVELINFO@@@Z:NEAR	; SetMirrorParams
EXTRN	?LoadTrackTimes@@YAXPAULEVELINFO@@@Z:NEAR	; LoadTrackTimes
EXTRN	?LoadWorld@@YA_NPAD@Z:NEAR			; LoadWorld
EXTRN	?MirrorWorldPolys@@YAXXZ:NEAR			; MirrorWorldPolys
EXTRN	?SetWorldMirror@@YAXXZ:NEAR			; SetWorldMirror
EXTRN	?LoadTriggers@@YAXPAD@Z:NEAR			; LoadTriggers
EXTRN	?InitFileTriggers@@YAXXZ:NEAR			; InitFileTriggers
EXTRN	?LoadFileTriggers@@YAXPAD@Z:NEAR		; LoadFileTriggers
EXTRN	?LoadAiNodes@@YAXPAD@Z:NEAR			; LoadAiNodes
EXTRN	?ZoneAiNodes@@YAXXZ:NEAR			; ZoneAiNodes
EXTRN	?InitEditCamNodes@@YAXXZ:NEAR			; InitEditCamNodes
EXTRN	?LoadEditCamNodeModels@@YAXXZ:NEAR		; LoadEditCamNodeModels
EXTRN	?LoadEditCamNodes@@YAXPAD@Z:NEAR		; LoadEditCamNodes
EXTRN	?InitFileFields@@YAXXZ:NEAR			; InitFileFields
EXTRN	?LoadFileFields@@YAXPAD@Z:NEAR			; LoadFileFields
EXTRN	?LoadFileFieldModels@@YAXXZ:NEAR		; LoadFileFieldModels
EXTRN	?LoadInstances@@YAXPAD@Z:NEAR			; LoadInstances
EXTRN	?LoadInstanceModels@@YAXXZ:NEAR			; LoadInstanceModels
EXTRN	?BuildInstanceCollPolys@@YAXXZ:NEAR		; BuildInstanceCollPolys
EXTRN	?InitLights@@YAXXZ:NEAR				; InitLights
EXTRN	?InitFileObjects@@YAJXZ:NEAR			; InitFileObjects
EXTRN	?LoadFileObjects@@YAXPAD@Z:NEAR			; LoadFileObjects
EXTRN	?LoadFileObjectModels@@YAXXZ:NEAR		; LoadFileObjectModels
EXTRN	?InitEditAiNodes@@YAXXZ:NEAR			; InitEditAiNodes
EXTRN	?LoadSfx@@YAJPAD@Z:NEAR				; LoadSfx
EXTRN	?LoadEditAiNodes@@YAXPAD@Z:NEAR			; LoadEditAiNodes
EXTRN	?LoadEditAiNodeModels@@YAXXZ:NEAR		; LoadEditAiNodeModels
EXTRN	?LoadNewCollPolys@@YAPAUCollPolyStruct@@PAU_iobuf@@PAF@Z:NEAR ; LoadNewCollPolys
EXTRN	?LoadGridInfo@@YA_NPAU_iobuf@@@Z:NEAR		; LoadGridInfo
EXTRN	?InitFileZones@@YAXXZ:NEAR			; InitFileZones
EXTRN	?LoadLights@@YAXPAD@Z:NEAR			; LoadLights
EXTRN	?LoadFileZones@@YAXPAD@Z:NEAR			; LoadFileZones
EXTRN	?LoadEditLightModels@@YAXXZ:NEAR		; LoadEditLightModels
EXTRN	?LoadAiZones@@YAXPAD@Z:NEAR			; LoadAiZones
EXTRN	?LoadObjects@@YAXPAD@Z:NEAR			; LoadObjects
EXTRN	?LoadTextureClever@@YA_NPADDJJJJJ@Z:NEAR	; LoadTextureClever
EXTRN	?InitFields@@YAXXZ:NEAR				; InitFields
EXTRN	?LoadMipTexture@@YA_NPADDJJJJ@Z:NEAR		; LoadMipTexture
EXTRN	?LoadEditPortals@@YAXPAD@Z:NEAR			; LoadEditPortals
EXTRN	?WorldTextureSet@@3JA:DWORD			; WorldTextureSet
EXTRN	?FxTextureSet@@3JA:DWORD			; FxTextureSet
EXTRN	__imp__wsprintfA:NEAR
;	COMDAT ??_C@_0O@PEANDJCI@gfx?2font1?4bmp?$AA@
CONST	SEGMENT
??_C@_0O@PEANDJCI@gfx?2font1?4bmp?$AA@ DB 'gfx\font1.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HCJJELIG@gfx?2font2?4bmp?$AA@
CONST	SEGMENT
??_C@_0O@HCJJELIG@gfx?2font2?4bmp?$AA@ DB 'gfx\font2.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NPEAPNH@gfx?2shadow?4bmp?$AA@
CONST	SEGMENT
??_C@_0P@NPEAPNH@gfx?2shadow?4bmp?$AA@ DB 'gfx\shadow.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IPIJIIBB@gfx?2fxpage1?4bmp?$AA@
CONST	SEGMENT
??_C@_0BA@IPIJIIBB@gfx?2fxpage1?4bmp?$AA@ DB 'gfx\fxpage1.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JBNPKLP@gfx?2fxpage2?4bmp?$AA@
CONST	SEGMENT
??_C@_0BA@JBNPKLP@gfx?2fxpage2?4bmp?$AA@ DB 'gfx\fxpage2.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MCEBCJBK@gfx?2fxpage3?4bmp?$AA@
CONST	SEGMENT
??_C@_0BA@MCEBCJBK@gfx?2fxpage3?4bmp?$AA@ DB 'gfx\fxpage3.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BCCGIDGB@levels?2?$CFs?2?$CFs?$CFc?4bmp?$AA@
CONST	SEGMENT
??_C@_0BD@BCCGIDGB@levels?2?$CFs?2?$CFs?$CFc?4bmp?$AA@ DB 'levels\%s\%s%c'
	DB	'.bmp', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NDPLAFDJ@vis?$AA@
CONST	SEGMENT
??_C@_03NDPLAFDJ@vis?$AA@ DB 'vis', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IINIKNLB@rim?$AA@
CONST	SEGMENT
??_C@_03IINIKNLB@rim?$AA@ DB 'rim', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HMIODOLK@fin?$AA@
CONST	SEGMENT
??_C@_03HMIODOLK@fin?$AA@ DB 'fin', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GAOMKMFM@ncp?$AA@
CONST	SEGMENT
??_C@_03GAOMKMFM@ncp?$AA@ DB 'ncp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@IPIKBCOC@Level?5has?5no?5Collision?5Polygon?5d@
CONST	SEGMENT
??_C@_0CE@IPIKBCOC@Level?5has?5no?5Collision?5Polygon?5d@ DB 'Level has n'
	DB	'o Collision Polygon data', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05NAOIJFC@Error?$AA@
CONST	SEGMENT
??_C@_05NAOIJFC@Error?$AA@ DB 'Error', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OAPPGMGN@Collision?5polygon?5data?5corrupt?$AA@
CONST	SEGMENT
??_C@_0BP@OAPPGMGN@Collision?5polygon?5data?5corrupt?$AA@ DB 'Collision p'
	DB	'olygon data corrupt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@OKPOEPAO@No?5collision?5grid?5information?$AA@
CONST	SEGMENT
??_C@_0BO@OKPOEPAO@No?5collision?5grid?5information?$AA@ DB 'No collision'
	DB	' grid information', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07KGMMFLDN@Warning?$AA@
CONST	SEGMENT
??_C@_07KGMMFLDN@Warning?$AA@ DB 'Warning', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03KDBOCEAF@lit?$AA@
CONST	SEGMENT
??_C@_03KDBOCEAF@lit?$AA@ DB 'lit', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NELGANAE@fob?$AA@
CONST	SEGMENT
??_C@_03NELGANAE@fob?$AA@ DB 'fob', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KGCDCHED@taz?$AA@
CONST	SEGMENT
??_C@_03KGCDCHED@taz?$AA@ DB 'taz', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HCJNGPAC@fan?$AA@
CONST	SEGMENT
??_C@_03HCJNGPAC@fan?$AA@ DB 'fan', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NJKMHLPI@tri?$AA@
CONST	SEGMENT
??_C@_03NJKMHLPI@tri?$AA@ DB 'tri', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GOGOMMPD@cam?$AA@
CONST	SEGMENT
??_C@_03GOGOMMPD@cam?$AA@ DB 'cam', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IAKKBENL@fld?$AA@
CONST	SEGMENT
??_C@_03IAKKBENL@fld?$AA@ DB 'fld', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OLAGBHBG@por?$AA@
CONST	SEGMENT
??_C@_03OLAGBHBG@por?$AA@ DB 'por', 00H			; `string'
; Function compile flags: /Odt /ZI
CONST	ENDS
;	COMDAT ?s_LoadTrackData@@YAXXZ
_TEXT	SEGMENT
_fp$ = -136						; size = 4
_buf$ = -132						; size = 128
_ii$ = -1						; size = 1
?s_LoadTrackData@@YAXXZ PROC NEAR			; s_LoadTrackData, COMDAT

; 288  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 200				; 000000c8H
	push	ebx
	push	esi
	push	edi

; 289  : 	char	ii;
; 290  : 	char	buf[128];
; 291  : 	FILE	*fp;
; 292  : 
; 293  : 	// Initialise the field array (must be done before any objects with fields are loaded or initialised)
; 294  : 	InitFields();

	call	?InitFields@@YAXXZ			; InitFields

; 295  : 
; 296  : 	// set start pos / rot /grid
; 297  : 	if (GameSettings.Reversed)

	cmp	DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+12, 0
	je	SHORT $L83053

; 298  : 	{
; 299  : 		LEV_StartPos = LevelInf[GameSettings.Level].ReverseStartPos;

	mov	eax, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+156]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR ?LEV_StartPos@@3UVectorStruct@@A, eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR ?LEV_StartPos@@3UVectorStruct@@A+4, ecx
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR ?LEV_StartPos@@3UVectorStruct@@A+8, edx

; 300  : 		LEV_StartRot = LevelInf[GameSettings.Level].ReverseStartRot;

	mov	eax, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	edx, DWORD PTR [ecx+eax+172]
	mov	DWORD PTR ?LEV_StartRot@@3MA, edx

; 301  : 		LEV_StartGrid = LevelInf[GameSettings.Level].ReverseStartGrid;

	mov	eax, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	edx, DWORD PTR [ecx+eax+180]
	mov	DWORD PTR ?LEV_StartGrid@@3JA, edx	; LEV_StartGrid

; 302  : 	}
; 303  : 	else

	jmp	SHORT $L83054
$L83053:

; 304  : 	{
; 305  : 		LEV_StartPos = LevelInf[GameSettings.Level].NormalStartPos;

	mov	eax, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+144]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR ?LEV_StartPos@@3UVectorStruct@@A, eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR ?LEV_StartPos@@3UVectorStruct@@A+4, ecx
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR ?LEV_StartPos@@3UVectorStruct@@A+8, edx

; 306  : 		LEV_StartRot = LevelInf[GameSettings.Level].NormalStartRot;

	mov	eax, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	edx, DWORD PTR [ecx+eax+168]
	mov	DWORD PTR ?LEV_StartRot@@3MA, edx

; 307  : 		LEV_StartGrid = LevelInf[GameSettings.Level].NormalStartGrid;

	mov	eax, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	edx, DWORD PTR [ecx+eax+176]
	mov	DWORD PTR ?LEV_StartGrid@@3JA, edx	; LEV_StartGrid
$L83054:

; 308  : 	}
; 309  : 
; 310  : 	// Load misc textures
; 311  : 	LoadMipTexture("gfx\\font1.bmp", TPAGE_FONT, 256, 256, 0, 1);

	push	1
	push	0
	push	256					; 00000100H
	push	256					; 00000100H
	push	22					; 00000016H
	push	OFFSET FLAT:??_C@_0O@PEANDJCI@gfx?2font1?4bmp?$AA@
	call	?LoadMipTexture@@YA_NPADDJJJJ@Z		; LoadMipTexture
	add	esp, 24					; 00000018H

; 312  : 	LoadMipTexture("gfx\\font2.bmp", TPAGE_BIGFONT, 256, 256, 0, 1);

	push	1
	push	0
	push	256					; 00000100H
	push	256					; 00000100H
	push	23					; 00000017H
	push	OFFSET FLAT:??_C@_0O@HCJJELIG@gfx?2font2?4bmp?$AA@
	call	?LoadMipTexture@@YA_NPADDJJJJ@Z		; LoadMipTexture
	add	esp, 24					; 00000018H

; 313  : 
; 314  : 	LoadTextureClever(LevelInf[GameSettings.Level].EnvStill, TPAGE_ENVSTILL, 256, 256, 0, FxTextureSet, TRUE);

	push	1
	mov	eax, DWORD PTR ?FxTextureSet@@3JA	; FxTextureSet
	push	eax
	push	0
	push	256					; 00000100H
	push	256					; 00000100H
	push	24					; 00000018H
	mov	ecx, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	ecx, 232				; 000000e8H
	mov	edx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	eax, DWORD PTR [edx+ecx+80]
	push	eax
	call	?LoadTextureClever@@YA_NPADDJJJJJ@Z	; LoadTextureClever
	add	esp, 28					; 0000001cH

; 315  : 	LoadTextureClever(LevelInf[GameSettings.Level].EnvRoll, TPAGE_ENVROLL, 256, 256, 0, FxTextureSet, TRUE);

	push	1
	mov	eax, DWORD PTR ?FxTextureSet@@3JA	; FxTextureSet
	push	eax
	push	0
	push	256					; 00000100H
	push	256					; 00000100H
	push	25					; 00000019H
	mov	ecx, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	ecx, 232				; 000000e8H
	mov	edx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	eax, DWORD PTR [edx+ecx+112]
	push	eax
	call	?LoadTextureClever@@YA_NPADDJJJJJ@Z	; LoadTextureClever
	add	esp, 28					; 0000001cH

; 316  : 	LoadTextureClever("gfx\\shadow.bmp", TPAGE_SHADOW, 256, 256, 0, FxTextureSet, TRUE);

	push	1
	mov	eax, DWORD PTR ?FxTextureSet@@3JA	; FxTextureSet
	push	eax
	push	0
	push	256					; 00000100H
	push	256					; 00000100H
	push	26					; 0000001aH
	push	OFFSET FLAT:??_C@_0P@NPEAPNH@gfx?2shadow?4bmp?$AA@
	call	?LoadTextureClever@@YA_NPADDJJJJJ@Z	; LoadTextureClever
	add	esp, 28					; 0000001cH

; 317  : 
; 318  : 	LoadMipTexture("gfx\\fxpage1.bmp", TPAGE_FX1, 256, 256, 0, 1);

	push	1
	push	0
	push	256					; 00000100H
	push	256					; 00000100H
	push	27					; 0000001bH
	push	OFFSET FLAT:??_C@_0BA@IPIJIIBB@gfx?2fxpage1?4bmp?$AA@
	call	?LoadMipTexture@@YA_NPADDJJJJ@Z		; LoadMipTexture
	add	esp, 24					; 00000018H

; 319  : 	LoadMipTexture("gfx\\fxpage2.bmp", TPAGE_FX2, 256, 256, 0, 1);

	push	1
	push	0
	push	256					; 00000100H
	push	256					; 00000100H
	push	28					; 0000001cH
	push	OFFSET FLAT:??_C@_0BA@JBNPKLP@gfx?2fxpage2?4bmp?$AA@
	call	?LoadMipTexture@@YA_NPADDJJJJ@Z		; LoadMipTexture
	add	esp, 24					; 00000018H

; 320  : 	LoadMipTexture("gfx\\fxpage3.bmp", TPAGE_FX3, 256, 256, 0, 1);

	push	1
	push	0
	push	256					; 00000100H
	push	256					; 00000100H
	push	29					; 0000001dH
	push	OFFSET FLAT:??_C@_0BA@MCEBCJBK@gfx?2fxpage3?4bmp?$AA@
	call	?LoadMipTexture@@YA_NPADDJJJJ@Z		; LoadMipTexture
	add	esp, 24					; 00000018H

; 321  : 
; 322  : 	// Load all world textures
; 323  : 	for (ii = 0 ; ii < TPAGE_WORLD_NUM ; ii++)

	mov	BYTE PTR _ii$[ebp], 0
	jmp	SHORT $L83061
$L83062:
	mov	al, BYTE PTR _ii$[ebp]
	add	al, 1
	mov	BYTE PTR _ii$[ebp], al
$L83061:
	movsx	eax, BYTE PTR _ii$[ebp]
	cmp	eax, 10					; 0000000aH
	jge	SHORT $L83063

; 324  : 	{
; 325  : 		wsprintf(buf, "levels\\%s\\%s%c.bmp", LevelInf[GameSettings.Level].Dir, LevelInf[GameSettings.Level].Dir, ii + 'a');

	movsx	eax, BYTE PTR _ii$[ebp]
	add	eax, 97					; 00000061H
	push	eax
	mov	ecx, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	ecx, 232				; 000000e8H
	add	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	push	ecx
	mov	edx, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	edx, 232				; 000000e8H
	add	edx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	push	edx
	push	OFFSET FLAT:??_C@_0BD@BCCGIDGB@levels?2?$CFs?2?$CFs?$CFc?4bmp?$AA@
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	DWORD PTR __imp__wsprintfA
	add	esp, 20					; 00000014H

; 326  : 		LoadTextureClever(buf, ii, 256, 256, 0, WorldTextureSet, TRUE);

	push	1
	mov	eax, DWORD PTR ?WorldTextureSet@@3JA	; WorldTextureSet
	push	eax
	push	0
	push	256					; 00000100H
	push	256					; 00000100H
	mov	cl, BYTE PTR _ii$[ebp]
	push	ecx
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	?LoadTextureClever@@YA_NPADDJJJJJ@Z	; LoadTextureClever
	add	esp, 28					; 0000001cH

; 327  : 	}

	jmp	SHORT $L83062
$L83063:

; 328  : 
; 329  : 	// Load world model
; 330  : 	SetMirrorParams(&LevelInf[GameSettings.Level]);

	mov	eax, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	eax, 232				; 000000e8H
	add	eax, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	push	eax
	call	?SetMirrorParams@@YAXPAULEVELINFO@@@Z	; SetMirrorParams
	add	esp, 4

; 331  : 	LoadWorld(GetLevelFilename("w", FILENAME_MAKE_BODY));

	push	1
	push	OFFSET FLAT:??_C@_01NOFIACDB@w?$AA@
	call	?GetLevelFilename@@YAPADPADJ@Z		; GetLevelFilename
	add	esp, 8
	push	eax
	call	?LoadWorld@@YA_NPAD@Z			; LoadWorld
	add	esp, 4

; 332  : 
; 333  : 	// Load visiboxes (must be before instances!)
; 334  : 	InitVisiBoxes();

	call	?InitVisiBoxes@@YAXXZ			; InitVisiBoxes

; 335  : 	LoadVisiBoxes(GetLevelFilename("vis", FILENAME_MAKE_BODY | FILENAME_GAME_SETTINGS));

	push	3
	push	OFFSET FLAT:??_C@_03NDPLAFDJ@vis?$AA@
	call	?GetLevelFilename@@YAPADPADJ@Z		; GetLevelFilename
	add	esp, 8
	push	eax
	call	?LoadVisiBoxes@@YAXPAD@Z		; LoadVisiBoxes
	add	esp, 4

; 336  : 	SetPermVisiBoxes();

	call	?SetPermVisiBoxes@@YAXXZ		; SetPermVisiBoxes

; 337  : 
; 338  : 	// load mirror planes (must be before instances)
; 339  : 	LoadMirrorPlanes(GetLevelFilename("rim", FILENAME_MAKE_BODY));

	push	1
	push	OFFSET FLAT:??_C@_03IINIKNLB@rim?$AA@
	call	?GetLevelFilename@@YAPADPADJ@Z		; GetLevelFilename
	add	esp, 8
	push	eax
	call	?LoadMirrorPlanes@@YA_NPAD@Z		; LoadMirrorPlanes
	add	esp, 4

; 340  : 	MirrorWorldPolys();

	call	?MirrorWorldPolys@@YAXXZ		; MirrorWorldPolys

; 341  : 	SetWorldMirror();

	call	?SetWorldMirror@@YAXXZ			; SetWorldMirror

; 342  : 
; 343  : 	// load instances (must be before lights!)
; 344  : 	LoadInstanceModels();

	call	?LoadInstanceModels@@YAXXZ		; LoadInstanceModels

; 345  : 	LoadInstances(GetLevelFilename("fin", FILENAME_MAKE_BODY | FILENAME_GAME_SETTINGS));

	push	3
	push	OFFSET FLAT:??_C@_03HMIODOLK@fin?$AA@
	call	?GetLevelFilename@@YAPADPADJ@Z		; GetLevelFilename
	add	esp, 8
	push	eax
	call	?LoadInstances@@YAXPAD@Z		; LoadInstances
	add	esp, 4

; 346  : 	BuildInstanceCollPolys();

	call	?BuildInstanceCollPolys@@YAXXZ		; BuildInstanceCollPolys

; 347  : 
; 348  : 	// Load collision polygon data (must be after instances!)
; 349  : 	if ((fp = fopen(GetLevelFilename("ncp", FILENAME_MAKE_BODY), "rb")) == NULL) {

	push	OFFSET FLAT:??_C@_02JDPG@rb?$AA@
	push	1
	push	OFFSET FLAT:??_C@_03GAOMKMFM@ncp?$AA@
	call	?GetLevelFilename@@YAPADPADJ@Z		; GetLevelFilename
	add	esp, 8
	push	eax
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _fp$[ebp], eax
	cmp	DWORD PTR _fp$[ebp], 0
	jne	SHORT $L83069

; 350  : 		COL_WorldCollPoly = NULL;

	mov	DWORD PTR ?COL_WorldCollPoly@@3PAUCollPolyStruct@@A, 0 ; COL_WorldCollPoly

; 351  : 		COL_NWorldCollPolys = 0;

	mov	WORD PTR ?COL_NWorldCollPolys@@3FA, 0	; COL_NWorldCollPolys

; 352  : 		Box("Error", "Level has no Collision Polygon data", MB_OK | MB_ICONSTOP);

	push	16					; 00000010H
	push	OFFSET FLAT:??_C@_0CE@IPIKBCOC@Level?5has?5no?5Collision?5Polygon?5d@
	push	OFFSET FLAT:??_C@_05NAOIJFC@Error?$AA@
	call	?Box@@YAJPAD0J@Z			; Box
	add	esp, 12					; 0000000cH

; 353  : 		QuitGame = TRUE;

	mov	BYTE PTR ?QuitGame@@3DA, 1		; QuitGame

; 354  : 		return;

	jmp	$L83049
$L83069:

; 355  : 	}
; 356  : 	if ((COL_WorldCollPoly = LoadNewCollPolys(fp, &COL_NWorldCollPolys)) == NULL) {

	push	OFFSET FLAT:?COL_NWorldCollPolys@@3FA	; COL_NWorldCollPolys
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	?LoadNewCollPolys@@YAPAUCollPolyStruct@@PAU_iobuf@@PAF@Z ; LoadNewCollPolys
	add	esp, 8
	mov	DWORD PTR ?COL_WorldCollPoly@@3PAUCollPolyStruct@@A, eax ; COL_WorldCollPoly
	cmp	DWORD PTR ?COL_WorldCollPoly@@3PAUCollPolyStruct@@A, 0 ; COL_WorldCollPoly
	jne	SHORT $L83074

; 357  : 		Box("Error", "Collision polygon data corrupt", MB_OK | MB_ICONSTOP);

	push	16					; 00000010H
	push	OFFSET FLAT:??_C@_0BP@OAPPGMGN@Collision?5polygon?5data?5corrupt?$AA@
	push	OFFSET FLAT:??_C@_05NAOIJFC@Error?$AA@
	call	?Box@@YAJPAD0J@Z			; Box
	add	esp, 12					; 0000000cH

; 358  : 		fclose(fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fclose
	add	esp, 4

; 359  : 		QuitGame = TRUE;

	mov	BYTE PTR ?QuitGame@@3DA, 1		; QuitGame

; 360  : 		return;

	jmp	$L83049
$L83074:

; 361  : 	}
; 362  : 	// Grid up the collision polygons (and include the instance collisions)
; 363  : 	if (!LoadGridInfo(fp)) {

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	?LoadGridInfo@@YA_NPAU_iobuf@@@Z	; LoadGridInfo
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $L83076

; 364  : 		Box("Warning", "No collision grid information", MB_OK | MB_ICONEXCLAMATION);

	push	48					; 00000030H
	push	OFFSET FLAT:??_C@_0BO@OKPOEPAO@No?5collision?5grid?5information?$AA@
	push	OFFSET FLAT:??_C@_07KGMMFLDN@Warning?$AA@
	call	?Box@@YAJPAD0J@Z			; Box
	add	esp, 12					; 0000000cH

; 365  : 		fclose(fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fclose
	add	esp, 4

; 366  : 		return;

	jmp	$L83049
$L83076:

; 367  : 	}
; 368  : 	fclose(fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fclose
	add	esp, 4

; 369  : 
; 370  : 	// Load lights
; 371  : 	InitLights();

	call	?InitLights@@YAXXZ			; InitLights

; 372  : 	LoadLights(GetLevelFilename("lit", FILENAME_MAKE_BODY | FILENAME_GAME_SETTINGS));

	push	3
	push	OFFSET FLAT:??_C@_03KDBOCEAF@lit?$AA@
	call	?GetLevelFilename@@YAPADPADJ@Z		; GetLevelFilename
	add	esp, 8
	push	eax
	call	?LoadLights@@YAXPAD@Z			; LoadLights
	add	esp, 4

; 373  : 
; 374  : 	// load sfx
; 375  : 	LoadSfx(LevelInf[GameSettings.Level].Dir);

	mov	eax, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	eax, 232				; 000000e8H
	add	eax, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	push	eax
	call	?LoadSfx@@YAJPAD@Z			; LoadSfx
	add	esp, 4

; 376  : 
; 377  : 	// load objects
; 378  : 	LoadObjects(GetLevelFilename("fob", FILENAME_MAKE_BODY | FILENAME_GAME_SETTINGS));

	push	3
	push	OFFSET FLAT:??_C@_03NELGANAE@fob?$AA@
	call	?GetLevelFilename@@YAPADPADJ@Z		; GetLevelFilename
	add	esp, 8
	push	eax
	call	?LoadObjects@@YAXPAD@Z			; LoadObjects
	add	esp, 4

; 379  : 
; 380  : 	// load ai zones
; 381  : 	LoadAiZones(GetLevelFilename("taz", FILENAME_MAKE_BODY | FILENAME_GAME_SETTINGS));

	push	3
	push	OFFSET FLAT:??_C@_03KGCDCHED@taz?$AA@
	call	?GetLevelFilename@@YAPADPADJ@Z		; GetLevelFilename
	add	esp, 8
	push	eax
	call	?LoadAiZones@@YAXPAD@Z			; LoadAiZones
	add	esp, 4

; 382  : 
; 383  : 	// load ai nodes (must be after ai zones)
; 384  : 	LoadAiNodes(GetLevelFilename("fan", FILENAME_MAKE_BODY | FILENAME_GAME_SETTINGS));

	push	3
	push	OFFSET FLAT:??_C@_03HCJNGPAC@fan?$AA@
	call	?GetLevelFilename@@YAPADPADJ@Z		; GetLevelFilename
	add	esp, 8
	push	eax
	call	?LoadAiNodes@@YAXPAD@Z			; LoadAiNodes
	add	esp, 4

; 385  : 	ZoneAiNodes();

	call	?ZoneAiNodes@@YAXXZ			; ZoneAiNodes

; 386  : 
; 387  : 	// load triggers
; 388  : 	LoadTriggers(GetLevelFilename("tri", FILENAME_MAKE_BODY | FILENAME_GAME_SETTINGS));

	push	3
	push	OFFSET FLAT:??_C@_03NJKMHLPI@tri?$AA@
	call	?GetLevelFilename@@YAPADPADJ@Z		; GetLevelFilename
	add	esp, 8
	push	eax
	call	?LoadTriggers@@YAXPAD@Z			; LoadTriggers
	add	esp, 4

; 389  : 
; 390  : 	// load force fields
; 391  : 	LoadLevelFields(&LevelInf[GameSettings.Level]);

	mov	eax, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	eax, 232				; 000000e8H
	add	eax, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	push	eax
	call	?LoadLevelFields@@YA_NPAULEVELINFO@@@Z	; LoadLevelFields
	add	esp, 4

; 392  : 
; 393  : 	// load best track times
; 394  : 	LoadTrackTimes(&LevelInf[GameSettings.Level]);

	mov	eax, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	eax, 232				; 000000e8H
	add	eax, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	push	eax
	call	?LoadTrackTimes@@YAXPAULEVELINFO@@@Z	; LoadTrackTimes
	add	esp, 4

; 395  : 
; 396  : 	// Load the camera nodes if there are any
; 397  : 	if ((fp = fopen(GetLevelFilename("cam", FILENAME_MAKE_BODY), "rb")) != NULL) {

	push	OFFSET FLAT:??_C@_02JDPG@rb?$AA@
	push	1
	push	OFFSET FLAT:??_C@_03GOGOMMPD@cam?$AA@
	call	?GetLevelFilename@@YAPADPADJ@Z		; GetLevelFilename
	add	esp, 8
	push	eax
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _fp$[ebp], eax
	cmp	DWORD PTR _fp$[ebp], 0
	je	SHORT $L83084

; 398  : 		CAM_NCameraNodes = LoadCameraNodes(fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	?LoadCameraNodes@@YAJPAU_iobuf@@@Z	; LoadCameraNodes
	add	esp, 4
	mov	DWORD PTR ?CAM_NCameraNodes@@3JA, eax	; CAM_NCameraNodes

; 399  : 		fclose(fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fclose
	add	esp, 4

; 400  : 	} else {

	jmp	SHORT $L83086
$L83084:

; 401  : 		CAM_NCameraNodes = 0;

	mov	DWORD PTR ?CAM_NCameraNodes@@3JA, 0	; CAM_NCameraNodes
$L83086:

; 402  : 	}
; 403  : 
; 404  : 	// load edit visicock models
; 405  : 	if (EditMode == EDIT_VISIBOXES)

	cmp	DWORD PTR ?EditMode@@3JA, 2		; EditMode
	jne	SHORT $L83087

; 406  : 	{
; 407  : 		LoadEditAiNodeModels();

	call	?LoadEditAiNodeModels@@YAXXZ		; LoadEditAiNodeModels
$L83087:

; 408  : 	}
; 409  : 
; 410  : 	// Load edit lights
; 411  : 	if (EditMode == EDIT_LIGHTS)

	cmp	DWORD PTR ?EditMode@@3JA, 1		; EditMode
	jne	SHORT $L83088

; 412  : 	{
; 413  : 		LoadEditLightModels();

	call	?LoadEditLightModels@@YAXXZ		; LoadEditLightModels
$L83088:

; 414  : 	}
; 415  : 
; 416  : 	// Load edit objects
; 417  : 	if (EditMode == EDIT_OBJECTS)

	cmp	DWORD PTR ?EditMode@@3JA, 3		; EditMode
	jne	SHORT $L83089

; 418  : 	{
; 419  : 		InitFileObjects();

	call	?InitFileObjects@@YAJXZ			; InitFileObjects

; 420  : 		LoadFileObjects(GetLevelFilename("fob", FILENAME_MAKE_BODY | FILENAME_GAME_SETTINGS));

	push	3
	push	OFFSET FLAT:??_C@_03NELGANAE@fob?$AA@
	call	?GetLevelFilename@@YAPADPADJ@Z		; GetLevelFilename
	add	esp, 8
	push	eax
	call	?LoadFileObjects@@YAXPAD@Z		; LoadFileObjects
	add	esp, 4

; 421  : 		LoadFileObjectModels();

	call	?LoadFileObjectModels@@YAXXZ		; LoadFileObjectModels
$L83089:

; 422  : 	}
; 423  : 
; 424  : 	// load edit visicock
; 425  : 	if (EditMode == EDIT_VISIBOXES)

	cmp	DWORD PTR ?EditMode@@3JA, 2		; EditMode
	jne	SHORT $L83090

; 426  : 	{
; 427  : 		if (!AI_Testing) LoadEditAiNodeModels();

	cmp	DWORD PTR ?AI_Testing@@3JA, 0		; AI_Testing
	jne	SHORT $L83090
	call	?LoadEditAiNodeModels@@YAXXZ		; LoadEditAiNodeModels
$L83090:

; 428  : 	}
; 429  : 
; 430  : 	// Load edit ai nodes
; 431  : 	if (EditMode == EDIT_AINODES)

	cmp	DWORD PTR ?EditMode@@3JA, 5		; EditMode
	jne	SHORT $L83092

; 432  : 	{
; 433  : 		InitEditAiNodes();

	call	?InitEditAiNodes@@YAXXZ			; InitEditAiNodes

; 434  : 		LoadEditAiNodes(GetLevelFilename("fan", FILENAME_MAKE_BODY | FILENAME_GAME_SETTINGS));

	push	3
	push	OFFSET FLAT:??_C@_03HCJNGPAC@fan?$AA@
	call	?GetLevelFilename@@YAPADPADJ@Z		; GetLevelFilename
	add	esp, 8
	push	eax
	call	?LoadEditAiNodes@@YAXPAD@Z		; LoadEditAiNodes
	add	esp, 4

; 435  : 		if (!AI_Testing) LoadEditAiNodeModels();

	cmp	DWORD PTR ?AI_Testing@@3JA, 0		; AI_Testing
	jne	SHORT $L83092
	call	?LoadEditAiNodeModels@@YAXXZ		; LoadEditAiNodeModels
$L83092:

; 436  : 	}
; 437  : 
; 438  : 	// Load edit track zones
; 439  : 	if (EditMode == EDIT_ZONES)

	cmp	DWORD PTR ?EditMode@@3JA, 6		; EditMode
	jne	SHORT $L83094

; 440  : 	{
; 441  : 		InitFileZones();

	call	?InitFileZones@@YAXXZ			; InitFileZones

; 442  : 		LoadFileZones(GetLevelFilename("taz", FILENAME_MAKE_BODY | FILENAME_GAME_SETTINGS));

	push	3
	push	OFFSET FLAT:??_C@_03KGCDCHED@taz?$AA@
	call	?GetLevelFilename@@YAPADPADJ@Z		; GetLevelFilename
	add	esp, 8
	push	eax
	call	?LoadFileZones@@YAXPAD@Z		; LoadFileZones
	add	esp, 4

; 443  : 		if (!AI_Testing) LoadEditAiNodeModels();

	cmp	DWORD PTR ?AI_Testing@@3JA, 0		; AI_Testing
	jne	SHORT $L83094
	call	?LoadEditAiNodeModels@@YAXXZ		; LoadEditAiNodeModels
$L83094:

; 444  : 	}
; 445  : 
; 446  : 	// Load edit triggers
; 447  : 	if (EditMode == EDIT_TRIGGERS)

	cmp	DWORD PTR ?EditMode@@3JA, 7		; EditMode
	jne	SHORT $L83096

; 448  : 	{
; 449  : 		InitFileTriggers();

	call	?InitFileTriggers@@YAXXZ		; InitFileTriggers

; 450  : 		LoadFileTriggers(GetLevelFilename("tri", FILENAME_MAKE_BODY | FILENAME_GAME_SETTINGS));

	push	3
	push	OFFSET FLAT:??_C@_03NJKMHLPI@tri?$AA@
	call	?GetLevelFilename@@YAPADPADJ@Z		; GetLevelFilename
	add	esp, 8
	push	eax
	call	?LoadFileTriggers@@YAXPAD@Z		; LoadFileTriggers
	add	esp, 4
$L83096:

; 451  : 	}
; 452  : 
; 453  : 	// Load edit cam nodes
; 454  : 	if (EditMode == EDIT_CAM || EditMode == EDIT_TRIGGERS)

	cmp	DWORD PTR ?EditMode@@3JA, 8		; EditMode
	je	SHORT $L83098
	cmp	DWORD PTR ?EditMode@@3JA, 7		; EditMode
	jne	SHORT $L83097
$L83098:

; 455  : 	{
; 456  : 		InitEditCamNodes();

	call	?InitEditCamNodes@@YAXXZ		; InitEditCamNodes

; 457  : 		LoadEditCamNodes(GetLevelFilename("cam", FILENAME_MAKE_BODY | FILENAME_GAME_SETTINGS));

	push	3
	push	OFFSET FLAT:??_C@_03GOGOMMPD@cam?$AA@
	call	?GetLevelFilename@@YAPADPADJ@Z		; GetLevelFilename
	add	esp, 8
	push	eax
	call	?LoadEditCamNodes@@YAXPAD@Z		; LoadEditCamNodes
	add	esp, 4

; 458  : 		LoadEditCamNodeModels();

	call	?LoadEditCamNodeModels@@YAXXZ		; LoadEditCamNodeModels
$L83097:

; 459  : 	}
; 460  : 
; 461  : 	// Load edit fields
; 462  : 	if (EditMode == EDIT_FIELDS)

	cmp	DWORD PTR ?EditMode@@3JA, 9		; EditMode
	jne	SHORT $L83099

; 463  : 	{
; 464  : 		InitFileFields();

	call	?InitFileFields@@YAXXZ			; InitFileFields

; 465  : 		LoadFileFields(GetLevelFilename("fld", FILENAME_MAKE_BODY | FILENAME_GAME_SETTINGS));

	push	3
	push	OFFSET FLAT:??_C@_03IAKKBENL@fld?$AA@
	call	?GetLevelFilename@@YAPADPADJ@Z		; GetLevelFilename
	add	esp, 8
	push	eax
	call	?LoadFileFields@@YAXPAD@Z		; LoadFileFields
	add	esp, 4

; 466  : 		LoadFileFieldModels();

	call	?LoadFileFieldModels@@YAXXZ		; LoadFileFieldModels
$L83099:

; 467  : 	}
; 468  : 
; 469  : 	// Load edit portals
; 470  : 	if (EditMode == EDIT_PORTALS)

	cmp	DWORD PTR ?EditMode@@3JA, 10		; EditMode, 0000000aH
	jne	SHORT $L83049

; 471  : 	{
; 472  : 		LoadEditPortals(GetLevelFilename("por", FILENAME_MAKE_BODY | FILENAME_GAME_SETTINGS));

	push	3
	push	OFFSET FLAT:??_C@_03OLAGBHBG@por?$AA@
	call	?GetLevelFilename@@YAPADPADJ@Z		; GetLevelFilename
	add	esp, 8
	push	eax
	call	?LoadEditPortals@@YAXPAD@Z		; LoadEditPortals
	add	esp, 4
$L83049:

; 473  : 	}
; 474  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?s_LoadTrackData@@YAXXZ ENDP				; s_LoadTrackData
_TEXT	ENDS
PUBLIC	??_C@_0L@EMLOACPE@levels?2?$CK?4?$CK?$AA@	; `string'
PUBLIC	??_C@_0CB@OLNOFNJP@Can?8t?5find?5any?5level?5directories@ ; `string'
PUBLIC	??_C@_05MBDEGLCK@ERROR?$AA@			; `string'
PUBLIC	??_C@_01LFCBOECM@?4?$AA@			; `string'
PUBLIC	??_C@_02DJGKEECL@?4?4?$AA@			; `string'
PUBLIC	??_C@_0BB@DBMFEKGK@levels?2?$CFs?2?$CFs?4inf?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??FindLevels@@YAXXZ@4JA		; `FindLevels'::`2'::__LINE__Var
PUBLIC	??_C@_0IK@MEDHFMBD@c?3?2documents?5and?5settings?2jarhea@ ; `string'
PUBLIC	??_C@_0CC@IDODPALJ@Can?8t?5alloc?5memory?5for?5level?5inf@ ; `string'
PUBLIC	??_C@_08OBKBFOJH@Untitled?$AA@			; `string'
PUBLIC	??_C@_0BB@MDOPLCBO@gfx?2envstill?4bmp?$AA@	; `string'
PUBLIC	??_C@_0BA@NAGKBPNF@gfx?2envroll?4bmp?$AA@	; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	??_C@_04IPKHEEB@NAME?$AA@			; `string'
PUBLIC	?FindLevels@@YAXXZ				; FindLevels
PUBLIC	??_C@_08HFDINBAD@ENVSTILL?$AA@			; `string'
PUBLIC	??_C@_07JBKLKJLM@ENVROLL?$AA@			; `string'
PUBLIC	??_C@_08MMLBBOCM@STARTPOS?$AA@			; `string'
PUBLIC	??_C@_08OEKJENGB@?$CFf?5?$CFf?5?$CFf?$AA@	; `string'
PUBLIC	??_C@_0M@KCMEHBFN@STARTPOSREV?$AA@		; `string'
PUBLIC	??_C@_08CJPJEAGA@STARTROT?$AA@			; `string'
PUBLIC	??_C@_02NJPGOMH@?$CFf?$AA@			; `string'
PUBLIC	??_C@_0M@IHHLLMGE@STARTROTREV?$AA@		; `string'
PUBLIC	??_C@_09MHADLFIK@STARTGRID?$AA@			; `string'
PUBLIC	??_C@_02DPKJAMEF@?$CFd?$AA@			; `string'
PUBLIC	??_C@_0N@BHKNOHAG@STARTGRIDREV?$AA@		; `string'
PUBLIC	??_C@_07NNHEBCMK@FARCLIP?$AA@			; `string'
PUBLIC	??_C@_08BAKBEEOO@FOGSTART?$AA@			; `string'
PUBLIC	??_C@_08LEIJKPJO@FOGCOLOR?$AA@			; `string'
PUBLIC	??_C@_0M@HMBPFMCO@?$CFld?5?$CFld?5?$CFld?$AA@	; `string'
PUBLIC	??_C@_0N@GIFOHMFJ@VERTFOGSTART?$AA@		; `string'
PUBLIC	??_C@_0L@IAPFPPDL@VERTFOGEND?$AA@		; `string'
PUBLIC	??_C@_0M@BABMLLHH@WORLDRGBPER?$AA@		; `string'
PUBLIC	??_C@_03JALODAI@?$CFld?$AA@			; `string'
PUBLIC	??_C@_0M@KDMFOCKL@MODELRGBPER?$AA@		; `string'
PUBLIC	??_C@_0P@DFJILMPM@INSTANCERGBPER?$AA@		; `string'
PUBLIC	??_C@_07MHJKEOHF@MIRRORS?$AA@			; `string'
PUBLIC	??_C@_0N@CBINCAEI@?$CFld?5?$CFf?5?$CFf?5?$CFf?$AA@ ; `string'
EXTRN	_fgetc:NEAR
EXTRN	_fscanf:NEAR
EXTRN	__imp__FindFirstFileA@8:NEAR
EXTRN	__imp__FindNextFileA@8:NEAR
EXTRN	_toupper:NEAR
EXTRN	__chkstk:NEAR
EXTRN	?DebugMalloc@@YAPAXIHPAD@Z:NEAR			; DebugMalloc
EXTRN	_memcpy:NEAR
EXTRN	_strcmp:NEAR
EXTRN	_strlen:NEAR
EXTRN	__imp__FindClose@4:NEAR
;	COMDAT ??_C@_0L@EMLOACPE@levels?2?$CK?4?$CK?$AA@
CONST	SEGMENT
??_C@_0L@EMLOACPE@levels?2?$CK?4?$CK?$AA@ DB 'levels\*.*', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@OLNOFNJP@Can?8t?5find?5any?5level?5directories@
CONST	SEGMENT
??_C@_0CB@OLNOFNJP@Can?8t?5find?5any?5level?5directories@ DB 'Can''t find'
	DB	' any level directories', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MBDEGLCK@ERROR?$AA@
CONST	SEGMENT
??_C@_05MBDEGLCK@ERROR?$AA@ DB 'ERROR', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01LFCBOECM@?4?$AA@
CONST	SEGMENT
??_C@_01LFCBOECM@?4?$AA@ DB '.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DJGKEECL@?4?4?$AA@
CONST	SEGMENT
??_C@_02DJGKEECL@?4?4?$AA@ DB '..', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DBMFEKGK@levels?2?$CFs?2?$CFs?4inf?$AA@
CONST	SEGMENT
??_C@_0BB@DBMFEKGK@levels?2?$CFs?2?$CFs?4inf?$AA@ DB 'levels\%s\%s.inf', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0IK@MEDHFMBD@c?3?2documents?5and?5settings?2jarhea@
CONST	SEGMENT
??_C@_0IK@MEDHFMBD@c?3?2documents?5and?5settings?2jarhea@ DB 'c:\document'
	DB	's and settings\jarhead\desktop\shit to display my love for xb'
	DB	'ox revolt and fuck you borman-ness\revolt source\source\level'
	DB	'.cpp', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??FindLevels@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??FindLevels@@YAXXZ@4JA DD 01e1H		; `FindLevels'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CC@IDODPALJ@Can?8t?5alloc?5memory?5for?5level?5inf@
CONST	SEGMENT
??_C@_0CC@IDODPALJ@Can?8t?5alloc?5memory?5for?5level?5inf@ DB 'Can''t all'
	DB	'oc memory for level info', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08OBKBFOJH@Untitled?$AA@
CONST	SEGMENT
??_C@_08OBKBFOJH@Untitled?$AA@ DB 'Untitled', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MDOPLCBO@gfx?2envstill?4bmp?$AA@
CONST	SEGMENT
??_C@_0BB@MDOPLCBO@gfx?2envstill?4bmp?$AA@ DB 'gfx\envstill.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NAGKBPNF@gfx?2envroll?4bmp?$AA@
CONST	SEGMENT
??_C@_0BA@NAGKBPNF@gfx?2envroll?4bmp?$AA@ DB 'gfx\envroll.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04IPKHEEB@NAME?$AA@
CONST	SEGMENT
??_C@_04IPKHEEB@NAME?$AA@ DB 'NAME', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08HFDINBAD@ENVSTILL?$AA@
CONST	SEGMENT
??_C@_08HFDINBAD@ENVSTILL?$AA@ DB 'ENVSTILL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07JBKLKJLM@ENVROLL?$AA@
CONST	SEGMENT
??_C@_07JBKLKJLM@ENVROLL?$AA@ DB 'ENVROLL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08MMLBBOCM@STARTPOS?$AA@
CONST	SEGMENT
??_C@_08MMLBBOCM@STARTPOS?$AA@ DB 'STARTPOS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08OEKJENGB@?$CFf?5?$CFf?5?$CFf?$AA@
CONST	SEGMENT
??_C@_08OEKJENGB@?$CFf?5?$CFf?5?$CFf?$AA@ DB '%f %f %f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KCMEHBFN@STARTPOSREV?$AA@
CONST	SEGMENT
??_C@_0M@KCMEHBFN@STARTPOSREV?$AA@ DB 'STARTPOSREV', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08CJPJEAGA@STARTROT?$AA@
CONST	SEGMENT
??_C@_08CJPJEAGA@STARTROT?$AA@ DB 'STARTROT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02NJPGOMH@?$CFf?$AA@
CONST	SEGMENT
??_C@_02NJPGOMH@?$CFf?$AA@ DB '%f', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IHHLLMGE@STARTROTREV?$AA@
CONST	SEGMENT
??_C@_0M@IHHLLMGE@STARTROTREV?$AA@ DB 'STARTROTREV', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09MHADLFIK@STARTGRID?$AA@
CONST	SEGMENT
??_C@_09MHADLFIK@STARTGRID?$AA@ DB 'STARTGRID', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd?$AA@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd?$AA@ DB '%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BHKNOHAG@STARTGRIDREV?$AA@
CONST	SEGMENT
??_C@_0N@BHKNOHAG@STARTGRIDREV?$AA@ DB 'STARTGRIDREV', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NNHEBCMK@FARCLIP?$AA@
CONST	SEGMENT
??_C@_07NNHEBCMK@FARCLIP?$AA@ DB 'FARCLIP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08BAKBEEOO@FOGSTART?$AA@
CONST	SEGMENT
??_C@_08BAKBEEOO@FOGSTART?$AA@ DB 'FOGSTART', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LEIJKPJO@FOGCOLOR?$AA@
CONST	SEGMENT
??_C@_08LEIJKPJO@FOGCOLOR?$AA@ DB 'FOGCOLOR', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HMBPFMCO@?$CFld?5?$CFld?5?$CFld?$AA@
CONST	SEGMENT
??_C@_0M@HMBPFMCO@?$CFld?5?$CFld?5?$CFld?$AA@ DB '%ld %ld %ld', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GIFOHMFJ@VERTFOGSTART?$AA@
CONST	SEGMENT
??_C@_0N@GIFOHMFJ@VERTFOGSTART?$AA@ DB 'VERTFOGSTART', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IAPFPPDL@VERTFOGEND?$AA@
CONST	SEGMENT
??_C@_0L@IAPFPPDL@VERTFOGEND?$AA@ DB 'VERTFOGEND', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BABMLLHH@WORLDRGBPER?$AA@
CONST	SEGMENT
??_C@_0M@BABMLLHH@WORLDRGBPER?$AA@ DB 'WORLDRGBPER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03JALODAI@?$CFld?$AA@
CONST	SEGMENT
??_C@_03JALODAI@?$CFld?$AA@ DB '%ld', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KDMFOCKL@MODELRGBPER?$AA@
CONST	SEGMENT
??_C@_0M@KDMFOCKL@MODELRGBPER?$AA@ DB 'MODELRGBPER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DFJILMPM@INSTANCERGBPER?$AA@
CONST	SEGMENT
??_C@_0P@DFJILMPM@INSTANCERGBPER?$AA@ DB 'INSTANCERGBPER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07MHJKEOHF@MIRRORS?$AA@
CONST	SEGMENT
??_C@_07MHJKEOHF@MIRRORS?$AA@ DB 'MIRRORS', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CBINCAEI@?$CFld?5?$CFf?5?$CFf?5?$CFf?$AA@
CONST	SEGMENT
??_C@_0N@CBINCAEI@?$CFld?5?$CFf?5?$CFf?5?$CFf?$AA@ DB '%ld %f %f %f', 00H ; `string'
; Function compile flags: /Odt /ZI
CONST	ENDS
;	COMDAT ?FindLevels@@YAXXZ
_TEXT	SEGMENT
_names$ = -5192						; size = 4096
_string$ = -1096					; size = 256
_buf$ = -840						; size = 256
_templevel$ = -584					; size = 232
_fp$ = -352						; size = 4
_handle$ = -348						; size = 4
_data$ = -344						; size = 320
_ch$ = -24						; size = 4
_b$ = -20						; size = 4
_g$ = -16						; size = 4
_r$ = -12						; size = 4
_j$ = -8						; size = 4
_i$ = -4						; size = 4
?FindLevels@@YAXXZ PROC NEAR				; FindLevels, COMDAT

; 481  : {

	push	ebp
	mov	ebp, esp
	mov	eax, 5256				; 00001488H
	call	__chkstk
	push	ebx
	push	esi
	push	edi

; 482  : 	long i, j;
; 483  : 	long r, g, b;
; 484  : 	int ch;
; 485  : 	WIN32_FIND_DATA data;
; 486  : 	HANDLE handle;
; 487  : 	FILE *fp;
; 488  : 	LEVELINFO templevel;
; 489  : 	char buf[256];
; 490  : 	char string[256];
; 491  : 	char names[MAX_LEVELS][MAX_LEVEL_DIR_NAME];
; 492  : 
; 493  : // get first directory
; 494  : 
; 495  : 	handle = FindFirstFile("levels\\*.*", &data);

	lea	eax, DWORD PTR _data$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_0L@EMLOACPE@levels?2?$CK?4?$CK?$AA@
	call	DWORD PTR __imp__FindFirstFileA@8
	mov	DWORD PTR _handle$[ebp], eax

; 496  : 	if (handle == INVALID_HANDLE_VALUE)

	cmp	DWORD PTR _handle$[ebp], -1
	jne	SHORT $L83122

; 497  : 	{
; 498  : 		Box("ERROR", "Can't find any level directories", MB_OK);

	push	0
	push	OFFSET FLAT:??_C@_0CB@OLNOFNJP@Can?8t?5find?5any?5level?5directories@
	push	OFFSET FLAT:??_C@_05MBDEGLCK@ERROR?$AA@
	call	?Box@@YAJPAD0J@Z			; Box
	add	esp, 12					; 0000000cH

; 499  : 		QuitGame = TRUE;

	mov	BYTE PTR ?QuitGame@@3DA, 1		; QuitGame

; 500  : 		return;

	jmp	$L83105
$L83122:

; 501  : 	}
; 502  : 
; 503  : // loop thru each subsequent directory
; 504  : 
; 505  : 	GameSettings.LevelNum = 0;

	mov	DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+8, 0
$L83126:

; 506  : 
; 507  : 	while (TRUE)

	mov	eax, 1
	test	eax, eax
	je	$L83127

; 508  : 	{
; 509  : 		if (!FindNextFile(handle, &data))

	lea	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handle$[ebp]
	push	ecx
	call	DWORD PTR __imp__FindNextFileA@8
	test	eax, eax
	jne	SHORT $L83128

; 510  : 			break;

	jmp	$L83127
$L83128:

; 511  : 
; 512  : // skip if not a good dir
; 513  : 
; 514  : 		if (!(data.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY))

	mov	eax, DWORD PTR _data$[ebp]
	and	eax, 16					; 00000010H
	jne	SHORT $L83129

; 515  : 			continue;

	jmp	SHORT $L83126
$L83129:

; 516  : 
; 517  : 		if (!strcmp(data.cFileName, "."))

	push	OFFSET FLAT:??_C@_01LFCBOECM@?4?$AA@
	lea	eax, DWORD PTR _data$[ebp+44]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L83130

; 518  : 			continue;

	jmp	SHORT $L83126
$L83130:

; 519  : 
; 520  : 		if (!strcmp(data.cFileName, ".."))

	push	OFFSET FLAT:??_C@_02DJGKEECL@?4?4?$AA@
	lea	eax, DWORD PTR _data$[ebp+44]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L83132

; 521  : 			continue;

	jmp	SHORT $L83126
$L83132:

; 522  : 
; 523  : // add to dir list if valid info file in this dir
; 524  : 
; 525  : 		wsprintf(buf, "levels\\%s\\%s.inf", data.cFileName, data.cFileName);

	lea	eax, DWORD PTR _data$[ebp+44]
	push	eax
	lea	ecx, DWORD PTR _data$[ebp+44]
	push	ecx
	push	OFFSET FLAT:??_C@_0BB@DBMFEKGK@levels?2?$CFs?2?$CFs?4inf?$AA@
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	DWORD PTR __imp__wsprintfA
	add	esp, 16					; 00000010H

; 526  : 		fp = fopen(buf, "rb");

	push	OFFSET FLAT:??_C@_02JDPG@rb?$AA@
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _fp$[ebp], eax

; 527  : 
; 528  : 		if (fp && GameSettings.LevelNum < MAX_LEVELS)

	cmp	DWORD PTR _fp$[ebp], 0
	je	$L83135
	cmp	DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+8, 256 ; 00000100H
	jge	$L83135

; 529  : 		{
; 530  : 			for (i = 0 ; i < (long)strlen(data.cFileName) ; i++) data.cFileName[i] = toupper(data.cFileName[i]);

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $L83137
$L83138:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$L83137:
	lea	eax, DWORD PTR _data$[ebp+44]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $L83139
	mov	eax, DWORD PTR _i$[ebp]
	movsx	ecx, BYTE PTR _data$[ebp+eax+44]
	push	ecx
	call	_toupper
	add	esp, 4
	mov	edx, DWORD PTR _i$[ebp]
	mov	BYTE PTR _data$[ebp+edx+44], al
	jmp	SHORT $L83138
$L83139:

; 531  : 			memcpy(names[GameSettings.LevelNum], data.cFileName, MAX_LEVEL_DIR_NAME);

	push	16					; 00000010H
	lea	eax, DWORD PTR _data$[ebp+44]
	push	eax
	mov	ecx, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+8
	shl	ecx, 4
	lea	edx, DWORD PTR _names$[ebp+ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 532  : 			GameSettings.LevelNum++;

	mov	eax, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+8
	add	eax, 1
	mov	DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+8, eax

; 533  : 			fclose(fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fclose
	add	esp, 4
$L83135:

; 534  : 		}
; 535  : 	}

	jmp	$L83126
$L83127:

; 536  : 
; 537  : // close search handle
; 538  : 
; 539  : 	FindClose(handle);

	mov	eax, DWORD PTR _handle$[ebp]
	push	eax
	call	DWORD PTR __imp__FindClose@4

; 540  : 
; 541  : // alloc LEVELINFO structure
; 542  : 
; 543  : 	LevelInf = (LEVELINFO*)malloc(sizeof(LEVELINFO) * GameSettings.LevelNum);

	push	OFFSET FLAT:??_C@_0IK@MEDHFMBD@c?3?2documents?5and?5settings?2jarhea@
	mov	eax, DWORD PTR ?__LINE__Var@?1??FindLevels@@YAXXZ@4JA
	add	eax, 62					; 0000003eH
	push	eax
	mov	ecx, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+8
	imul	ecx, 232				; 000000e8H
	push	ecx
	call	?DebugMalloc@@YAPAXIHPAD@Z		; DebugMalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR ?LevelInf@@3PAULEVELINFO@@A, eax ; LevelInf

; 544  : 	if (!LevelInf)

	cmp	DWORD PTR ?LevelInf@@3PAULEVELINFO@@A, 0 ; LevelInf
	jne	SHORT $L83144

; 545  : 	{
; 546  : 		Box("ERROR", "Can't alloc memory for level info", MB_OK);

	push	0
	push	OFFSET FLAT:??_C@_0CC@IDODPALJ@Can?8t?5alloc?5memory?5for?5level?5inf@
	push	OFFSET FLAT:??_C@_05MBDEGLCK@ERROR?$AA@
	call	?Box@@YAJPAD0J@Z			; Box
	add	esp, 12					; 0000000cH

; 547  : 		QuitGame = TRUE;

	mov	BYTE PTR ?QuitGame@@3DA, 1		; QuitGame

; 548  : 		return;

	jmp	$L83105
$L83144:

; 549  : 	}
; 550  : 
; 551  : // fill in LEVELINFO structure
; 552  : 
; 553  : 	for (i = 0 ; i < GameSettings.LevelNum ; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $L83146
$L83147:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$L83146:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+8
	jge	$L83148

; 554  : 	{
; 555  : 
; 556  : // set dir name
; 557  : 
; 558  : 		memcpy(LevelInf[i].Dir, names[i], MAX_LEVEL_DIR_NAME);

	push	16					; 00000010H
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	lea	ecx, DWORD PTR _names$[ebp+eax]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 232				; 000000e8H
	add	edx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 559  : 
; 560  : // set defaults
; 561  : 
; 562  : 		wsprintf(LevelInf[i].Name, "Untitled");

	push	OFFSET FLAT:??_C@_08OBKBFOJH@Untitled?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+16]
	push	edx
	call	DWORD PTR __imp__wsprintfA
	add	esp, 8

; 563  : 		wsprintf(LevelInf[i].EnvStill, "gfx\\envstill.bmp");

	push	OFFSET FLAT:??_C@_0BB@MDOPLCBO@gfx?2envstill?4bmp?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+80]
	push	edx
	call	DWORD PTR __imp__wsprintfA
	add	esp, 8

; 564  : 		wsprintf(LevelInf[i].EnvRoll, "gfx\\envroll.bmp");

	push	OFFSET FLAT:??_C@_0BA@NAGKBPNF@gfx?2envroll?4bmp?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+112]
	push	edx
	call	DWORD PTR __imp__wsprintfA
	add	esp, 8

; 565  : 		SetVector(&LevelInf[i].NormalStartPos, 0, 0, 0);

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	DWORD PTR [ecx+eax+144], 0
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	DWORD PTR [ecx+eax+148], 0
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	DWORD PTR [ecx+eax+152], 0

; 566  : 		SetVector(&LevelInf[i].ReverseStartPos, 0, 0, 0);

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	DWORD PTR [ecx+eax+156], 0
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	DWORD PTR [ecx+eax+160], 0
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	DWORD PTR [ecx+eax+164], 0

; 567  : 		LevelInf[i].NormalStartRot = 0;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	DWORD PTR [ecx+eax+168], 0

; 568  : 		LevelInf[i].ReverseStartRot = 0;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	DWORD PTR [ecx+eax+172], 0

; 569  : 		LevelInf[i].NormalStartGrid = 0;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	DWORD PTR [ecx+eax+176], 0

; 570  : 		LevelInf[i].ReverseStartGrid = 0;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	DWORD PTR [ecx+eax+180], 0

; 571  : 		LevelInf[i].FarClip = 6144;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	DWORD PTR [ecx+eax+184], 1170210816	; 45c00000H

; 572  : 		LevelInf[i].FogStart = 5120;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	DWORD PTR [ecx+eax+188], 1168113664	; 45a00000H

; 573  : 		LevelInf[i].FogColor = 0x000000;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	DWORD PTR [ecx+eax+192], 0

; 574  : 		LevelInf[i].VertFogStart = 0;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	DWORD PTR [ecx+eax+196], 0

; 575  : 		LevelInf[i].VertFogEnd = 0;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	DWORD PTR [ecx+eax+200], 0

; 576  : 		LevelInf[i].WorldRGBper = 100;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	DWORD PTR [ecx+eax+204], 100		; 00000064H

; 577  : 		LevelInf[i].ModelRGBper = 100;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	DWORD PTR [ecx+eax+208], 100		; 00000064H

; 578  : 		LevelInf[i].InstanceRGBper = 100;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	DWORD PTR [ecx+eax+212], 100		; 00000064H

; 579  : 		LevelInf[i].MirrorType = 0;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	DWORD PTR [ecx+eax+216], 0

; 580  : 		LevelInf[i].MirrorMix = 0.75f;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	DWORD PTR [ecx+eax+220], 1061158912	; 3f400000H

; 581  : 		LevelInf[i].MirrorIntensity = 1;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	DWORD PTR [ecx+eax+224], 1065353216	; 3f800000H

; 582  : 		LevelInf[i].MirrorDist = 256;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	DWORD PTR [ecx+eax+228], 1132462080	; 43800000H

; 583  : 
; 584  : // open .INF file
; 585  : 
; 586  : 		wsprintf(buf, "levels\\%s\\%s.inf", names[i], names[i]);

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	lea	ecx, DWORD PTR _names$[ebp+eax]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	lea	eax, DWORD PTR _names$[ebp+edx]
	push	eax
	push	OFFSET FLAT:??_C@_0BB@DBMFEKGK@levels?2?$CFs?2?$CFs?4inf?$AA@
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	DWORD PTR __imp__wsprintfA
	add	esp, 16					; 00000010H

; 587  : 		fp = fopen(buf, "r");

	push	OFFSET FLAT:??_C@_01KDCPPGHE@r?$AA@
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _fp$[ebp], eax
$L83154:

; 588  : 
; 589  : // scan all strings
; 590  : 
; 591  : 		while (TRUE)

	mov	eax, 1
	test	eax, eax
	je	$L83155

; 592  : 		{
; 593  : 
; 594  : // get a string
; 595  : 
; 596  : 			if (fscanf(fp, "%s", string) == EOF)

	lea	eax, DWORD PTR _string$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_02DKCKIIND@?$CFs?$AA@
	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	call	_fscanf
	add	esp, 12					; 0000000cH
	cmp	eax, -1
	jne	SHORT $L83156

; 597  : 				break;

	jmp	$L83155
$L83156:

; 598  : 
; 599  : // comment?
; 600  : 
; 601  : 			if (string[0] == ';')

	movsx	eax, BYTE PTR _string$[ebp]
	cmp	eax, 59					; 0000003bH
	jne	SHORT $L83158
$L83159:

; 602  : 			{
; 603  : 				do
; 604  : 				{
; 605  : 					ch = fgetc(fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fgetc
	add	esp, 4
	mov	DWORD PTR _ch$[ebp], eax

; 606  : 				} while (ch != '\n' && ch != EOF);

	cmp	DWORD PTR _ch$[ebp], 10			; 0000000aH
	je	SHORT $L83161
	cmp	DWORD PTR _ch$[ebp], -1
	jne	SHORT $L83159
$L83161:

; 607  : 				continue;

	jmp	SHORT $L83154
$L83158:

; 608  : 			}
; 609  : 
; 610  : // name?
; 611  : 
; 612  : 			if (!strcmp(string, "NAME"))

	push	OFFSET FLAT:??_C@_04IPKHEEB@NAME?$AA@
	lea	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$L83163
$L83165:

; 613  : 			{
; 614  : 				do
; 615  : 				{
; 616  : 					ch = fgetc(fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fgetc
	add	esp, 4
	mov	DWORD PTR _ch$[ebp], eax

; 617  : 				} while (ch != '\'' && ch != EOF);

	cmp	DWORD PTR _ch$[ebp], 39			; 00000027H
	je	SHORT $L83167
	cmp	DWORD PTR _ch$[ebp], -1
	jne	SHORT $L83165
$L83167:

; 618  : 
; 619  : 				j = 0;

	mov	DWORD PTR _j$[ebp], 0
$L83170:

; 620  : 				while (TRUE)

	mov	eax, 1
	test	eax, eax
	je	SHORT $L83171

; 621  : 				{
; 622  : 					ch = fgetc(fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fgetc
	add	esp, 4
	mov	DWORD PTR _ch$[ebp], eax

; 623  : 					if (ch != '\'' && ch != EOF && j < MAX_LEVEL_NAME - 1)

	cmp	DWORD PTR _ch$[ebp], 39			; 00000027H
	je	SHORT $L83172
	cmp	DWORD PTR _ch$[ebp], -1
	je	SHORT $L83172
	cmp	DWORD PTR _j$[ebp], 63			; 0000003fH
	jge	SHORT $L83172

; 624  : 					{
; 625  : 						LevelInf[i].Name[j] = (char)ch;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	add	eax, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	ecx, DWORD PTR _j$[ebp]
	mov	dl, BYTE PTR _ch$[ebp]
	mov	BYTE PTR [eax+ecx+16], dl

; 626  : 						j++;

	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax

; 627  : 					}
; 628  : 					else

	jmp	SHORT $L83174
$L83172:

; 629  : 					{
; 630  : 						LevelInf[i].Name[j] = 0;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	add	eax, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	ecx, DWORD PTR _j$[ebp]
	mov	BYTE PTR [eax+ecx+16], 0

; 631  : 						break;

	jmp	SHORT $L83171
$L83174:

; 632  : 					}
; 633  : 				}

	jmp	SHORT $L83170
$L83171:

; 634  : 				continue;

	jmp	$L83154
$L83163:

; 635  : 			}
; 636  : 
; 637  : // env still?
; 638  : 
; 639  : 			if (!strcmp(string, "ENVSTILL"))

	push	OFFSET FLAT:??_C@_08HFDINBAD@ENVSTILL?$AA@
	lea	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$L83175
$L83177:

; 640  : 			{
; 641  : 				do
; 642  : 				{
; 643  : 					ch = fgetc(fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fgetc
	add	esp, 4
	mov	DWORD PTR _ch$[ebp], eax

; 644  : 				} while (ch != '\'' && ch != EOF);

	cmp	DWORD PTR _ch$[ebp], 39			; 00000027H
	je	SHORT $L83179
	cmp	DWORD PTR _ch$[ebp], -1
	jne	SHORT $L83177
$L83179:

; 645  : 
; 646  : 				j = 0;

	mov	DWORD PTR _j$[ebp], 0
$L83182:

; 647  : 				while (TRUE)

	mov	eax, 1
	test	eax, eax
	je	SHORT $L83183

; 648  : 				{
; 649  : 					ch = fgetc(fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fgetc
	add	esp, 4
	mov	DWORD PTR _ch$[ebp], eax

; 650  : 					if (ch != '\'' && ch != EOF && j < MAX_ENV_NAME - 1)

	cmp	DWORD PTR _ch$[ebp], 39			; 00000027H
	je	SHORT $L83184
	cmp	DWORD PTR _ch$[ebp], -1
	je	SHORT $L83184
	cmp	DWORD PTR _j$[ebp], 31			; 0000001fH
	jge	SHORT $L83184

; 651  : 					{
; 652  : 						LevelInf[i].EnvStill[j] = (char)ch;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	add	eax, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	ecx, DWORD PTR _j$[ebp]
	mov	dl, BYTE PTR _ch$[ebp]
	mov	BYTE PTR [eax+ecx+80], dl

; 653  : 						j++;

	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax

; 654  : 					}
; 655  : 					else

	jmp	SHORT $L83186
$L83184:

; 656  : 					{
; 657  : 						LevelInf[i].EnvStill[j] = 0;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	add	eax, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	ecx, DWORD PTR _j$[ebp]
	mov	BYTE PTR [eax+ecx+80], 0

; 658  : 						break;

	jmp	SHORT $L83183
$L83186:

; 659  : 					}
; 660  : 				}

	jmp	SHORT $L83182
$L83183:

; 661  : 				continue;

	jmp	$L83154
$L83175:

; 662  : 			}
; 663  : 
; 664  : // env roll?
; 665  : 
; 666  : 			if (!strcmp(string, "ENVROLL"))

	push	OFFSET FLAT:??_C@_07JBKLKJLM@ENVROLL?$AA@
	lea	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$L83187
$L83189:

; 667  : 			{
; 668  : 				do
; 669  : 				{
; 670  : 					ch = fgetc(fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fgetc
	add	esp, 4
	mov	DWORD PTR _ch$[ebp], eax

; 671  : 				} while (ch != '\'' && ch != EOF);

	cmp	DWORD PTR _ch$[ebp], 39			; 00000027H
	je	SHORT $L83191
	cmp	DWORD PTR _ch$[ebp], -1
	jne	SHORT $L83189
$L83191:

; 672  : 
; 673  : 				j = 0;

	mov	DWORD PTR _j$[ebp], 0
$L83194:

; 674  : 				while (TRUE)

	mov	eax, 1
	test	eax, eax
	je	SHORT $L83195

; 675  : 				{
; 676  : 					ch = fgetc(fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fgetc
	add	esp, 4
	mov	DWORD PTR _ch$[ebp], eax

; 677  : 					if (ch != '\'' && ch != EOF && j < MAX_ENV_NAME - 1)

	cmp	DWORD PTR _ch$[ebp], 39			; 00000027H
	je	SHORT $L83196
	cmp	DWORD PTR _ch$[ebp], -1
	je	SHORT $L83196
	cmp	DWORD PTR _j$[ebp], 31			; 0000001fH
	jge	SHORT $L83196

; 678  : 					{
; 679  : 						LevelInf[i].EnvRoll[j] = (char)ch;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	add	eax, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	ecx, DWORD PTR _j$[ebp]
	mov	dl, BYTE PTR _ch$[ebp]
	mov	BYTE PTR [eax+ecx+112], dl

; 680  : 						j++;

	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax

; 681  : 					}
; 682  : 					else

	jmp	SHORT $L83198
$L83196:

; 683  : 					{
; 684  : 						LevelInf[i].EnvRoll[j] = 0;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	add	eax, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	ecx, DWORD PTR _j$[ebp]
	mov	BYTE PTR [eax+ecx+112], 0

; 685  : 						break;

	jmp	SHORT $L83195
$L83198:

; 686  : 					}
; 687  : 				}

	jmp	SHORT $L83194
$L83195:

; 688  : 				continue;

	jmp	$L83154
$L83187:

; 689  : 			}
; 690  : 
; 691  : // start pos
; 692  : 
; 693  : 			if (!strcmp(string, "STARTPOS"))

	push	OFFSET FLAT:??_C@_08MMLBBOCM@STARTPOS?$AA@
	lea	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L83199

; 694  : 			{
; 695  : 				fscanf(fp, "%f %f %f", &LevelInf[i].NormalStartPos.v[X], &LevelInf[i].NormalStartPos.v[Y], &LevelInf[i].NormalStartPos.v[Z]);

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+152]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+148]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+144]
	push	edx
	push	OFFSET FLAT:??_C@_08OEKJENGB@?$CFf?5?$CFf?5?$CFf?$AA@
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fscanf
	add	esp, 20					; 00000014H

; 696  : 				continue;

	jmp	$L83154
$L83199:

; 697  : 			}
; 698  : 
; 699  : // reverse start pos
; 700  : 
; 701  : 			if (!strcmp(string, "STARTPOSREV"))

	push	OFFSET FLAT:??_C@_0M@KCMEHBFN@STARTPOSREV?$AA@
	lea	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L83202

; 702  : 			{
; 703  : 				fscanf(fp, "%f %f %f", &LevelInf[i].ReverseStartPos.v[X], &LevelInf[i].ReverseStartPos.v[Y], &LevelInf[i].ReverseStartPos.v[Z]);

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+164]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+160]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+156]
	push	edx
	push	OFFSET FLAT:??_C@_08OEKJENGB@?$CFf?5?$CFf?5?$CFf?$AA@
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fscanf
	add	esp, 20					; 00000014H

; 704  : 				continue;

	jmp	$L83154
$L83202:

; 705  : 			}
; 706  : 
; 707  : // start rot
; 708  : 
; 709  : 			if (!strcmp(string, "STARTROT"))

	push	OFFSET FLAT:??_C@_08CJPJEAGA@STARTROT?$AA@
	lea	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L83204

; 710  : 			{
; 711  : 				fscanf(fp, "%f", &LevelInf[i].NormalStartRot);

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+168]
	push	edx
	push	OFFSET FLAT:??_C@_02NJPGOMH@?$CFf?$AA@
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fscanf
	add	esp, 12					; 0000000cH

; 712  : 				continue;

	jmp	$L83154
$L83204:

; 713  : 			}
; 714  : 
; 715  : // reverse start rot
; 716  : 
; 717  : 			if (!strcmp(string, "STARTROTREV"))

	push	OFFSET FLAT:??_C@_0M@IHHLLMGE@STARTROTREV?$AA@
	lea	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L83207

; 718  : 			{
; 719  : 				fscanf(fp, "%f", &LevelInf[i].ReverseStartRot);

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+172]
	push	edx
	push	OFFSET FLAT:??_C@_02NJPGOMH@?$CFf?$AA@
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fscanf
	add	esp, 12					; 0000000cH

; 720  : 				continue;

	jmp	$L83154
$L83207:

; 721  : 			}
; 722  : 
; 723  : // start grid
; 724  : 
; 725  : 			if (!strcmp(string, "STARTGRID"))

	push	OFFSET FLAT:??_C@_09MHADLFIK@STARTGRID?$AA@
	lea	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L83209

; 726  : 			{
; 727  : 				fscanf(fp, "%d", &LevelInf[i].NormalStartGrid);

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+176]
	push	edx
	push	OFFSET FLAT:??_C@_02DPKJAMEF@?$CFd?$AA@
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fscanf
	add	esp, 12					; 0000000cH

; 728  : 				continue;

	jmp	$L83154
$L83209:

; 729  : 			}
; 730  : 
; 731  : // reverse start grid
; 732  : 
; 733  : 			if (!strcmp(string, "STARTGRIDREV"))

	push	OFFSET FLAT:??_C@_0N@BHKNOHAG@STARTGRIDREV?$AA@
	lea	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L83212

; 734  : 			{
; 735  : 				fscanf(fp, "%d", &LevelInf[i].ReverseStartGrid);

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+180]
	push	edx
	push	OFFSET FLAT:??_C@_02DPKJAMEF@?$CFd?$AA@
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fscanf
	add	esp, 12					; 0000000cH

; 736  : 				continue;

	jmp	$L83154
$L83212:

; 737  : 			}
; 738  : 
; 739  : // far clip
; 740  : 
; 741  : 			if (!strcmp(string, "FARCLIP"))

	push	OFFSET FLAT:??_C@_07NNHEBCMK@FARCLIP?$AA@
	lea	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L83214

; 742  : 			{
; 743  : 				fscanf(fp, "%f", &LevelInf[i].FarClip);

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+184]
	push	edx
	push	OFFSET FLAT:??_C@_02NJPGOMH@?$CFf?$AA@
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fscanf
	add	esp, 12					; 0000000cH

; 744  : 				continue;

	jmp	$L83154
$L83214:

; 745  : 			}
; 746  : 
; 747  : // fog start
; 748  : 
; 749  : 			if (!strcmp(string, "FOGSTART"))

	push	OFFSET FLAT:??_C@_08BAKBEEOO@FOGSTART?$AA@
	lea	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L83216

; 750  : 			{
; 751  : 				fscanf(fp, "%f", &LevelInf[i].FogStart);

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+188]
	push	edx
	push	OFFSET FLAT:??_C@_02NJPGOMH@?$CFf?$AA@
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fscanf
	add	esp, 12					; 0000000cH

; 752  : 				continue;

	jmp	$L83154
$L83216:

; 753  : 			}
; 754  : 
; 755  : // fog color
; 756  : 
; 757  : 			if (!strcmp(string, "FOGCOLOR"))

	push	OFFSET FLAT:??_C@_08LEIJKPJO@FOGCOLOR?$AA@
	lea	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L83218

; 758  : 			{
; 759  : 				fscanf(fp, "%ld %ld %ld", &r, &g, &b);

	lea	eax, DWORD PTR _b$[ebp]
	push	eax
	lea	ecx, DWORD PTR _g$[ebp]
	push	ecx
	lea	edx, DWORD PTR _r$[ebp]
	push	edx
	push	OFFSET FLAT:??_C@_0M@HMBPFMCO@?$CFld?5?$CFld?5?$CFld?$AA@
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fscanf
	add	esp, 20					; 00000014H

; 760  : 				LevelInf[i].FogColor = (r << 16) | (g << 8) | b;

	mov	eax, DWORD PTR _r$[ebp]
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _g$[ebp]
	shl	ecx, 8
	or	eax, ecx
	or	eax, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	DWORD PTR [ecx+edx+192], eax

; 761  : 				continue;

	jmp	$L83154
$L83218:

; 762  : 			}
; 763  : 
; 764  : // vert fog start
; 765  : 
; 766  : 			if (!strcmp(string, "VERTFOGSTART"))

	push	OFFSET FLAT:??_C@_0N@GIFOHMFJ@VERTFOGSTART?$AA@
	lea	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L83221

; 767  : 			{
; 768  : 				fscanf(fp, "%f", &LevelInf[i].VertFogStart);

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+196]
	push	edx
	push	OFFSET FLAT:??_C@_02NJPGOMH@?$CFf?$AA@
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fscanf
	add	esp, 12					; 0000000cH

; 769  : 				continue;

	jmp	$L83154
$L83221:

; 770  : 			}
; 771  : 
; 772  : // vert fog end
; 773  : 
; 774  : 			if (!strcmp(string, "VERTFOGEND"))

	push	OFFSET FLAT:??_C@_0L@IAPFPPDL@VERTFOGEND?$AA@
	lea	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L83223

; 775  : 			{
; 776  : 				fscanf(fp, "%f", &LevelInf[i].VertFogEnd);

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+200]
	push	edx
	push	OFFSET FLAT:??_C@_02NJPGOMH@?$CFf?$AA@
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fscanf
	add	esp, 12					; 0000000cH

; 777  : 				continue;

	jmp	$L83154
$L83223:

; 778  : 			}
; 779  : 
; 780  : // world rgb percent
; 781  : 
; 782  : 			if (!strcmp(string, "WORLDRGBPER"))

	push	OFFSET FLAT:??_C@_0M@BABMLLHH@WORLDRGBPER?$AA@
	lea	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L83225

; 783  : 			{
; 784  : 				fscanf(fp, "%ld", &LevelInf[i].WorldRGBper);

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+204]
	push	edx
	push	OFFSET FLAT:??_C@_03JALODAI@?$CFld?$AA@
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fscanf
	add	esp, 12					; 0000000cH

; 785  : 				continue;

	jmp	$L83154
$L83225:

; 786  : 			}
; 787  : 
; 788  : // model rgb percent
; 789  : 
; 790  : 			if (!strcmp(string, "MODELRGBPER"))

	push	OFFSET FLAT:??_C@_0M@KDMFOCKL@MODELRGBPER?$AA@
	lea	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L83228

; 791  : 			{
; 792  : 				fscanf(fp, "%ld", &LevelInf[i].ModelRGBper);

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+208]
	push	edx
	push	OFFSET FLAT:??_C@_03JALODAI@?$CFld?$AA@
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fscanf
	add	esp, 12					; 0000000cH

; 793  : 				continue;

	jmp	$L83154
$L83228:

; 794  : 			}
; 795  : 
; 796  : // instance rgb percent
; 797  : 
; 798  : 			if (!strcmp(string, "INSTANCERGBPER"))

	push	OFFSET FLAT:??_C@_0P@DFJILMPM@INSTANCERGBPER?$AA@
	lea	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L83230

; 799  : 			{
; 800  : 				fscanf(fp, "%ld", &LevelInf[i].InstanceRGBper);

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+212]
	push	edx
	push	OFFSET FLAT:??_C@_03JALODAI@?$CFld?$AA@
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fscanf
	add	esp, 12					; 0000000cH

; 801  : 				continue;

	jmp	$L83154
$L83230:

; 802  : 			}
; 803  : 
; 804  : // mirror info
; 805  : 
; 806  : 			if (!strcmp(string, "MIRRORS"))

	push	OFFSET FLAT:??_C@_07MHJKEOHF@MIRRORS?$AA@
	lea	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L83232

; 807  : 			{
; 808  : 				fscanf(fp, "%ld %f %f %f", &LevelInf[i].MirrorType, &LevelInf[i].MirrorMix, &LevelInf[i].MirrorIntensity, &LevelInf[i].MirrorDist);

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+228]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+224]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+220]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+216]
	push	edx
	push	OFFSET FLAT:??_C@_0N@CBINCAEI@?$CFld?5?$CFf?5?$CFf?5?$CFf?$AA@
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fscanf
	add	esp, 24					; 00000018H

; 809  : 				continue;

	jmp	$L83154
$L83232:

; 810  : 			}
; 811  : 		}

	jmp	$L83154
$L83155:

; 812  : 
; 813  : // close .INF file
; 814  : 
; 815  : 		fclose(fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fclose
	add	esp, 4

; 816  : 	}

	jmp	$L83147
$L83148:

; 817  : 
; 818  : // sort alphabetically
; 819  : 
; 820  : 	for (i = GameSettings.LevelNum - 1 ; i ; i--) for (j = 0 ; j < i ; j++)

	mov	eax, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+8
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $L83235
$L83236:
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$L83235:
	cmp	DWORD PTR _i$[ebp], 0
	je	$L83105
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $L83238
$L83239:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$L83238:
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR _i$[ebp]
	jge	$L83240

; 821  : 	{
; 822  : 		if (strcmp(LevelInf[j].Name, LevelInf[j + 1].Name) > 0)

	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+16]
	push	edx
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 232				; 000000e8H
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	lea	edx, DWORD PTR [ecx+eax+16]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jle	SHORT $L83241

; 823  : 		{
; 824  : 			templevel = LevelInf[j];

	mov	esi, DWORD PTR _j$[ebp]
	imul	esi, 232				; 000000e8H
	add	esi, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	ecx, 58					; 0000003aH
	lea	edi, DWORD PTR _templevel$[ebp]
	rep movsd

; 825  : 			LevelInf[j] = LevelInf[j + 1];

	mov	esi, DWORD PTR _j$[ebp]
	add	esi, 1
	imul	esi, 232				; 000000e8H
	add	esi, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	edi, DWORD PTR _j$[ebp]
	imul	edi, 232				; 000000e8H
	add	edi, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	ecx, 58					; 0000003aH
	rep movsd

; 826  : 			LevelInf[j + 1] = templevel;

	mov	edi, DWORD PTR _j$[ebp]
	add	edi, 1
	imul	edi, 232				; 000000e8H
	add	edi, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	mov	ecx, 58					; 0000003aH
	lea	esi, DWORD PTR _templevel$[ebp]
	rep movsd
$L83241:

; 827  : 		}
; 828  : 	}

	jmp	$L83239
$L83240:
	jmp	$L83236
$L83105:

; 829  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?FindLevels@@YAXXZ ENDP					; FindLevels
_TEXT	ENDS
PUBLIC	?FreeLevels@@YAXXZ				; FreeLevels
PUBLIC	?__LINE__Var@?1??FreeLevels@@YAXXZ@4JA		; `FreeLevels'::`2'::__LINE__Var
EXTRN	?DebugFree@@YAXPAXHPAD@Z:NEAR			; DebugFree
;	COMDAT ?__LINE__Var@?1??FreeLevels@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??FreeLevels@@YAXXZ@4JA DD 0344H		; `FreeLevels'::`2'::__LINE__Var
; Function compile flags: /Odt /ZI
_DATA	ENDS
;	COMDAT ?FreeLevels@@YAXXZ
_TEXT	SEGMENT
?FreeLevels@@YAXXZ PROC NEAR				; FreeLevels, COMDAT

; 836  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 837  : 	free(LevelInf);

	push	OFFSET FLAT:??_C@_0IK@MEDHFMBD@c?3?2documents?5and?5settings?2jarhea@
	mov	eax, DWORD PTR ?__LINE__Var@?1??FreeLevels@@YAXXZ@4JA
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	push	ecx
	call	?DebugFree@@YAXPAXHPAD@Z		; DebugFree
	add	esp, 12					; 0000000cH

; 838  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?FreeLevels@@YAXXZ ENDP					; FreeLevels
_TEXT	ENDS
PUBLIC	?GetLevelNum@@YAJPAD@Z				; GetLevelNum
; Function compile flags: /Odt /ZI
;	COMDAT ?GetLevelNum@@YAJPAD@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_dir$ = 8						; size = 4
?GetLevelNum@@YAJPAD@Z PROC NEAR			; GetLevelNum, COMDAT

; 845  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 846  : 	long i;
; 847  : 
; 848  : // look for level
; 849  : 
; 850  : 	for (i = 0 ; i < GameSettings.LevelNum ; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $L83250
$L83251:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$L83250:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+8
	jge	SHORT $L83252

; 851  : 	{
; 852  : 		if (!strcmp(LevelInf[i].Dir, dir))

	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 232				; 000000e8H
	add	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L83253

; 853  : 		{
; 854  : 			return i;

	mov	eax, DWORD PTR _i$[ebp]
	jmp	SHORT $L83248
$L83253:

; 855  : 		}
; 856  : 	}

	jmp	SHORT $L83251
$L83252:

; 857  : 
; 858  : // not found!
; 859  : 
; 860  : 	return -1;

	or	eax, -1
$L83248:

; 861  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLevelNum@@YAJPAD@Z ENDP				; GetLevelNum
_TEXT	ENDS
PUBLIC	??_C@_0BJ@PBHODAHK@levels?2?$CFs?2reversed?2?$CFs?4?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0BA@IJPJFJHL@levels?2?$CFs?2?$CFs?4?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0BG@KFHDMKEC@levels?2?$CFs?2reversed?2?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0N@NLMLOBPK@levels?2?$CFs?2?$CFs?$AA@	; `string'
_BSS	SEGMENT
_LevelFilenameBuffer DB 080H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0BJ@PBHODAHK@levels?2?$CFs?2reversed?2?$CFs?4?$CFs?$AA@
CONST	SEGMENT
??_C@_0BJ@PBHODAHK@levels?2?$CFs?2reversed?2?$CFs?4?$CFs?$AA@ DB 'levels\'
	DB	'%s\reversed\%s.%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IJPJFJHL@levels?2?$CFs?2?$CFs?4?$CFs?$AA@
CONST	SEGMENT
??_C@_0BA@IJPJFJHL@levels?2?$CFs?2?$CFs?4?$CFs?$AA@ DB 'levels\%s\%s.%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KFHDMKEC@levels?2?$CFs?2reversed?2?$CFs?$AA@
CONST	SEGMENT
??_C@_0BG@KFHDMKEC@levels?2?$CFs?2reversed?2?$CFs?$AA@ DB 'levels\%s\reve'
	DB	'rsed\%s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NLMLOBPK@levels?2?$CFs?2?$CFs?$AA@
CONST	SEGMENT
??_C@_0N@NLMLOBPK@levels?2?$CFs?2?$CFs?$AA@ DB 'levels\%s\%s', 00H ; `string'
; Function compile flags: /Odt /ZI
CONST	ENDS
;	COMDAT ?GetLevelFilename@@YAPADPADJ@Z
_TEXT	SEGMENT
_filename$ = 8						; size = 4
_flag$ = 12						; size = 4
?GetLevelFilename@@YAPADPADJ@Z PROC NEAR		; GetLevelFilename, COMDAT

; 868  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 869  : 
; 870  : // make body
; 871  : 
; 872  : 	if (flag & FILENAME_MAKE_BODY)

	mov	eax, DWORD PTR _flag$[ebp]
	and	eax, 1
	je	$L83258

; 873  : 	{
; 874  : 		if (flag & FILENAME_GAME_SETTINGS && GameSettings.Reversed)

	mov	eax, DWORD PTR _flag$[ebp]
	and	eax, 2
	je	SHORT $L83259
	cmp	DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+12, 0
	je	SHORT $L83259

; 875  : 			wsprintf(LevelFilenameBuffer, "levels\\%s\\reversed\\%s.%s", LevelInf[GameSettings.Level].Dir, LevelInf[GameSettings.Level].Dir, filename);

	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	ecx, 232				; 000000e8H
	add	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	push	ecx
	mov	edx, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	edx, 232				; 000000e8H
	add	edx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	push	edx
	push	OFFSET FLAT:??_C@_0BJ@PBHODAHK@levels?2?$CFs?2reversed?2?$CFs?4?$CFs?$AA@
	push	OFFSET FLAT:_LevelFilenameBuffer
	call	DWORD PTR __imp__wsprintfA
	add	esp, 20					; 00000014H

; 876  : 		else

	jmp	SHORT $L83261
$L83259:

; 877  : 			wsprintf(LevelFilenameBuffer, "levels\\%s\\%s.%s", LevelInf[GameSettings.Level].Dir, LevelInf[GameSettings.Level].Dir, filename);

	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	ecx, 232				; 000000e8H
	add	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	push	ecx
	mov	edx, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	edx, 232				; 000000e8H
	add	edx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	push	edx
	push	OFFSET FLAT:??_C@_0BA@IJPJFJHL@levels?2?$CFs?2?$CFs?4?$CFs?$AA@
	push	OFFSET FLAT:_LevelFilenameBuffer
	call	DWORD PTR __imp__wsprintfA
	add	esp, 20					; 00000014H
$L83261:

; 878  : 	}
; 879  : 
; 880  : // don't make body
; 881  : 
; 882  : 	else

	jmp	SHORT $L83263
$L83258:

; 883  : 	{
; 884  : 		if (flag & FILENAME_GAME_SETTINGS && GameSettings.Reversed)

	mov	eax, DWORD PTR _flag$[ebp]
	and	eax, 2
	je	SHORT $L83264
	cmp	DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+12, 0
	je	SHORT $L83264

; 885  : 			wsprintf(LevelFilenameBuffer, "levels\\%s\\reversed\\%s", LevelInf[GameSettings.Level].Dir, filename);

	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	ecx, 232				; 000000e8H
	add	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	push	ecx
	push	OFFSET FLAT:??_C@_0BG@KFHDMKEC@levels?2?$CFs?2reversed?2?$CFs?$AA@
	push	OFFSET FLAT:_LevelFilenameBuffer
	call	DWORD PTR __imp__wsprintfA
	add	esp, 16					; 00000010H

; 886  : 		else

	jmp	SHORT $L83263
$L83264:

; 887  : 			wsprintf(LevelFilenameBuffer, "levels\\%s\\%s", LevelInf[GameSettings.Level].Dir, filename);

	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+4
	imul	ecx, 232				; 000000e8H
	add	ecx, DWORD PTR ?LevelInf@@3PAULEVELINFO@@A ; LevelInf
	push	ecx
	push	OFFSET FLAT:??_C@_0N@NLMLOBPK@levels?2?$CFs?2?$CFs?$AA@
	push	OFFSET FLAT:_LevelFilenameBuffer
	call	DWORD PTR __imp__wsprintfA
	add	esp, 16					; 00000010H
$L83263:

; 888  : 	}
; 889  : 
; 890  : 	return LevelFilenameBuffer;

	mov	eax, OFFSET FLAT:_LevelFilenameBuffer

; 891  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLevelFilename@@YAPADPADJ@Z ENDP			; GetLevelFilename
_TEXT	ENDS
PUBLIC	?sqrt@@YAMM@Z					; sqrt
PUBLIC	?__LINE__Var@?1??LoadLevelFields@@YA_NPAULEVELINFO@@@Z@4JA ; `LoadLevelFields'::`2'::__LINE__Var
EXTRN	?AddOrientationField@@YAPAUForceFieldStruct@@JJPAUVectorStruct@@PATMatrixUnion@@PAUBBOX@@00MM@Z:NEAR ; AddOrientationField
EXTRN	_fread:NEAR
EXTRN	?CopyMat@@YAXPATMatrixUnion@@0@Z:NEAR		; CopyMat
EXTRN	?AddVelocityField@@YAPAUForceFieldStruct@@JJPAUVectorStruct@@PATMatrixUnion@@PAUBBOX@@00M@Z:NEAR ; AddVelocityField
EXTRN	?AddSphericalField@@YAPAUForceFieldStruct@@JJPAUVectorStruct@@MMMM@Z:NEAR ; AddSphericalField
;	COMDAT ?__LINE__Var@?1??LoadLevelFields@@YA_NPAULEVELINFO@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??LoadLevelFields@@YA_NPAULEVELINFO@@@Z@4JA DD 0386H ; `LoadLevelFields'::`2'::__LINE__Var
; Function compile flags: /Odt /ZI
_DATA	ENDS
;	COMDAT ?LoadLevelFields@@YA_NPAULEVELINFO@@@Z
_TEXT	SEGMENT
tv147 = -208						; size = 4
_fileField$ = -140					; size = 100
_fp$ = -40						; size = 4
_bBox$ = -36						; size = 24
_rad$ = -12						; size = 4
_nFields$ = -8						; size = 4
_iField$ = -4						; size = 4
_levelInfo$ = 8						; size = 4
?LoadLevelFields@@YA_NPAULEVELINFO@@@Z PROC NEAR	; LoadLevelFields, COMDAT

; 902  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi

; 903  : 	int			iField;
; 904  : 	long		nFields;
; 905  : 	REAL		rad;
; 906  : 	BBOX		bBox;
; 907  : 	FILE		*fp;
; 908  : 	FILE_FIELD	fileField;
; 909  : 
; 910  : 	// open the file
; 911  : 	fp = fopen(GetLevelFilename("fld", FILENAME_MAKE_BODY | FILENAME_GAME_SETTINGS), "rb");

	push	OFFSET FLAT:??_C@_02JDPG@rb?$AA@
	push	3
	push	OFFSET FLAT:??_C@_03IAKKBENL@fld?$AA@
	call	?GetLevelFilename@@YAPADPADJ@Z		; GetLevelFilename
	add	esp, 8
	push	eax
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _fp$[ebp], eax

; 912  : 	if (fp == NULL) {

	cmp	DWORD PTR _fp$[ebp], 0
	jne	SHORT $L83277

; 913  : 		return FALSE;

	xor	al, al
	jmp	$L83270
$L83277:

; 914  : 	}
; 915  : 
; 916  : 	// get the number of fields
; 917  : 	if (fread(&nFields, sizeof(long), 1, fp) < 1) {

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	push	1
	push	4
	lea	ecx, DWORD PTR _nFields$[ebp]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H
	cmp	eax, 1
	jae	SHORT $L83279

; 918  : 		fclose(fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fclose
	add	esp, 4

; 919  : 		return FALSE;

	xor	al, al
	jmp	$L83270
$L83279:

; 920  : 	}
; 921  : 
; 922  : 	if (nFields < 1) {

	cmp	DWORD PTR _nFields$[ebp], 1
	jge	SHORT $L83280

; 923  : 		fclose(fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fclose
	add	esp, 4

; 924  : 		return TRUE;

	mov	al, 1
	jmp	$L83270
$L83280:

; 925  : 	}
; 926  : 
; 927  : 	// Allocate space for the positions and matrices
; 928  : 	LEV_LevelFieldPos = (VEC *)malloc(sizeof(VEC) * nFields);

	push	OFFSET FLAT:??_C@_0IK@MEDHFMBD@c?3?2documents?5and?5settings?2jarhea@
	mov	eax, DWORD PTR ?__LINE__Var@?1??LoadLevelFields@@YA_NPAULEVELINFO@@@Z@4JA
	add	eax, 26					; 0000001aH
	push	eax
	mov	ecx, DWORD PTR _nFields$[ebp]
	imul	ecx, 12					; 0000000cH
	push	ecx
	call	?DebugMalloc@@YAPAXIHPAD@Z		; DebugMalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR ?LEV_LevelFieldPos@@3PAUVectorStruct@@A, eax ; LEV_LevelFieldPos

; 929  : 	LEV_LevelFieldMat = (MAT *)malloc(sizeof(MAT) * nFields);

	push	OFFSET FLAT:??_C@_0IK@MEDHFMBD@c?3?2documents?5and?5settings?2jarhea@
	mov	eax, DWORD PTR ?__LINE__Var@?1??LoadLevelFields@@YA_NPAULEVELINFO@@@Z@4JA
	add	eax, 27					; 0000001bH
	push	eax
	mov	ecx, DWORD PTR _nFields$[ebp]
	imul	ecx, 36					; 00000024H
	push	ecx
	call	?DebugMalloc@@YAPAXIHPAD@Z		; DebugMalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR ?LEV_LevelFieldMat@@3PATMatrixUnion@@A, eax ; LEV_LevelFieldMat

; 930  : 
; 931  : 	// Read in all the fields
; 932  : 	for (iField = 0; iField < nFields; iField++) {

	mov	DWORD PTR _iField$[ebp], 0
	jmp	SHORT $L83286
$L83287:
	mov	eax, DWORD PTR _iField$[ebp]
	add	eax, 1
	mov	DWORD PTR _iField$[ebp], eax
$L83286:
	mov	eax, DWORD PTR _iField$[ebp]
	cmp	eax, DWORD PTR _nFields$[ebp]
	jge	$L83288

; 933  : 
; 934  : 		if (fread(&fileField, sizeof(FILE_FIELD), 1, fp) < 1) {

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	push	1
	push	100					; 00000064H
	lea	ecx, DWORD PTR _fileField$[ebp]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H
	cmp	eax, 1
	jae	SHORT $L83290

; 935  : 			fclose(fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fclose
	add	esp, 4

; 936  : 			return FALSE;

	xor	al, al
	jmp	$L83270
$L83290:

; 937  : 		}
; 938  : 
; 939  : 		// Set the position and matrix in the array
; 940  : 		CopyVec(&fileField.Pos, &LEV_LevelFieldPos[iField]); 

	mov	eax, DWORD PTR _iField$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR ?LEV_LevelFieldPos@@3PAUVectorStruct@@A ; LEV_LevelFieldPos
	mov	edx, DWORD PTR _fileField$[ebp+4]
	mov	DWORD PTR [ecx+eax], edx
	mov	eax, DWORD PTR _iField$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR ?LEV_LevelFieldPos@@3PAUVectorStruct@@A ; LEV_LevelFieldPos
	mov	edx, DWORD PTR _fileField$[ebp+8]
	mov	DWORD PTR [ecx+eax+4], edx
	mov	eax, DWORD PTR _iField$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR ?LEV_LevelFieldPos@@3PAUVectorStruct@@A ; LEV_LevelFieldPos
	mov	edx, DWORD PTR _fileField$[ebp+12]
	mov	DWORD PTR [ecx+eax+8], edx

; 941  : 		CopyMat(&fileField.Matrix, &LEV_LevelFieldMat[iField]);

	mov	eax, DWORD PTR _iField$[ebp]
	imul	eax, 36					; 00000024H
	add	eax, DWORD PTR ?LEV_LevelFieldMat@@3PATMatrixUnion@@A ; LEV_LevelFieldMat
	push	eax
	lea	ecx, DWORD PTR _fileField$[ebp+16]
	push	ecx
	call	?CopyMat@@YAXPATMatrixUnion@@0@Z	; CopyMat
	add	esp, 8

; 942  : 
; 943  : 		// Create the field
; 944  : 		switch(fileField.Type) {

	mov	eax, DWORD PTR _fileField$[ebp]
	mov	DWORD PTR tv147[ebp], eax
	cmp	DWORD PTR tv147[ebp], 3
	ja	$L83292
	mov	ecx, DWORD PTR tv147[ebp]
	jmp	DWORD PTR $L83529[ecx*4]
$L83295:

; 945  : 
; 946  : 		case FILE_FIELD_TYPE_LINEAR:
; 947  : 			rad = (REAL)sqrt(fileField.Size[0] * fileField.Size[0] + fileField.Size[1] * fileField.Size[1] + fileField.Size[2] * fileField.Size[2]);

	fld	DWORD PTR _fileField$[ebp+52]
	fmul	DWORD PTR _fileField$[ebp+52]
	fld	DWORD PTR _fileField$[ebp+56]
	fmul	DWORD PTR _fileField$[ebp+56]
	faddp	ST(1), ST(0)
	fld	DWORD PTR _fileField$[ebp+60]
	fmul	DWORD PTR _fileField$[ebp+60]
	faddp	ST(1), ST(0)
	push	ecx
	fstp	DWORD PTR [esp]
	call	?sqrt@@YAMM@Z				; sqrt
	add	esp, 4
	fstp	DWORD PTR _rad$[ebp]

; 948  : 			SetBBox(&bBox, -rad, rad, -rad, rad, -rad, rad);

	fld	DWORD PTR _rad$[ebp]
	fchs
	fstp	DWORD PTR _bBox$[ebp]
	mov	eax, DWORD PTR _rad$[ebp]
	mov	DWORD PTR _bBox$[ebp+4], eax
	fld	DWORD PTR _rad$[ebp]
	fchs
	fstp	DWORD PTR _bBox$[ebp+8]
	mov	eax, DWORD PTR _rad$[ebp]
	mov	DWORD PTR _bBox$[ebp+12], eax
	fld	DWORD PTR _rad$[ebp]
	fchs
	fstp	DWORD PTR _bBox$[ebp+16]
	mov	eax, DWORD PTR _rad$[ebp]
	mov	DWORD PTR _bBox$[ebp+20], eax

; 949  : 			AddLinearField(FIELD_PARENT_NONE, FIELD_PRIORITY_MAX, &LEV_LevelFieldPos[iField], &LEV_LevelFieldMat[iField], &bBox, (VEC *)&fileField.Size, &fileField.Dir, fileField.Mag, fileField.Damping);

	mov	eax, DWORD PTR _fileField$[ebp+80]
	push	eax
	mov	ecx, DWORD PTR _fileField$[ebp+76]
	push	ecx
	lea	edx, DWORD PTR _fileField$[ebp+64]
	push	edx
	lea	eax, DWORD PTR _fileField$[ebp+52]
	push	eax
	lea	ecx, DWORD PTR _bBox$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iField$[ebp]
	imul	edx, 36					; 00000024H
	add	edx, DWORD PTR ?LEV_LevelFieldMat@@3PATMatrixUnion@@A ; LEV_LevelFieldMat
	push	edx
	mov	eax, DWORD PTR _iField$[ebp]
	imul	eax, 12					; 0000000cH
	add	eax, DWORD PTR ?LEV_LevelFieldPos@@3PAUVectorStruct@@A ; LEV_LevelFieldPos
	push	eax
	push	0
	push	-1
	call	?AddLinearField@@YAPAUForceFieldStruct@@JJPAUVectorStruct@@PATMatrixUnion@@PAUBBOX@@00MM@Z ; AddLinearField
	add	esp, 36					; 00000024H

; 950  : 			break;

	jmp	$L83292
$L83298:

; 951  : 
; 952  : 		case FILE_FIELD_TYPE_ORIENTATION:
; 953  : 			rad = (REAL)sqrt(fileField.Size[0] * fileField.Size[0] + fileField.Size[1] * fileField.Size[1] + fileField.Size[2] * fileField.Size[2]);

	fld	DWORD PTR _fileField$[ebp+52]
	fmul	DWORD PTR _fileField$[ebp+52]
	fld	DWORD PTR _fileField$[ebp+56]
	fmul	DWORD PTR _fileField$[ebp+56]
	faddp	ST(1), ST(0)
	fld	DWORD PTR _fileField$[ebp+60]
	fmul	DWORD PTR _fileField$[ebp+60]
	faddp	ST(1), ST(0)
	push	ecx
	fstp	DWORD PTR [esp]
	call	?sqrt@@YAMM@Z				; sqrt
	add	esp, 4
	fstp	DWORD PTR _rad$[ebp]

; 954  : 			SetBBox(&bBox, -rad, rad, -rad, rad, -rad, rad);

	fld	DWORD PTR _rad$[ebp]
	fchs
	fstp	DWORD PTR _bBox$[ebp]
	mov	eax, DWORD PTR _rad$[ebp]
	mov	DWORD PTR _bBox$[ebp+4], eax
	fld	DWORD PTR _rad$[ebp]
	fchs
	fstp	DWORD PTR _bBox$[ebp+8]
	mov	eax, DWORD PTR _rad$[ebp]
	mov	DWORD PTR _bBox$[ebp+12], eax
	fld	DWORD PTR _rad$[ebp]
	fchs
	fstp	DWORD PTR _bBox$[ebp+16]
	mov	eax, DWORD PTR _rad$[ebp]
	mov	DWORD PTR _bBox$[ebp+20], eax

; 955  : 			AddOrientationField(FIELD_PARENT_NONE, FIELD_PRIORITY_MAX, &LEV_LevelFieldPos[iField], &LEV_LevelFieldMat[iField], &bBox, (VEC *)&fileField.Size, &fileField.Dir, fileField.Mag, fileField.Damping);

	mov	eax, DWORD PTR _fileField$[ebp+80]
	push	eax
	mov	ecx, DWORD PTR _fileField$[ebp+76]
	push	ecx
	lea	edx, DWORD PTR _fileField$[ebp+64]
	push	edx
	lea	eax, DWORD PTR _fileField$[ebp+52]
	push	eax
	lea	ecx, DWORD PTR _bBox$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iField$[ebp]
	imul	edx, 36					; 00000024H
	add	edx, DWORD PTR ?LEV_LevelFieldMat@@3PATMatrixUnion@@A ; LEV_LevelFieldMat
	push	edx
	mov	eax, DWORD PTR _iField$[ebp]
	imul	eax, 12					; 0000000cH
	add	eax, DWORD PTR ?LEV_LevelFieldPos@@3PAUVectorStruct@@A ; LEV_LevelFieldPos
	push	eax
	push	0
	push	-1
	call	?AddOrientationField@@YAPAUForceFieldStruct@@JJPAUVectorStruct@@PATMatrixUnion@@PAUBBOX@@00MM@Z ; AddOrientationField
	add	esp, 36					; 00000024H

; 956  : 			break;

	jmp	$L83292
$L83301:

; 957  : 
; 958  : 		case FILE_FIELD_TYPE_VELOCITY:
; 959  : 			rad = (REAL)sqrt(fileField.Size[0] * fileField.Size[0] + fileField.Size[1] * fileField.Size[1] + fileField.Size[2] * fileField.Size[2]);

	fld	DWORD PTR _fileField$[ebp+52]
	fmul	DWORD PTR _fileField$[ebp+52]
	fld	DWORD PTR _fileField$[ebp+56]
	fmul	DWORD PTR _fileField$[ebp+56]
	faddp	ST(1), ST(0)
	fld	DWORD PTR _fileField$[ebp+60]
	fmul	DWORD PTR _fileField$[ebp+60]
	faddp	ST(1), ST(0)
	push	ecx
	fstp	DWORD PTR [esp]
	call	?sqrt@@YAMM@Z				; sqrt
	add	esp, 4
	fstp	DWORD PTR _rad$[ebp]

; 960  : 			SetBBox(&bBox, -rad, rad, -rad, rad, -rad, rad);

	fld	DWORD PTR _rad$[ebp]
	fchs
	fstp	DWORD PTR _bBox$[ebp]
	mov	eax, DWORD PTR _rad$[ebp]
	mov	DWORD PTR _bBox$[ebp+4], eax
	fld	DWORD PTR _rad$[ebp]
	fchs
	fstp	DWORD PTR _bBox$[ebp+8]
	mov	eax, DWORD PTR _rad$[ebp]
	mov	DWORD PTR _bBox$[ebp+12], eax
	fld	DWORD PTR _rad$[ebp]
	fchs
	fstp	DWORD PTR _bBox$[ebp+16]
	mov	eax, DWORD PTR _rad$[ebp]
	mov	DWORD PTR _bBox$[ebp+20], eax

; 961  : 			AddVelocityField(FIELD_PARENT_NONE, FIELD_PRIORITY_MAX, &LEV_LevelFieldPos[iField], &LEV_LevelFieldMat[iField], &bBox, (VEC *)&fileField.Size, &fileField.Dir, fileField.Mag);

	mov	eax, DWORD PTR _fileField$[ebp+76]
	push	eax
	lea	ecx, DWORD PTR _fileField$[ebp+64]
	push	ecx
	lea	edx, DWORD PTR _fileField$[ebp+52]
	push	edx
	lea	eax, DWORD PTR _bBox$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iField$[ebp]
	imul	ecx, 36					; 00000024H
	add	ecx, DWORD PTR ?LEV_LevelFieldMat@@3PATMatrixUnion@@A ; LEV_LevelFieldMat
	push	ecx
	mov	edx, DWORD PTR _iField$[ebp]
	imul	edx, 12					; 0000000cH
	add	edx, DWORD PTR ?LEV_LevelFieldPos@@3PAUVectorStruct@@A ; LEV_LevelFieldPos
	push	edx
	push	0
	push	-1
	call	?AddVelocityField@@YAPAUForceFieldStruct@@JJPAUVectorStruct@@PATMatrixUnion@@PAUBBOX@@00M@Z ; AddVelocityField
	add	esp, 32					; 00000020H

; 962  : 			break;

	jmp	SHORT $L83292
$L83304:

; 963  : 
; 964  : 		case FILE_FIELD_TYPE_SPHERICAL:
; 965  : 			rad = fileField.RadEnd;

	mov	eax, DWORD PTR _fileField$[ebp+88]
	mov	DWORD PTR _rad$[ebp], eax

; 966  : 			SetBBox(&bBox, -rad, rad, -rad, rad, -rad, rad);

	fld	DWORD PTR _rad$[ebp]
	fchs
	fstp	DWORD PTR _bBox$[ebp]
	mov	eax, DWORD PTR _rad$[ebp]
	mov	DWORD PTR _bBox$[ebp+4], eax
	fld	DWORD PTR _rad$[ebp]
	fchs
	fstp	DWORD PTR _bBox$[ebp+8]
	mov	eax, DWORD PTR _rad$[ebp]
	mov	DWORD PTR _bBox$[ebp+12], eax
	fld	DWORD PTR _rad$[ebp]
	fchs
	fstp	DWORD PTR _bBox$[ebp+16]
	mov	eax, DWORD PTR _rad$[ebp]
	mov	DWORD PTR _bBox$[ebp+20], eax

; 967  : 			AddSphericalField(FIELD_PARENT_NONE, FIELD_PRIORITY_MAX, &LEV_LevelFieldPos[iField], fileField.RadStart, fileField.RadEnd, fileField.GradStart, fileField.GradEnd);

	mov	eax, DWORD PTR _fileField$[ebp+96]
	push	eax
	mov	ecx, DWORD PTR _fileField$[ebp+92]
	push	ecx
	mov	edx, DWORD PTR _fileField$[ebp+88]
	push	edx
	mov	eax, DWORD PTR _fileField$[ebp+84]
	push	eax
	mov	ecx, DWORD PTR _iField$[ebp]
	imul	ecx, 12					; 0000000cH
	add	ecx, DWORD PTR ?LEV_LevelFieldPos@@3PAUVectorStruct@@A ; LEV_LevelFieldPos
	push	ecx
	push	0
	push	-1
	call	?AddSphericalField@@YAPAUForceFieldStruct@@JJPAUVectorStruct@@MMMM@Z ; AddSphericalField
	add	esp, 28					; 0000001cH
$L83292:

; 968  : 			break;
; 969  : 		
; 970  : 		default:
; 971  : 			break;
; 972  : 		}
; 973  : 	}

	jmp	$L83287
$L83288:

; 974  : 
; 975  : 	fclose(fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fclose
	add	esp, 4

; 976  : 	return TRUE;

	mov	al, 1
$L83270:

; 977  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$L83529:
	DD	$L83295
	DD	$L83298
	DD	$L83301
	DD	$L83304
?LoadLevelFields@@YA_NPAULEVELINFO@@@Z ENDP		; LoadLevelFields
_TEXT	ENDS
PUBLIC	_sqrtf
; Function compile flags: /Odt /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\include\math.h
;	COMDAT ?sqrt@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?sqrt@@YAMM@Z PROC NEAR					; sqrt, COMDAT

; 579  :         {return (sqrtf(_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR __X$[ebp]
	push	eax
	call	_sqrtf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?sqrt@@YAMM@Z ENDP					; sqrt
_TEXT	ENDS
EXTRN	_sqrt:NEAR
; Function compile flags: /Odt /ZI
;	COMDAT _sqrtf
_TEXT	SEGMENT
tv70 = -68						; size = 4
__X$ = 8						; size = 4
_sqrtf	PROC NEAR					; COMDAT

; 470  :         {return ((float)sqrt((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	fld	DWORD PTR __X$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_sqrt
	add	esp, 8
	fst	DWORD PTR tv70[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_sqrtf	ENDP
_TEXT	ENDS
END
