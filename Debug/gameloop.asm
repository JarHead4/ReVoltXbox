; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\source\gameloop.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_06PPGAKMJI@RESUME?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05BBKNGMJO@?5QUIT?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CI@HJHDIFDO@State?5?$CFd?0?5?$CFd?5?5Lights?5?$CFd?5?5Car?5?$CFd?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CI@JLFCCLPH@Cube?5?$CFd?0?5?$CFd?5?5World?5?$CFd?0?5?$CFd?5?5Model@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BN@GDMHONFH@?$CF02d?3?$CF02d?3?$CF03d?5?$CF6?46s?5?9?5?$CF6?46s?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IsEqualGUID
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _==
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _acosl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _asinl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _atanl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _atan2l
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ceill
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _cosl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _coshl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _expl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _fabsl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _floorl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _fmodl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _frexpl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ldexpl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _logl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _log10l
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _modfl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _powl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sinl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sinhl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sqrtl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tanl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tanhl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _frexpf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ldexpf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _acosf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _asinf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _atanf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _atan2f
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ceilf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _cosf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _coshf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _expf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _fabsf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _floorf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _fmodf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _logf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _log10f
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _modff
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _powf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sinf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sinhf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sqrtf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tanf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tanhf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GLP_GameLoop@@YAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PawsMenu@@YAJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GhostTakeover@@YAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Pow_int@N@@YANNH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Pow_int@H@@YAHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Pow_int@M@@YAMMH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Pow_int@O@@YAOOH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCD
INCLUDELIB OLDNAMES

PUBLIC	?GhostTakeoverFlag@@3JA				; GhostTakeoverFlag
PUBLIC	?GhostTakeoverTime@@3JA				; GhostTakeoverTime
PUBLIC	?CamTime@@3MA					; CamTime
PUBLIC	?ChangeCamTime@@3MA				; ChangeCamTime
PUBLIC	?PawsMenuText@@3PAPADA				; PawsMenuText
PUBLIC	??_C@_06PPGAKMJI@RESUME?$AA@			; `string'
PUBLIC	??_C@_05BBKNGMJO@?5QUIT?$AA@			; `string'
PUBLIC	?GhostWeapon@@3PAJA				; GhostWeapon
PUBLIC	?NPhysicsLoops@@3HA				; NPhysicsLoops
PUBLIC	?DrawGridCollSkin@@3_NA				; DrawGridCollSkin
_BSS	SEGMENT
_DrawRearView DB 01H DUP (?)
	ALIGN	4

_DrawGhostView DB 01H DUP (?)
	ALIGN	4

_PhysicsInfoTog DB 01H DUP (?)
	ALIGN	4

?GhostTakeoverFlag@@3JA DD 01H DUP (?)			; GhostTakeoverFlag
?GhostTakeoverTime@@3JA DD 01H DUP (?)			; GhostTakeoverTime
?CamTime@@3MA DD 01H DUP (?)				; CamTime
?screendebugshow@?IE@??GLP_GameLoop@@YAXXZ@4JA DD 01H DUP (?) ; `GLP_GameLoop'[::E]::screendebugshow
?recordshow@?IJ@??GLP_GameLoop@@YAXXZ@4JA DD 01H DUP (?) ; `GLP_GameLoop'[::J]::recordshow
?ForceGhostCam@?1??GhostTakeover@@YAXXZ@4_NA DB 01H DUP (?) ; `GhostTakeover'::`2'::ForceGhostCam
	ALIGN	4

?NPhysicsLoops@@3HA DD 01H DUP (?)			; NPhysicsLoops
?DrawGridCollSkin@@3_NA DB 01H DUP (?)			; DrawGridCollSkin
_BSS	ENDS
_DATA	SEGMENT
?ChangeCamTime@@3MA DD 040a00000r		; 5	; ChangeCamTime
_DATA	ENDS
;	COMDAT ??_C@_06PPGAKMJI@RESUME?$AA@
CONST	SEGMENT
??_C@_06PPGAKMJI@RESUME?$AA@ DB 'RESUME', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05BBKNGMJO@?5QUIT?$AA@
CONST	SEGMENT
??_C@_05BBKNGMJO@?5QUIT?$AA@ DB ' QUIT', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
?PawsMenuText@@3PAPADA DD FLAT:??_C@_06PPGAKMJI@RESUME?$AA@ ; PawsMenuText
	DD	FLAT:??_C@_05BBKNGMJO@?5QUIT?$AA@
?GhostWeapon@@3PAJA DD 012H				; GhostWeapon
	DD	013H
	DD	015H
	DD	016H
	DD	019H
_DATA	ENDS
PUBLIC	??_C@_02DPKJAMEF@?$CFd?$AA@			; `string'
PUBLIC	??_C@_0CI@HJHDIFDO@State?5?$CFd?0?5?$CFd?5?5Lights?5?$CFd?5?5Car?5?$CFd?0@ ; `string'
PUBLIC	??_C@_0CI@JLFCCLPH@Cube?5?$CFd?0?5?$CFd?5?5World?5?$CFd?0?5?$CFd?5?5Model@ ; `string'
PUBLIC	??_C@_0BN@GDMHONFH@?$CF02d?3?$CF02d?3?$CF03d?5?$CF6?46s?5?9?5?$CF6?46s?$AA@ ; `string'
PUBLIC	__real@43160000
PUBLIC	__real@3f800000
PUBLIC	?GLP_GameLoop@@YAXXZ				; GLP_GameLoop
PUBLIC	?PawsMenu@@YAJXZ				; PawsMenu
EXTRN	?DrawMousePointer@@YAXK@Z:NEAR			; DrawMousePointer
EXTRN	?ResetMeshFxList@@YAXXZ:NEAR			; ResetMeshFxList
EXTRN	?EditAiNodes@@YAXXZ:NEAR			; EditAiNodes
EXTRN	?DrawAiNodes@@YAXXZ:NEAR			; DrawAiNodes
EXTRN	?DisplayAiNodeInfo@@YAXPAU_AINODE@@@Z:NEAR	; DisplayAiNodeInfo
EXTRN	?CurrentEditAiNode@@3PAU_AINODE@@A:DWORD	; CurrentEditAiNode
EXTRN	?EditAiNodeModel@@3PAUMODEL@@A:BYTE		; EditAiNodeModel
EXTRN	?SetCameraView@@YAXPATMatrixUnion@@PAUVectorStruct@@M@Z:NEAR ; SetCameraView
EXTRN	?EditFileZones@@YAXXZ:NEAR			; EditFileZones
EXTRN	?DrawFileZones@@YAXXZ:NEAR			; DrawFileZones
EXTRN	?DisplayZoneInfo@@YAXPAUFILE_ZONE@@@Z:NEAR	; DisplayZoneInfo
EXTRN	?SetViewport@@YAXMMMMM@Z:NEAR			; SetViewport
EXTRN	?DisplayCurrentTrackZone@@YAXXZ:NEAR		; DisplayCurrentTrackZone
EXTRN	?CurrentFileZone@@3PAUFILE_ZONE@@A:DWORD	; CurrentFileZone
EXTRN	?AddCamera@@YAPAUCameraStruct@@MMMMJ@Z:NEAR	; AddCamera
EXTRN	?RemoveCamera@@YAXPAUCameraStruct@@@Z:NEAR	; RemoveCamera
EXTRN	?UpdateCamera@@YAXPAUCameraStruct@@@Z:NEAR	; UpdateCamera
EXTRN	?SetCameraFollow@@YAXPAUCameraStruct@@PAUobject_def@@J@Z:NEAR ; SetCameraFollow
EXTRN	?CameraCount@@3DA:BYTE				; CameraCount
EXTRN	?DisplayPlayers@@YAXXZ:NEAR			; DisplayPlayers
EXTRN	?ResetOilSlickList@@YAXXZ:NEAR			; ResetOilSlickList
EXTRN	?Camera@@3PAUCameraStruct@@A:BYTE		; Camera
EXTRN	?CAM_MainCamera@@3PAUCameraStruct@@A:DWORD	; CAM_MainCamera
EXTRN	?GetRemoteMessages@@YADXZ:NEAR			; GetRemoteMessages
EXTRN	?DrawWorld@@YAXXZ:NEAR				; DrawWorld
EXTRN	?CRD_CheckLocalKeys@@YAXXZ:NEAR			; CRD_CheckLocalKeys
EXTRN	?CheckSurfaces@@YAXXZ:NEAR			; CheckSurfaces
EXTRN	?FlipBuffers@@YAXXZ:NEAR			; FlipBuffers
EXTRN	?ClearBuffers@@YAXXZ:NEAR			; ClearBuffers
EXTRN	?SendLocalCarData@@YAXXZ:NEAR			; SendLocalCarData
EXTRN	?ProcessTextureAnimations@@YAXXZ:NEAR		; ProcessTextureAnimations
EXTRN	?WorldBigCubeCount@@3FA:WORD			; WorldBigCubeCount
EXTRN	?WorldCubeCount@@3FA:WORD			; WorldCubeCount
EXTRN	?BuildAllCarWorldMatrices@@YAXXZ:NEAR		; BuildAllCarWorldMatrices
EXTRN	?WorldPolyCount@@3FA:WORD			; WorldPolyCount
EXTRN	?WorldDrawnCount@@3FA:WORD			; WorldDrawnCount
EXTRN	?PLR_LocalPlayer@@3PAUPlayerStruct@@A:DWORD	; PLR_LocalPlayer
EXTRN	?DrawAllCars@@YAXXZ:NEAR			; DrawAllCars
EXTRN	?DrawAllGhostCars@@YAXXZ:NEAR			; DrawAllGhostCars
EXTRN	?D3Ddevice@@3PAUIDirect3DDevice3@@A:DWORD	; D3Ddevice
EXTRN	?DrawAllCarShadows@@YAXXZ:NEAR			; DrawAllCarShadows
EXTRN	?DrawSkidMarks@@YAXXZ:NEAR			; DrawSkidMarks
EXTRN	?RenderStateChange@@3JA:DWORD			; RenderStateChange
EXTRN	?TextureStateChange@@3JA:DWORD			; TextureStateChange
EXTRN	?DrawObjects@@YAXXZ:NEAR			; DrawObjects
EXTRN	?UpdateTimeFactor@@YAXXZ:NEAR			; UpdateTimeFactor
EXTRN	?UpdateRaceTimers@@YAXXZ:NEAR			; UpdateRaceTimers
EXTRN	?TimerCurrent@@3KA:DWORD			; TimerCurrent
EXTRN	?DrawGridCollPolys@@YAXPAUCOLLGRID@@@Z:NEAR	; DrawGridCollPolys
EXTRN	?TimerFreq@@3KA:DWORD				; TimerFreq
EXTRN	?ReadKeyboard@@YAXXZ:NEAR			; ReadKeyboard
EXTRN	?ReadMouse@@YAXXZ:NEAR				; ReadMouse
EXTRN	?TrackRecords@@3URECORD_ENTRY@@A:BYTE		; TrackRecords
EXTRN	?ReadJoystick@@YAXXZ:NEAR			; ReadJoystick
EXTRN	?SetMouseExclusive@@YAXJ@Z:NEAR			; SetMouseExclusive
EXTRN	?Keys@@3PADA:BYTE				; Keys
EXTRN	?LastKeys@@3PADA:BYTE				; LastKeys
EXTRN	?StoreGhostData@@YA_NPAUCarStruct@@@Z:NEAR	; StoreGhostData
EXTRN	?GHO_GhostPlayer@@3PAUPlayerStruct@@A:DWORD	; GHO_GhostPlayer
EXTRN	?BeginTextState@@YAXXZ:NEAR			; BeginTextState
EXTRN	?EditVisiBoxes@@YAXXZ:NEAR			; EditVisiBoxes
EXTRN	?DisplayVisiBoxInfo@@YAXPAUVISIBOX@@@Z:NEAR	; DisplayVisiBoxInfo
EXTRN	?DisplayCamVisiMask@@YAXXZ:NEAR			; DisplayCamVisiMask
EXTRN	?DumpText@@YAXFFFFJPAD@Z:NEAR			; DumpText
EXTRN	?DrawVisiBoxes@@YAXXZ:NEAR			; DrawVisiBoxes
EXTRN	?DetailMenu@@YAXXZ:NEAR				; DetailMenu
EXTRN	?SetCameraVisiMask@@YAXPAUVectorStruct@@@Z:NEAR	; SetCameraVisiMask
EXTRN	?ShowPhysicsInfo@@YAXXZ:NEAR			; ShowPhysicsInfo
EXTRN	?CurrentVisiBox@@3PAUVISIBOX@@A:DWORD		; CurrentVisiBox
EXTRN	?DrawTriggers@@YAXXZ:NEAR			; DrawTriggers
EXTRN	?DisplayTriggerInfo@@YAXPAUFILE_TRIGGER@@@Z:NEAR ; DisplayTriggerInfo
EXTRN	?EditTriggers@@YAXXZ:NEAR			; EditTriggers
EXTRN	?CurrentTrigger@@3PAUFILE_TRIGGER@@A:DWORD	; CurrentTrigger
EXTRN	?LEV_EndLevel@@YAXXZ:NEAR			; LEV_EndLevel
EXTRN	?CheckTriggers@@YAXXZ:NEAR			; CheckTriggers
EXTRN	?DrawEditCamNodes@@YAXXZ:NEAR			; DrawEditCamNodes
EXTRN	?DisplayCamNodeInfo@@YAXPAU_EDIT_CAM_NODE@@@Z:NEAR ; DisplayCamNodeInfo
EXTRN	?EditCamNodes@@YAXXZ:NEAR			; EditCamNodes
EXTRN	?EditFileObjects@@YAXXZ:NEAR			; EditFileObjects
EXTRN	?CurrentEditCamNode@@3PAU_EDIT_CAM_NODE@@A:DWORD ; CurrentEditCamNode
EXTRN	?DrawFileObjects@@YAXXZ:NEAR			; DrawFileObjects
EXTRN	?DisplayFileObjectInfo@@YAXPAU_EDIT_OBJECT@@@Z:NEAR ; DisplayFileObjectInfo
EXTRN	?EditInstances@@YAXXZ:NEAR			; EditInstances
EXTRN	?DrawInstances@@YAXXZ:NEAR			; DrawInstances
EXTRN	?CurrentFileObject@@3PAU_EDIT_OBJECT@@A:DWORD	; CurrentFileObject
EXTRN	?PosToCollGrid@@YAPAUCOLLGRID@@PAUVectorStruct@@@Z:NEAR ; PosToCollGrid
EXTRN	?DisplayInstanceInfo@@YAXPAUINSTANCE@@@Z:NEAR	; DisplayInstanceInfo
EXTRN	__ftol2:NEAR
EXTRN	?CurrentInstance@@3PAUINSTANCE@@A:DWORD		; CurrentInstance
EXTRN	__fltused:NEAR
EXTRN	?BaseGeomPers@@3MA:DWORD			; BaseGeomPers
EXTRN	?IdentityMatrix@@3TMatrixUnion@@A:BYTE		; IdentityMatrix
EXTRN	?DrawFields@@YAXXZ:NEAR				; DrawFields
EXTRN	?DisplayFieldInfo@@YAXPAUFILE_FIELD@@@Z:NEAR	; DisplayFieldInfo
EXTRN	?EditFields@@YAXXZ:NEAR				; EditFields
EXTRN	?CurrentField@@3PAUFILE_FIELD@@A:DWORD		; CurrentField
EXTRN	?DrawControlPanel@@YAXXZ:NEAR			; DrawControlPanel
EXTRN	?ProcessLights@@YAXXZ:NEAR			; ProcessLights
EXTRN	?AI_Testing@@3JA:DWORD				; AI_Testing
EXTRN	?AI_ProcessAllAIs@@YAXXZ:NEAR			; AI_ProcessAllAIs
EXTRN	?COL_DoObjectCollisions@@YAXXZ:NEAR		; COL_DoObjectCollisions
EXTRN	?GoFront@@YAXXZ:NEAR				; GoFront
EXTRN	?EditPortals@@YAXXZ:NEAR			; EditPortals
EXTRN	?DrawPortals@@YAXXZ:NEAR			; DrawPortals
EXTRN	?DisplayPortalInfo@@YAXPAUEDIT_PORTAL@@@Z:NEAR	; DisplayPortalInfo
EXTRN	?CurrentPortal@@3PAUEDIT_PORTAL@@A:DWORD	; CurrentPortal
EXTRN	?CheckCheatStrings@@YAXXZ:NEAR			; CheckCheatStrings
EXTRN	?Everything@@3DA:BYTE				; Everything
EXTRN	?FrameCount@@3KA:DWORD				; FrameCount
EXTRN	?PauseAllSfx@@YAXXZ:NEAR			; PauseAllSfx
EXTRN	?FrameCountLast@@3KA:DWORD			; FrameCountLast
EXTRN	?FrameTime@@3KA:DWORD				; FrameTime
EXTRN	?FrameTimeLast@@3KA:DWORD			; FrameTimeLast
EXTRN	?FrameRate@@3KA:DWORD				; FrameRate
EXTRN	?DetailMenuTogg@@3DA:BYTE			; DetailMenuTogg
EXTRN	?EditMode@@3JA:DWORD				; EditMode
EXTRN	?TimeStep@@3MA:DWORD				; TimeStep
EXTRN	?DrawFileLights@@YAXXZ:NEAR			; DrawFileLights
EXTRN	?EditFileLights@@YAXXZ:NEAR			; EditFileLights
EXTRN	?Event@@3P6AXXZA:DWORD				; Event
EXTRN	?DisplayLightInfo@@YAXPAULIGHT@@@Z:NEAR		; DisplayLightInfo
EXTRN	?GameSettings@@3UGAME_SETTINGS@@A:BYTE		; GameSettings
EXTRN	?CurrentEditLight@@3PAULIGHT@@A:DWORD		; CurrentEditLight
EXTRN	?TotalLightCount@@3FA:WORD			; TotalLightCount
EXTRN	?MaintainAllSfx@@YAXXZ:NEAR			; MaintainAllSfx
EXTRN	?CON_DoPlayerControl@@YAXXZ:NEAR		; CON_DoPlayerControl
EXTRN	?DrawModel@@YAXPAUMODEL@@PATMatrixUnion@@PAUVectorStruct@@F@Z:NEAR ; DrawModel
EXTRN	?ProcessSparks@@YAXXZ:NEAR			; ProcessSparks
EXTRN	?DrawSparks@@YAXXZ:NEAR				; DrawSparks
EXTRN	?DrawTrails@@YAXXZ:NEAR				; DrawTrails
EXTRN	?FlushPolyBuckets@@YAXXZ:NEAR			; FlushPolyBuckets
EXTRN	?FlushEnvBuckets@@YAXXZ:NEAR			; FlushEnvBuckets
EXTRN	?MOV_MoveObjects@@YAXXZ:NEAR			; MOV_MoveObjects
EXTRN	?Reset3dPolyList@@YAXXZ:NEAR			; Reset3dPolyList
EXTRN	?Draw3dPolyList@@YAXXZ:NEAR			; Draw3dPolyList
EXTRN	__imp__wsprintfA:NEAR
EXTRN	?ResetSemiList@@YAXXZ:NEAR			; ResetSemiList
EXTRN	?DrawSemiList@@YAXXZ:NEAR			; DrawSemiList
EXTRN	?ModelPolyCount@@3FA:WORD			; ModelPolyCount
EXTRN	?ModelDrawnCount@@3FA:WORD			; ModelDrawnCount
EXTRN	?InitRenderStates@@YAXXZ:NEAR			; InitRenderStates
_BSS	SEGMENT
	ALIGN	4

_RearCamera DD	01H DUP (?)
_GhostCamera DD	01H DUP (?)
_PawsSelect DD	01H DUP (?)
_BSS	ENDS
;	COMDAT __real@43160000
; File c:\documents and settings\jarhead\desktop\shit to display my love for xbox revolt and fuck you borman-ness\revolt source\source\gameloop.cpp
CONST	SEGMENT
__real@43160000 DD 043160000r			; 150
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd?$AA@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd?$AA@ DB '%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@HJHDIFDO@State?5?$CFd?0?5?$CFd?5?5Lights?5?$CFd?5?5Car?5?$CFd?0@
CONST	SEGMENT
??_C@_0CI@HJHDIFDO@State?5?$CFd?0?5?$CFd?5?5Lights?5?$CFd?5?5Car?5?$CFd?0@ DB 'S'
	DB	'tate %d, %d  Lights %d  Car %d, %d, %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@JLFCCLPH@Cube?5?$CFd?0?5?$CFd?5?5World?5?$CFd?0?5?$CFd?5?5Model@
CONST	SEGMENT
??_C@_0CI@JLFCCLPH@Cube?5?$CFd?0?5?$CFd?5?5World?5?$CFd?0?5?$CFd?5?5Model@ DB 'C'
	DB	'ube %d, %d  World %d, %d  Model %d, %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@GDMHONFH@?$CF02d?3?$CF02d?3?$CF03d?5?$CF6?46s?5?9?5?$CF6?46s?$AA@
CONST	SEGMENT
??_C@_0BN@GDMHONFH@?$CF02d?3?$CF02d?3?$CF03d?5?$CF6?46s?5?9?5?$CF6?46s?$AA@ DB '%'
	DB	'02d:%02d:%03d %6.6s - %6.6s', 00H		; `string'
; Function compile flags: /Odt /ZI
CONST	ENDS
;	COMDAT ?GLP_GameLoop@@YAXXZ
_TEXT	SEGMENT
_buf$ = -264						; size = 256
_j$ = -8						; size = 4
_iStep$ = -4						; size = 4
?GLP_GameLoop@@YAXXZ PROC NEAR				; GLP_GameLoop, COMDAT

; 117  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi

; 118  : 	int iStep;
; 119  : 	long j;
; 120  : 	char buf[256];
; 121  : 
; 122  : // ghost take over?
; 123  : 
; 124  : #if GHOST_TAKEOVER
; 125  : 	GhostTakeover();

	call	?GhostTakeover@@YAXXZ			; GhostTakeover

; 126  : #endif
; 127  : 
; 128  : // cheat?
; 129  : 
; 130  : 	CheckCheatStrings();

	call	?CheckCheatStrings@@YAXXZ		; CheckCheatStrings

; 131  : 
; 132  : // reset 3d poly list
; 133  : 
; 134  : 	Reset3dPolyList();

	call	?Reset3dPolyList@@YAXXZ			; Reset3dPolyList

; 135  : 
; 136  : // Update game timers
; 137  : 
; 138  : 	FrameCount++;

	mov	eax, DWORD PTR ?FrameCount@@3KA		; FrameCount
	add	eax, 1
	mov	DWORD PTR ?FrameCount@@3KA, eax		; FrameCount

; 139  : 	UpdateTimeFactor();

	call	?UpdateTimeFactor@@YAXXZ		; UpdateTimeFactor

; 140  : 	UpdateRaceTimers();

	call	?UpdateRaceTimers@@YAXXZ		; UpdateRaceTimers

; 141  : 
; 142  : // Update the ghost car
; 143  : 
; 144  : 	StoreGhostData(&PLR_LocalPlayer->car);

	mov	eax, DWORD PTR ?PLR_LocalPlayer@@3PAUPlayerStruct@@A ; PLR_LocalPlayer
	add	eax, 44					; 0000002cH
	push	eax
	call	?StoreGhostData@@YA_NPAUCarStruct@@@Z	; StoreGhostData
	add	esp, 4

; 145  : 
; 146  : // update keyboard / mouse
; 147  : 
; 148  : 	ReadMouse();

	call	?ReadMouse@@YAXXZ			; ReadMouse

; 149  : 	ReadKeyboard();

	call	?ReadKeyboard@@YAXXZ			; ReadKeyboard

; 150  : 	ReadJoystick();

	call	?ReadJoystick@@YAXXZ			; ReadJoystick

; 151  : 
; 152  : // maintain sounds
; 153  : 
; 154  : 	MaintainAllSfx();

	call	?MaintainAllSfx@@YAXXZ			; MaintainAllSfx

; 155  : 
; 156  : // Get control inputs
; 157  : 
; 158  : 	CON_DoPlayerControl();

	call	?CON_DoPlayerControl@@YAXXZ		; CON_DoPlayerControl

; 159  : 
; 160  : // Check local keys for home, camera, etc
; 161  : 
; 162  : 	CRD_CheckLocalKeys();

	call	?CRD_CheckLocalKeys@@YAXXZ		; CRD_CheckLocalKeys

; 163  : 
; 164  : // reset mesh fx list
; 165  : 
; 166  : 	if (!GameSettings.Paws)

	cmp	DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+28, 0
	jne	SHORT $L83276

; 167  : 	{
; 168  : 		ResetMeshFxList();

	call	?ResetMeshFxList@@YAXXZ			; ResetMeshFxList
$L83276:

; 169  : 	}
; 170  : 
; 171  : // reset oil slick list
; 172  : 
; 173  : 	ResetOilSlickList();

	call	?ResetOilSlickList@@YAXXZ		; ResetOilSlickList

; 174  : 
; 175  : // perform AI
; 176  : 
; 177  : 	if (!GameSettings.Paws)

	cmp	DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+28, 0
	jne	SHORT $L83277

; 178  : 	{
; 179  : 		AI_ProcessAllAIs();

	call	?AI_ProcessAllAIs@@YAXXZ		; AI_ProcessAllAIs
$L83277:

; 180  : 	}
; 181  : 
; 182  : // move objects
; 183  : 
; 184  : 	if (!GameSettings.Paws)

	cmp	DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+28, 0
	jne	SHORT $L83278

; 185  : 	{
; 186  : 		NPhysicsLoops = 1 + (int) (TimeStep * MAX_TIMESTEP);

	fld	DWORD PTR ?TimeStep@@3MA		; TimeStep
	fmul	DWORD PTR __real@43160000
	call	__ftol2
	add	eax, 1
	mov	DWORD PTR ?NPhysicsLoops@@3HA, eax	; NPhysicsLoops

; 187  : 		TimeStep /= Real(NPhysicsLoops);

	fild	DWORD PTR ?NPhysicsLoops@@3HA		; NPhysicsLoops
	fmul	DWORD PTR __real@3f800000
	fdivr	DWORD PTR ?TimeStep@@3MA		; TimeStep
	fstp	DWORD PTR ?TimeStep@@3MA		; TimeStep

; 188  : 		for (iStep = 0; iStep < NPhysicsLoops; iStep++) {

	mov	DWORD PTR _iStep$[ebp], 0
	jmp	SHORT $L83281
$L83282:
	mov	eax, DWORD PTR _iStep$[ebp]
	add	eax, 1
	mov	DWORD PTR _iStep$[ebp], eax
$L83281:
	mov	eax, DWORD PTR _iStep$[ebp]
	cmp	eax, DWORD PTR ?NPhysicsLoops@@3HA	; NPhysicsLoops
	jge	SHORT $L83283

; 189  : 			//GRD_UpdateObjGrid();
; 190  : 
; 191  : 			// Deal with the collisions of the objects
; 192  : 			COL_DoObjectCollisions();

	call	?COL_DoObjectCollisions@@YAXXZ		; COL_DoObjectCollisions

; 193  : 
; 194  : 			// Move game objects
; 195  : 			MOV_MoveObjects();

	call	?MOV_MoveObjects@@YAXXZ			; MOV_MoveObjects

; 196  : 		}

	jmp	SHORT $L83282
$L83283:

; 197  : 		TimeStep *= Real(NPhysicsLoops);

	fild	DWORD PTR ?NPhysicsLoops@@3HA		; NPhysicsLoops
	fmul	DWORD PTR __real@3f800000
	fmul	DWORD PTR ?TimeStep@@3MA		; TimeStep
	fstp	DWORD PTR ?TimeStep@@3MA		; TimeStep
$L83278:

; 198  : 	}
; 199  : 
; 200  : // Send packets
; 201  : 
; 202  : 	if (!GameSettings.Paws)

	cmp	DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+28, 0
	jne	SHORT $L83285

; 203  : 	{
; 204  : 		if (GameSettings.GameType == GAMETYPE_SERVER || GameSettings.GameType == GAMETYPE_CLIENT)

	cmp	DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A, 2
	je	SHORT $L83287
	cmp	DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A, 3
	jne	SHORT $L83285
$L83287:

; 205  : 		{
; 206  : 			SendLocalCarData();

	call	?SendLocalCarData@@YAXXZ		; SendLocalCarData

; 207  : 			GetRemoteMessages();

	call	?GetRemoteMessages@@YADXZ		; GetRemoteMessages
$L83285:

; 208  : 		}
; 209  : 	}
; 210  : 		
; 211  : // Build car world matrices
; 212  : 
; 213  : 	BuildAllCarWorldMatrices();

	call	?BuildAllCarWorldMatrices@@YAXXZ	; BuildAllCarWorldMatrices

; 214  : 
; 215  : // Process lights
; 216  : 
; 217  : 	ProcessLights();

	call	?ProcessLights@@YAXXZ			; ProcessLights

; 218  : 
; 219  : // Process sparks
; 220  : 
; 221  : 	if (!GameSettings.Paws)

	cmp	DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+28, 0
	jne	SHORT $L83288

; 222  : 	{
; 223  : 		ProcessSparks();

	call	?ProcessSparks@@YAXXZ			; ProcessSparks
$L83288:

; 224  : 	}
; 225  : 
; 226  : // texture animations
; 227  : 
; 228  : 	ProcessTextureAnimations();

	call	?ProcessTextureAnimations@@YAXXZ	; ProcessTextureAnimations

; 229  : 
; 230  : // check triggers
; 231  : 
; 232  : 	CheckTriggers();

	call	?CheckTriggers@@YAXXZ			; CheckTriggers

; 233  : 
; 234  : // toggle rear view
; 235  : 
; 236  : 	if (Keys[DIK_R] && !LastKeys[DIK_R])

	movsx	eax, BYTE PTR ?Keys@@3PADA+19
	test	eax, eax
	je	SHORT $L83289
	movsx	eax, BYTE PTR ?LastKeys@@3PADA+19
	test	eax, eax
	jne	SHORT $L83289

; 237  : 	{
; 238  : 		DrawRearView = !DrawRearView;

	movzx	eax, BYTE PTR _DrawRearView
	neg	eax
	sbb	eax, eax
	inc	eax
	mov	BYTE PTR _DrawRearView, al

; 239  : 		if (DrawRearView) {

	movzx	eax, BYTE PTR _DrawRearView
	test	eax, eax
	je	SHORT $L83290

; 240  : 			RearCamera = AddCamera(32, 32, 128, 128, CAMERA_FLAG_SECONDARY);

	push	2
	push	1124073472				; 43000000H
	push	1124073472				; 43000000H
	push	1107296256				; 42000000H
	push	1107296256				; 42000000H
	call	?AddCamera@@YAPAUCameraStruct@@MMMMJ@Z	; AddCamera
	add	esp, 20					; 00000014H
	mov	DWORD PTR _RearCamera, eax

; 241  : 			SetCameraFollow(RearCamera, PLR_LocalPlayer->ownobj, CAM_FOLLOW_FRONT);

	push	4
	mov	eax, DWORD PTR ?PLR_LocalPlayer@@3PAUPlayerStruct@@A ; PLR_LocalPlayer
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _RearCamera
	push	edx
	call	?SetCameraFollow@@YAXPAUCameraStruct@@PAUobject_def@@J@Z ; SetCameraFollow
	add	esp, 12					; 0000000cH

; 242  : 		} else {

	jmp	SHORT $L83289
$L83290:

; 243  : 			RemoveCamera(RearCamera);

	mov	eax, DWORD PTR _RearCamera
	push	eax
	call	?RemoveCamera@@YAXPAUCameraStruct@@@Z	; RemoveCamera
	add	esp, 4
$L83289:

; 244  : 		}
; 245  : 	}
; 246  : 
; 247  : // toggle ghost view
; 248  : 
; 249  : 	if (Keys[DIK_G] && !LastKeys[DIK_G])

	movsx	eax, BYTE PTR ?Keys@@3PADA+34
	test	eax, eax
	je	SHORT $L83292
	movsx	eax, BYTE PTR ?LastKeys@@3PADA+34
	test	eax, eax
	jne	SHORT $L83292

; 250  : 	{
; 251  : 		DrawGhostView = !DrawGhostView;

	movzx	eax, BYTE PTR _DrawGhostView
	neg	eax
	sbb	eax, eax
	inc	eax
	mov	BYTE PTR _DrawGhostView, al

; 252  : 		if (DrawGhostView) {

	movzx	eax, BYTE PTR _DrawGhostView
	test	eax, eax
	je	SHORT $L83293

; 253  : 			GhostCamera = AddCamera(480, 32, 128, 128, CAMERA_FLAG_SECONDARY);

	push	2
	push	1124073472				; 43000000H
	push	1124073472				; 43000000H
	push	1107296256				; 42000000H
	push	1139802112				; 43f00000H
	call	?AddCamera@@YAPAUCameraStruct@@MMMMJ@Z	; AddCamera
	add	esp, 20					; 00000014H
	mov	DWORD PTR _GhostCamera, eax

; 254  : 			SetCameraFollow(GhostCamera, GHO_GhostPlayer->ownobj, CAM_FOLLOW_CLOSE);

	push	1
	mov	eax, DWORD PTR ?GHO_GhostPlayer@@3PAUPlayerStruct@@A ; GHO_GhostPlayer
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _GhostCamera
	push	edx
	call	?SetCameraFollow@@YAXPAUCameraStruct@@PAUobject_def@@J@Z ; SetCameraFollow
	add	esp, 12					; 0000000cH

; 255  : 		} else {

	jmp	SHORT $L83292
$L83293:

; 256  : 			RemoveCamera(GhostCamera);

	mov	eax, DWORD PTR _GhostCamera
	push	eax
	call	?RemoveCamera@@YAXPAUCameraStruct@@@Z	; RemoveCamera
	add	esp, 4
$L83292:

; 257  : 		}
; 258  : 	}
; 259  : 
; 260  : // surface check + flip
; 261  : 
; 262  : 	CheckSurfaces();

	call	?CheckSurfaces@@YAXXZ			; CheckSurfaces

; 263  : 	FlipBuffers();

	call	?FlipBuffers@@YAXXZ			; FlipBuffers

; 264  : 
; 265  : // record avi?
; 266  : 
; 267  : #if RECORD_AVI
; 268  : 	RecordAvi();
; 269  : #endif
; 270  : 
; 271  : // Begin render
; 272  : 
; 273  : 	D3Ddevice->BeginScene();

	mov	eax, DWORD PTR ?D3Ddevice@@3PAUIDirect3DDevice3@@A ; D3Ddevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?D3Ddevice@@3PAUIDirect3DDevice3@@A ; D3Ddevice
	push	edx
	call	DWORD PTR [ecx+36]

; 274  : 
; 275  : // render all cameras
; 276  : 
; 277  : 	for (CameraCount = 0 ; CameraCount < MAX_CAMERAS ; CameraCount++) if (Camera[CameraCount].Flag != CAMERA_FLAG_FREE)

	mov	BYTE PTR ?CameraCount@@3DA, 0		; CameraCount
	jmp	SHORT $L83295
$L83296:
	mov	al, BYTE PTR ?CameraCount@@3DA		; CameraCount
	add	al, 1
	mov	BYTE PTR ?CameraCount@@3DA, al		; CameraCount
$L83295:
	movsx	eax, BYTE PTR ?CameraCount@@3DA		; CameraCount
	cmp	eax, 8
	jge	$L83297
	movsx	eax, BYTE PTR ?CameraCount@@3DA		; CameraCount
	imul	eax, 348				; 0000015cH
	cmp	DWORD PTR ?Camera@@3PAUCameraStruct@@A[eax+344], 0
	je	$L83298

; 278  : 	{
; 279  : 
; 280  : // update camera + set camera view vars
; 281  : 
; 282  : 		UpdateCamera(&Camera[CameraCount]);

	movsx	eax, BYTE PTR ?CameraCount@@3DA		; CameraCount
	imul	eax, 348				; 0000015cH
	add	eax, OFFSET FLAT:?Camera@@3PAUCameraStruct@@A ; Camera
	push	eax
	call	?UpdateCamera@@YAXPAUCameraStruct@@@Z	; UpdateCamera
	add	esp, 4

; 283  : 
; 284  : // set and clear viewport
; 285  : 
; 286  : 		SetViewport(Camera[CameraCount].X, Camera[CameraCount].Y, Camera[CameraCount].Xsize, Camera[CameraCount].Ysize, BaseGeomPers + Camera[CameraCount].Lens);

	movsx	eax, BYTE PTR ?CameraCount@@3DA		; CameraCount
	imul	eax, 348				; 0000015cH
	fld	DWORD PTR ?BaseGeomPers@@3MA		; BaseGeomPers
	fadd	DWORD PTR ?Camera@@3PAUCameraStruct@@A[eax+168]
	push	ecx
	fstp	DWORD PTR [esp]
	movsx	ecx, BYTE PTR ?CameraCount@@3DA		; CameraCount
	imul	ecx, 348				; 0000015cH
	mov	edx, DWORD PTR ?Camera@@3PAUCameraStruct@@A[ecx+340]
	push	edx
	movsx	eax, BYTE PTR ?CameraCount@@3DA		; CameraCount
	imul	eax, 348				; 0000015cH
	mov	ecx, DWORD PTR ?Camera@@3PAUCameraStruct@@A[eax+336]
	push	ecx
	movsx	edx, BYTE PTR ?CameraCount@@3DA		; CameraCount
	imul	edx, 348				; 0000015cH
	mov	eax, DWORD PTR ?Camera@@3PAUCameraStruct@@A[edx+332]
	push	eax
	movsx	ecx, BYTE PTR ?CameraCount@@3DA		; CameraCount
	imul	ecx, 348				; 0000015cH
	mov	edx, DWORD PTR ?Camera@@3PAUCameraStruct@@A[ecx+328]
	push	edx
	call	?SetViewport@@YAXMMMMM@Z		; SetViewport
	add	esp, 20					; 00000014H

; 287  : 		InitRenderStates();

	call	?InitRenderStates@@YAXXZ		; InitRenderStates

; 288  : 		ClearBuffers();

	call	?ClearBuffers@@YAXXZ			; ClearBuffers

; 289  : 
; 290  : 		SetCameraView(&Camera[CameraCount].WMatrix, &Camera[CameraCount].WPos, Camera[CameraCount].Shake);

	movsx	eax, BYTE PTR ?CameraCount@@3DA		; CameraCount
	imul	eax, 348				; 0000015cH
	mov	ecx, DWORD PTR ?Camera@@3PAUCameraStruct@@A[eax+188]
	push	ecx
	movsx	edx, BYTE PTR ?CameraCount@@3DA		; CameraCount
	imul	edx, 348				; 0000015cH
	add	edx, OFFSET FLAT:?Camera@@3PAUCameraStruct@@A+68
	push	edx
	movsx	eax, BYTE PTR ?CameraCount@@3DA		; CameraCount
	imul	eax, 348				; 0000015cH
	add	eax, OFFSET FLAT:?Camera@@3PAUCameraStruct@@A+16
	push	eax
	call	?SetCameraView@@YAXPATMatrixUnion@@PAUVectorStruct@@M@Z ; SetCameraView
	add	esp, 12					; 0000000cH

; 291  : 		SetCameraVisiMask(&Camera[CameraCount].WPos);

	movsx	eax, BYTE PTR ?CameraCount@@3DA		; CameraCount
	imul	eax, 348				; 0000015cH
	add	eax, OFFSET FLAT:?Camera@@3PAUCameraStruct@@A+68
	push	eax
	call	?SetCameraVisiMask@@YAXPAUVectorStruct@@@Z ; SetCameraVisiMask
	add	esp, 4

; 292  : 
; 293  : // render opaque polys
; 294  : 
; 295  : 		ResetSemiList();

	call	?ResetSemiList@@YAXXZ			; ResetSemiList

; 296  : 
; 297  : 		if (DrawGridCollSkin)

	movzx	eax, BYTE PTR ?DrawGridCollSkin@@3_NA	; DrawGridCollSkin
	test	eax, eax
	je	SHORT $L83299

; 298  : 		{
; 299  : 			DrawGridCollPolys(PosToCollGrid(&PLR_LocalPlayer->car.Body->Centre.Pos));

	mov	eax, DWORD PTR ?PLR_LocalPlayer@@3PAUPlayerStruct@@A ; PLR_LocalPlayer
	mov	ecx, DWORD PTR [eax+900]
	add	ecx, 20					; 00000014H
	push	ecx
	call	?PosToCollGrid@@YAPAUCOLLGRID@@PAUVectorStruct@@@Z ; PosToCollGrid
	add	esp, 4
	push	eax
	call	?DrawGridCollPolys@@YAXPAUCOLLGRID@@@Z	; DrawGridCollPolys
	add	esp, 4

; 300  : 		}
; 301  : 		else

	jmp	SHORT $L83300
$L83299:

; 302  : 		{
; 303  : 			DrawWorld();

	call	?DrawWorld@@YAXXZ			; DrawWorld

; 304  : 			DrawInstances();

	call	?DrawInstances@@YAXXZ			; DrawInstances
$L83300:

; 305  : 		}
; 306  : 
; 307  : 		DrawObjects();

	call	?DrawObjects@@YAXXZ			; DrawObjects

; 308  : 		DrawAllCars();

	call	?DrawAllCars@@YAXXZ			; DrawAllCars

; 309  : 		Draw3dPolyList();

	call	?Draw3dPolyList@@YAXXZ			; Draw3dPolyList

; 310  : 
; 311  : // DRAW object at line-following camera pos
; 312  : 		//long nodeNum, linkNum;
; 313  : 		//FindNearestCameraPath(&PLR_LocalPlayer->car.Body->Centre.Pos, &nodeNum, &linkNum);
; 314  : 		//DrawModel(&PLR_LocalPlayer->car.Models->Body[0], &Identity, &CAM_NodeCamPos, MODEL_PLAIN);
; 315  : 
; 316  : // render edit models?
; 317  : 
; 318  : 		if (EditMode != EDIT_NONE)

	cmp	DWORD PTR ?EditMode@@3JA, 0		; EditMode
	je	$L83301

; 319  : 		{
; 320  : 			FlushPolyBuckets();

	call	?FlushPolyBuckets@@YAXXZ		; FlushPolyBuckets

; 321  : 
; 322  : 			if (EditMode == EDIT_LIGHTS) DrawFileLights();

	cmp	DWORD PTR ?EditMode@@3JA, 1		; EditMode
	jne	SHORT $L83302
	call	?DrawFileLights@@YAXXZ			; DrawFileLights
$L83302:

; 323  : 			if (EditMode == EDIT_VISIBOXES) DrawVisiBoxes();

	cmp	DWORD PTR ?EditMode@@3JA, 2		; EditMode
	jne	SHORT $L83303
	call	?DrawVisiBoxes@@YAXXZ			; DrawVisiBoxes
$L83303:

; 324  : 			if (EditMode == EDIT_OBJECTS) DrawFileObjects();

	cmp	DWORD PTR ?EditMode@@3JA, 3		; EditMode
	jne	SHORT $L83304
	call	?DrawFileObjects@@YAXXZ			; DrawFileObjects
$L83304:

; 325  : 			if (EditMode == EDIT_AINODES) DrawAiNodes();

	cmp	DWORD PTR ?EditMode@@3JA, 5		; EditMode
	jne	SHORT $L83305
	call	?DrawAiNodes@@YAXXZ			; DrawAiNodes
$L83305:

; 326  : 			if (EditMode == EDIT_ZONES) DrawFileZones();

	cmp	DWORD PTR ?EditMode@@3JA, 6		; EditMode
	jne	SHORT $L83306
	call	?DrawFileZones@@YAXXZ			; DrawFileZones
$L83306:

; 327  : 			if (EditMode == EDIT_TRIGGERS) DrawTriggers();

	cmp	DWORD PTR ?EditMode@@3JA, 7		; EditMode
	jne	SHORT $L83307
	call	?DrawTriggers@@YAXXZ			; DrawTriggers
$L83307:

; 328  : 			if (EditMode == EDIT_CAM || EditMode == EDIT_TRIGGERS) DrawEditCamNodes();

	cmp	DWORD PTR ?EditMode@@3JA, 8		; EditMode
	je	SHORT $L83309
	cmp	DWORD PTR ?EditMode@@3JA, 7		; EditMode
	jne	SHORT $L83308
$L83309:
	call	?DrawEditCamNodes@@YAXXZ		; DrawEditCamNodes
$L83308:

; 329  : 			if (EditMode == EDIT_FIELDS) DrawFields();

	cmp	DWORD PTR ?EditMode@@3JA, 9		; EditMode
	jne	SHORT $L83310
	call	?DrawFields@@YAXXZ			; DrawFields
$L83310:

; 330  : 			if (EditMode == EDIT_PORTALS) DrawPortals();

	cmp	DWORD PTR ?EditMode@@3JA, 10		; EditMode, 0000000aH
	jne	SHORT $L83301
	call	?DrawPortals@@YAXXZ			; DrawPortals
$L83301:

; 331  : 		}
; 332  : 
; 333  : // draw ai 'current node'
; 334  : 
; 335  : 		if (AI_Testing)

	cmp	DWORD PTR ?AI_Testing@@3JA, 0		; AI_Testing
	je	SHORT $L83312

; 336  : 		{
; 337  : 			if (PLR_LocalPlayer->CarAI.CurNode)

	mov	eax, DWORD PTR ?PLR_LocalPlayer@@3PAUPlayerStruct@@A ; PLR_LocalPlayer
	cmp	DWORD PTR [eax+10136], 0
	je	SHORT $L83312

; 338  : 			{
; 339  : 				DrawModel(&EditAiNodeModel[0], &IdentityMatrix, &PLR_LocalPlayer->CarAI.CurNode->Node[0].Pos, MODEL_PLAIN);

	push	0
	mov	eax, DWORD PTR ?PLR_LocalPlayer@@3PAUPlayerStruct@@A ; PLR_LocalPlayer
	mov	ecx, DWORD PTR [eax+10136]
	add	ecx, 40					; 00000028H
	push	ecx
	push	OFFSET FLAT:?IdentityMatrix@@3TMatrixUnion@@A ; IdentityMatrix
	push	OFFSET FLAT:?EditAiNodeModel@@3PAUMODEL@@A
	call	?DrawModel@@YAXPAUMODEL@@PATMatrixUnion@@PAUVectorStruct@@F@Z ; DrawModel
	add	esp, 16					; 00000010H

; 340  : 				DrawModel(&EditAiNodeModel[1], &IdentityMatrix, &PLR_LocalPlayer->CarAI.CurNode->Node[1].Pos, MODEL_PLAIN);

	push	0
	mov	eax, DWORD PTR ?PLR_LocalPlayer@@3PAUPlayerStruct@@A ; PLR_LocalPlayer
	mov	ecx, DWORD PTR [eax+10136]
	add	ecx, 56					; 00000038H
	push	ecx
	push	OFFSET FLAT:?IdentityMatrix@@3TMatrixUnion@@A ; IdentityMatrix
	push	OFFSET FLAT:?EditAiNodeModel@@3PAUMODEL@@A+60
	call	?DrawModel@@YAXPAUMODEL@@PATMatrixUnion@@PAUVectorStruct@@F@Z ; DrawModel
	add	esp, 16					; 00000010H
$L83312:

; 341  : 			}
; 342  : 		}
; 343  : 
; 344  : // flush poly buckets
; 345  : 
; 346  : 		FlushPolyBuckets();

	call	?FlushPolyBuckets@@YAXXZ		; FlushPolyBuckets

; 347  : 		FlushEnvBuckets();

	call	?FlushEnvBuckets@@YAXXZ			; FlushEnvBuckets

; 348  : 
; 349  : // render semi polys
; 350  : 
; 351  : 		DrawSemiList();

	call	?DrawSemiList@@YAXXZ			; DrawSemiList

; 352  : 		DrawSparks();

	call	?DrawSparks@@YAXXZ			; DrawSparks

; 353  : 		DrawTrails();

	call	?DrawTrails@@YAXXZ			; DrawTrails

; 354  : 		DrawSkidMarks();

	call	?DrawSkidMarks@@YAXXZ			; DrawSkidMarks

; 355  : 		DrawAllCarShadows();

	call	?DrawAllCarShadows@@YAXXZ		; DrawAllCarShadows

; 356  : 		DrawAllGhostCars();

	call	?DrawAllGhostCars@@YAXXZ		; DrawAllGhostCars

; 357  : 
; 358  : // begin primary camera stuff
; 359  : 
; 360  : 		if (Camera[CameraCount].Flag == CAMERA_FLAG_PRIMARY)

	movsx	eax, BYTE PTR ?CameraCount@@3DA		; CameraCount
	imul	eax, 348				; 0000015cH
	cmp	DWORD PTR ?Camera@@3PAUCameraStruct@@A[eax+344], 1
	jne	$L83298

; 361  : 		{
; 362  : 
; 363  : // edit mode?
; 364  : 
; 365  : 			if (EditMode != EDIT_NONE)

	cmp	DWORD PTR ?EditMode@@3JA, 0		; EditMode
	je	$L83315

; 366  : 			{
; 367  : 				if (EditMode == EDIT_LIGHTS) EditFileLights();

	cmp	DWORD PTR ?EditMode@@3JA, 1		; EditMode
	jne	SHORT $L83316
	call	?EditFileLights@@YAXXZ			; EditFileLights
$L83316:

; 368  : 				if (EditMode == EDIT_VISIBOXES) EditVisiBoxes();

	cmp	DWORD PTR ?EditMode@@3JA, 2		; EditMode
	jne	SHORT $L83317
	call	?EditVisiBoxes@@YAXXZ			; EditVisiBoxes
$L83317:

; 369  : 				if (EditMode == EDIT_OBJECTS) EditFileObjects();

	cmp	DWORD PTR ?EditMode@@3JA, 3		; EditMode
	jne	SHORT $L83318
	call	?EditFileObjects@@YAXXZ			; EditFileObjects
$L83318:

; 370  : 				if (EditMode == EDIT_INSTANCES) EditInstances();

	cmp	DWORD PTR ?EditMode@@3JA, 4		; EditMode
	jne	SHORT $L83319
	call	?EditInstances@@YAXXZ			; EditInstances
$L83319:

; 371  : 				if (EditMode == EDIT_AINODES) EditAiNodes();

	cmp	DWORD PTR ?EditMode@@3JA, 5		; EditMode
	jne	SHORT $L83320
	call	?EditAiNodes@@YAXXZ			; EditAiNodes
$L83320:

; 372  : 				if (EditMode == EDIT_ZONES) EditFileZones();

	cmp	DWORD PTR ?EditMode@@3JA, 6		; EditMode
	jne	SHORT $L83321
	call	?EditFileZones@@YAXXZ			; EditFileZones
$L83321:

; 373  : 				if (EditMode == EDIT_TRIGGERS) EditTriggers();

	cmp	DWORD PTR ?EditMode@@3JA, 7		; EditMode
	jne	SHORT $L83322
	call	?EditTriggers@@YAXXZ			; EditTriggers
$L83322:

; 374  : 				if (EditMode == EDIT_CAM) EditCamNodes();

	cmp	DWORD PTR ?EditMode@@3JA, 8		; EditMode
	jne	SHORT $L83323
	call	?EditCamNodes@@YAXXZ			; EditCamNodes
$L83323:

; 375  : 				if (EditMode == EDIT_FIELDS) EditFields();

	cmp	DWORD PTR ?EditMode@@3JA, 9		; EditMode
	jne	SHORT $L83324
	call	?EditFields@@YAXXZ			; EditFields
$L83324:

; 376  : 				if (EditMode == EDIT_PORTALS) EditPortals();

	cmp	DWORD PTR ?EditMode@@3JA, 10		; EditMode, 0000000aH
	jne	SHORT $L83315
	call	?EditPortals@@YAXXZ			; EditPortals
$L83315:

; 377  : 			}
; 378  : 
; 379  : // draw control panel
; 380  : 
; 381  : 			DrawControlPanel();

	call	?DrawControlPanel@@YAXXZ		; DrawControlPanel

; 382  : 
; 383  : // begin text state
; 384  : 
; 385  : 			BeginTextState();

	call	?BeginTextState@@YAXXZ			; BeginTextState

; 386  : 
; 387  : // display network players
; 388  : 
; 389  : 			if (GameSettings.GameType == GAMETYPE_SERVER || GameSettings.GameType == GAMETYPE_CLIENT)

	cmp	DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A, 2
	je	SHORT $L83327
	cmp	DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A, 3
	jne	SHORT $L83326
$L83327:

; 390  : 				DisplayPlayers();

	call	?DisplayPlayers@@YAXXZ			; DisplayPlayers
$L83326:

; 391  : 
; 392  : // display edit info?
; 393  : 
; 394  : 			if (CAM_MainCamera->Type == CAM_EDIT)

	mov	eax, DWORD PTR ?CAM_MainCamera@@3PAUCameraStruct@@A ; CAM_MainCamera
	cmp	DWORD PTR [eax], 5
	jne	$L83328

; 395  : 			{
; 396  : 				if (EditMode == EDIT_LIGHTS && CurrentEditLight) DisplayLightInfo(CurrentEditLight);

	cmp	DWORD PTR ?EditMode@@3JA, 1		; EditMode
	jne	SHORT $L83329
	cmp	DWORD PTR ?CurrentEditLight@@3PAULIGHT@@A, 0 ; CurrentEditLight
	je	SHORT $L83329
	mov	eax, DWORD PTR ?CurrentEditLight@@3PAULIGHT@@A ; CurrentEditLight
	push	eax
	call	?DisplayLightInfo@@YAXPAULIGHT@@@Z	; DisplayLightInfo
	add	esp, 4
$L83329:

; 397  : 				if (EditMode == EDIT_VISIBOXES && CurrentVisiBox) DisplayVisiBoxInfo(CurrentVisiBox);

	cmp	DWORD PTR ?EditMode@@3JA, 2		; EditMode
	jne	SHORT $L83330
	cmp	DWORD PTR ?CurrentVisiBox@@3PAUVISIBOX@@A, 0 ; CurrentVisiBox
	je	SHORT $L83330
	mov	eax, DWORD PTR ?CurrentVisiBox@@3PAUVISIBOX@@A ; CurrentVisiBox
	push	eax
	call	?DisplayVisiBoxInfo@@YAXPAUVISIBOX@@@Z	; DisplayVisiBoxInfo
	add	esp, 4
$L83330:

; 398  : 				if (EditMode == EDIT_OBJECTS && CurrentFileObject) DisplayFileObjectInfo(CurrentFileObject);

	cmp	DWORD PTR ?EditMode@@3JA, 3		; EditMode
	jne	SHORT $L83331
	cmp	DWORD PTR ?CurrentFileObject@@3PAU_EDIT_OBJECT@@A, 0 ; CurrentFileObject
	je	SHORT $L83331
	mov	eax, DWORD PTR ?CurrentFileObject@@3PAU_EDIT_OBJECT@@A ; CurrentFileObject
	push	eax
	call	?DisplayFileObjectInfo@@YAXPAU_EDIT_OBJECT@@@Z ; DisplayFileObjectInfo
	add	esp, 4
$L83331:

; 399  : 				if (EditMode == EDIT_INSTANCES && CurrentInstance) DisplayInstanceInfo(CurrentInstance);

	cmp	DWORD PTR ?EditMode@@3JA, 4		; EditMode
	jne	SHORT $L83332
	cmp	DWORD PTR ?CurrentInstance@@3PAUINSTANCE@@A, 0 ; CurrentInstance
	je	SHORT $L83332
	mov	eax, DWORD PTR ?CurrentInstance@@3PAUINSTANCE@@A ; CurrentInstance
	push	eax
	call	?DisplayInstanceInfo@@YAXPAUINSTANCE@@@Z ; DisplayInstanceInfo
	add	esp, 4
$L83332:

; 400  : 				if (EditMode == EDIT_AINODES && CurrentEditAiNode) DisplayAiNodeInfo(CurrentEditAiNode);

	cmp	DWORD PTR ?EditMode@@3JA, 5		; EditMode
	jne	SHORT $L83333
	cmp	DWORD PTR ?CurrentEditAiNode@@3PAU_AINODE@@A, 0 ; CurrentEditAiNode
	je	SHORT $L83333
	mov	eax, DWORD PTR ?CurrentEditAiNode@@3PAU_AINODE@@A ; CurrentEditAiNode
	push	eax
	call	?DisplayAiNodeInfo@@YAXPAU_AINODE@@@Z	; DisplayAiNodeInfo
	add	esp, 4
$L83333:

; 401  : 				if (EditMode == EDIT_ZONES && CurrentFileZone) DisplayZoneInfo(CurrentFileZone);

	cmp	DWORD PTR ?EditMode@@3JA, 6		; EditMode
	jne	SHORT $L83334
	cmp	DWORD PTR ?CurrentFileZone@@3PAUFILE_ZONE@@A, 0 ; CurrentFileZone
	je	SHORT $L83334
	mov	eax, DWORD PTR ?CurrentFileZone@@3PAUFILE_ZONE@@A ; CurrentFileZone
	push	eax
	call	?DisplayZoneInfo@@YAXPAUFILE_ZONE@@@Z	; DisplayZoneInfo
	add	esp, 4
$L83334:

; 402  : 				if (EditMode == EDIT_TRIGGERS && CurrentTrigger) DisplayTriggerInfo(CurrentTrigger);

	cmp	DWORD PTR ?EditMode@@3JA, 7		; EditMode
	jne	SHORT $L83335
	cmp	DWORD PTR ?CurrentTrigger@@3PAUFILE_TRIGGER@@A, 0 ; CurrentTrigger
	je	SHORT $L83335
	mov	eax, DWORD PTR ?CurrentTrigger@@3PAUFILE_TRIGGER@@A ; CurrentTrigger
	push	eax
	call	?DisplayTriggerInfo@@YAXPAUFILE_TRIGGER@@@Z ; DisplayTriggerInfo
	add	esp, 4
$L83335:

; 403  : 				if (EditMode == EDIT_CAM && CurrentEditCamNode) DisplayCamNodeInfo(CurrentEditCamNode);

	cmp	DWORD PTR ?EditMode@@3JA, 8		; EditMode
	jne	SHORT $L83336
	cmp	DWORD PTR ?CurrentEditCamNode@@3PAU_EDIT_CAM_NODE@@A, 0 ; CurrentEditCamNode
	je	SHORT $L83336
	mov	eax, DWORD PTR ?CurrentEditCamNode@@3PAU_EDIT_CAM_NODE@@A ; CurrentEditCamNode
	push	eax
	call	?DisplayCamNodeInfo@@YAXPAU_EDIT_CAM_NODE@@@Z ; DisplayCamNodeInfo
	add	esp, 4
$L83336:

; 404  : 				if (EditMode == EDIT_FIELDS && CurrentField) DisplayFieldInfo(CurrentField);

	cmp	DWORD PTR ?EditMode@@3JA, 9		; EditMode
	jne	SHORT $L83337
	cmp	DWORD PTR ?CurrentField@@3PAUFILE_FIELD@@A, 0 ; CurrentField
	je	SHORT $L83337
	mov	eax, DWORD PTR ?CurrentField@@3PAUFILE_FIELD@@A ; CurrentField
	push	eax
	call	?DisplayFieldInfo@@YAXPAUFILE_FIELD@@@Z	; DisplayFieldInfo
	add	esp, 4
$L83337:

; 405  : 				if (EditMode == EDIT_PORTALS && CurrentPortal) DisplayPortalInfo(CurrentPortal);

	cmp	DWORD PTR ?EditMode@@3JA, 10		; EditMode, 0000000aH
	jne	SHORT $L83338
	cmp	DWORD PTR ?CurrentPortal@@3PAUEDIT_PORTAL@@A, 0 ; CurrentPortal
	je	SHORT $L83338
	mov	eax, DWORD PTR ?CurrentPortal@@3PAUEDIT_PORTAL@@A ; CurrentPortal
	push	eax
	call	?DisplayPortalInfo@@YAXPAUEDIT_PORTAL@@@Z ; DisplayPortalInfo
	add	esp, 4
$L83338:

; 406  : 
; 407  : 				DrawMousePointer(0xffffff);

	push	16777215				; 00ffffffH
	call	?DrawMousePointer@@YAXK@Z		; DrawMousePointer
	add	esp, 4
$L83328:

; 408  : 			}
; 409  : 
; 410  : 			if (EditMode == EDIT_VISIBOXES) DisplayCamVisiMask();

	cmp	DWORD PTR ?EditMode@@3JA, 2		; EditMode
	jne	SHORT $L83339
	call	?DisplayCamVisiMask@@YAXXZ		; DisplayCamVisiMask
$L83339:

; 411  : 			if (EditMode == EDIT_ZONES) DisplayCurrentTrackZone();

	cmp	DWORD PTR ?EditMode@@3JA, 6		; EditMode
	jne	SHORT $L83340
	call	?DisplayCurrentTrackZone@@YAXXZ		; DisplayCurrentTrackZone
$L83340:

; 412  : 
; 413  : 
; 414  : // debug text
; 415  : 
; 416  : 			//wsprintf(buf, "MinDist = %d", (int)(1000.0f * LOSMinDist1));
; 417  : 			//DumpText(100, 50, 16, 24, 0xffffff, buf);
; 418  : 
; 419  : #if SCREEN_DEBUG
; 420  : 			FrameTime = TimerCurrent;

	mov	eax, DWORD PTR ?TimerCurrent@@3KA	; TimerCurrent
	mov	DWORD PTR ?FrameTime@@3KA, eax		; FrameTime

; 421  : 			if (FrameTime - FrameTimeLast > TimerFreq / 2)

	mov	eax, DWORD PTR ?FrameTime@@3KA		; FrameTime
	sub	eax, DWORD PTR ?FrameTimeLast@@3KA	; FrameTimeLast
	mov	ecx, DWORD PTR ?TimerFreq@@3KA		; TimerFreq
	shr	ecx, 1
	cmp	eax, ecx
	jbe	SHORT $L83341

; 422  : 			{
; 423  : 				FrameRate = (FrameCount - FrameCountLast) * TimerFreq / (FrameTime - FrameTimeLast);

	mov	eax, DWORD PTR ?FrameCount@@3KA		; FrameCount
	sub	eax, DWORD PTR ?FrameCountLast@@3KA	; FrameCountLast
	imul	eax, DWORD PTR ?TimerFreq@@3KA		; TimerFreq
	mov	ecx, DWORD PTR ?FrameTime@@3KA		; FrameTime
	sub	ecx, DWORD PTR ?FrameTimeLast@@3KA	; FrameTimeLast
	xor	edx, edx
	div	ecx
	mov	DWORD PTR ?FrameRate@@3KA, eax		; FrameRate

; 424  : 				FrameTimeLast = FrameTime;

	mov	eax, DWORD PTR ?FrameTime@@3KA		; FrameTime
	mov	DWORD PTR ?FrameTimeLast@@3KA, eax	; FrameTimeLast

; 425  : 				FrameCountLast = FrameCount;

	mov	eax, DWORD PTR ?FrameCount@@3KA		; FrameCount
	mov	DWORD PTR ?FrameCountLast@@3KA, eax	; FrameCountLast
$L83341:

; 426  : 			}
; 427  : 
; 428  : 			wsprintf(buf, "%d", FrameRate);

	mov	eax, DWORD PTR ?FrameRate@@3KA		; FrameRate
	push	eax
	push	OFFSET FLAT:??_C@_02DPKJAMEF@?$CFd?$AA@
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	DWORD PTR __imp__wsprintfA
	add	esp, 12					; 0000000cH

; 429  : 			DumpText(0, 0, 8, 16, 0xffff00, buf);

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	push	16776960				; 00ffff00H
	push	16					; 00000010H
	push	8
	push	0
	push	0
	call	?DumpText@@YAXFFFFJPAD@Z		; DumpText
	add	esp, 24					; 00000018H

; 430  : 
; 431  : 			static long screendebugshow = 0;
; 432  : 			if (Keys[DIK_F9] && !LastKeys[DIK_F9] && Everything) screendebugshow = !screendebugshow;

	movsx	eax, BYTE PTR ?Keys@@3PADA+67
	test	eax, eax
	je	SHORT $L83345
	movsx	eax, BYTE PTR ?LastKeys@@3PADA+67
	test	eax, eax
	jne	SHORT $L83345
	movsx	eax, BYTE PTR ?Everything@@3DA		; Everything
	test	eax, eax
	je	SHORT $L83345
	xor	eax, eax
	cmp	DWORD PTR ?screendebugshow@?IE@??GLP_GameLoop@@YAXXZ@4JA, 0
	sete	al
	mov	DWORD PTR ?screendebugshow@?IE@??GLP_GameLoop@@YAXXZ@4JA, eax
$L83345:

; 433  : 
; 434  : 			if (screendebugshow)

	cmp	DWORD PTR ?screendebugshow@?IE@??GLP_GameLoop@@YAXXZ@4JA, 0
	je	$L83346

; 435  : 			{
; 436  : 				wsprintf(buf, "State %d, %d  Lights %d  Car %d, %d, %d", RenderStateChange, TextureStateChange, TotalLightCount, (long)PLR_LocalPlayer->car.Body->Centre.Pos.v[X], (long)PLR_LocalPlayer->car.Body->Centre.Pos.v[Y], (long)PLR_LocalPlayer->car.Body->Centre.Pos.v[Z]);

	mov	eax, DWORD PTR ?PLR_LocalPlayer@@3PAUPlayerStruct@@A ; PLR_LocalPlayer
	mov	ecx, DWORD PTR [eax+900]
	fld	DWORD PTR [ecx+28]
	call	__ftol2
	push	eax
	mov	edx, DWORD PTR ?PLR_LocalPlayer@@3PAUPlayerStruct@@A ; PLR_LocalPlayer
	mov	eax, DWORD PTR [edx+900]
	fld	DWORD PTR [eax+24]
	call	__ftol2
	push	eax
	mov	ecx, DWORD PTR ?PLR_LocalPlayer@@3PAUPlayerStruct@@A ; PLR_LocalPlayer
	mov	edx, DWORD PTR [ecx+900]
	fld	DWORD PTR [edx+20]
	call	__ftol2
	push	eax
	movsx	eax, WORD PTR ?TotalLightCount@@3FA	; TotalLightCount
	push	eax
	mov	ecx, DWORD PTR ?TextureStateChange@@3JA	; TextureStateChange
	push	ecx
	mov	edx, DWORD PTR ?RenderStateChange@@3JA	; RenderStateChange
	push	edx
	push	OFFSET FLAT:??_C@_0CI@HJHDIFDO@State?5?$CFd?0?5?$CFd?5?5Lights?5?$CFd?5?5Car?5?$CFd?0@
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	DWORD PTR __imp__wsprintfA
	add	esp, 32					; 00000020H

; 437  : 				DumpText(176, 0, 8, 16, 0xffffff, buf);

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	push	16777215				; 00ffffffH
	push	16					; 00000010H
	push	8
	push	0
	push	176					; 000000b0H
	call	?DumpText@@YAXFFFFJPAD@Z		; DumpText
	add	esp, 24					; 00000018H

; 438  : 
; 439  : 				wsprintf(buf, "Cube %d, %d  World %d, %d  Model %d, %d", WorldBigCubeCount, WorldCubeCount, WorldPolyCount, WorldDrawnCount, ModelPolyCount, ModelDrawnCount);

	movsx	eax, WORD PTR ?ModelDrawnCount@@3FA	; ModelDrawnCount
	push	eax
	movsx	ecx, WORD PTR ?ModelPolyCount@@3FA	; ModelPolyCount
	push	ecx
	movsx	edx, WORD PTR ?WorldDrawnCount@@3FA	; WorldDrawnCount
	push	edx
	movsx	eax, WORD PTR ?WorldPolyCount@@3FA	; WorldPolyCount
	push	eax
	movsx	ecx, WORD PTR ?WorldCubeCount@@3FA	; WorldCubeCount
	push	ecx
	movsx	edx, WORD PTR ?WorldBigCubeCount@@3FA	; WorldBigCubeCount
	push	edx
	push	OFFSET FLAT:??_C@_0CI@JLFCCLPH@Cube?5?$CFd?0?5?$CFd?5?5World?5?$CFd?0?5?$CFd?5?5Model@
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	DWORD PTR __imp__wsprintfA
	add	esp, 32					; 00000020H

; 440  : 				DumpText(0, 464, 8, 16, 0xffffff, buf);

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	push	16777215				; 00ffffffH
	push	16					; 00000010H
	push	8
	push	464					; 000001d0H
	push	0
	call	?DumpText@@YAXFFFFJPAD@Z		; DumpText
	add	esp, 24					; 00000018H
$L83346:

; 441  : 			}
; 442  : 
; 443  : #endif
; 444  : 
; 445  : // record times
; 446  : 
; 447  : #if SCREEN_TIMES
; 448  : 			static long recordshow = 0;
; 449  : 			if (Keys[DIK_F10] && !LastKeys[DIK_F10] && Everything) recordshow = (recordshow + 1) % 3;

	movsx	eax, BYTE PTR ?Keys@@3PADA+68
	test	eax, eax
	je	SHORT $L83354
	movsx	eax, BYTE PTR ?LastKeys@@3PADA+68
	test	eax, eax
	jne	SHORT $L83354
	movsx	eax, BYTE PTR ?Everything@@3DA		; Everything
	test	eax, eax
	je	SHORT $L83354
	mov	eax, DWORD PTR ?recordshow@?IJ@??GLP_GameLoop@@YAXXZ@4JA
	add	eax, 1
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	DWORD PTR ?recordshow@?IJ@??GLP_GameLoop@@YAXXZ@4JA, edx
$L83354:

; 450  : 
; 451  : 			if (recordshow == 1)

	cmp	DWORD PTR ?recordshow@?IJ@??GLP_GameLoop@@YAXXZ@4JA, 1
	jne	$L83355

; 452  : 			{
; 453  : 				for (j = 0 ; j < MAX_RECORD_TIMES ; j++)

	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $L83356
$L83357:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$L83356:
	cmp	DWORD PTR _j$[ebp], 10			; 0000000aH
	jge	$L83355

; 454  : 				{
; 455  : 					wsprintf(buf, "%02d:%02d:%03d %6.6s - %6.6s", MINUTES(TrackRecords.RecordLap[j].Time), SECONDS(TrackRecords.RecordLap[j].Time), THOUSANDTHS(TrackRecords.RecordLap[j].Time), TrackRecords.RecordLap[j].Player, TrackRecords.RecordLap[j].Car);

	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 132				; 00000084H
	add	eax, OFFSET FLAT:?TrackRecords@@3URECORD_ENTRY@@A+108
	push	eax
	mov	ecx, DWORD PTR _j$[ebp]
	imul	ecx, 132				; 00000084H
	add	ecx, OFFSET FLAT:?TrackRecords@@3URECORD_ENTRY@@A+44
	push	ecx
	mov	edx, DWORD PTR _j$[ebp]
	imul	edx, 132				; 00000084H
	mov	eax, DWORD PTR ?TrackRecords@@3URECORD_ENTRY@@A[edx+40]
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	ecx
	push	edx
	mov	edx, DWORD PTR _j$[ebp]
	imul	edx, 132				; 00000084H
	mov	eax, DWORD PTR ?TrackRecords@@3URECORD_ENTRY@@A[edx+40]
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	ecx
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	push	edx
	mov	edx, DWORD PTR _j$[ebp]
	imul	edx, 132				; 00000084H
	mov	eax, DWORD PTR ?TrackRecords@@3URECORD_ENTRY@@A[edx+40]
	cdq
	mov	ecx, 60000				; 0000ea60H
	idiv	ecx
	push	eax
	push	OFFSET FLAT:??_C@_0BN@GDMHONFH@?$CF02d?3?$CF02d?3?$CF03d?5?$CF6?46s?5?9?5?$CF6?46s?$AA@
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	DWORD PTR __imp__wsprintfA
	add	esp, 28					; 0000001cH

; 456  : 					DumpText(16, 128 + j * 16, 8, 16, 0x00ffff, buf);

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	push	65535					; 0000ffffH
	push	16					; 00000010H
	push	8
	mov	ecx, DWORD PTR _j$[ebp]
	shl	ecx, 4
	add	ecx, 128				; 00000080H
	push	ecx
	push	16					; 00000010H
	call	?DumpText@@YAXFFFFJPAD@Z		; DumpText
	add	esp, 24					; 00000018H

; 457  : 				}

	jmp	$L83357
$L83355:

; 458  : 			}
; 459  : 			if (recordshow == 2)

	cmp	DWORD PTR ?recordshow@?IJ@??GLP_GameLoop@@YAXXZ@4JA, 2
	jne	$L83360

; 460  : 			{
; 461  : 				for (j = 0 ; j < MAX_RECORD_TIMES ; j++)

	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $L83361
$L83362:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$L83361:
	cmp	DWORD PTR _j$[ebp], 10			; 0000000aH
	jge	$L83360

; 462  : 				{
; 463  : 					wsprintf(buf, "%02d:%02d:%03d %6.6s - %6.6s", MINUTES(TrackRecords.RecordRace[j].Time), SECONDS(TrackRecords.RecordRace[j].Time), THOUSANDTHS(TrackRecords.RecordRace[j].Time), TrackRecords.RecordRace[j].Player, TrackRecords.RecordRace[j].Car);

	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 132				; 00000084H
	add	eax, OFFSET FLAT:?TrackRecords@@3URECORD_ENTRY@@A+1428
	push	eax
	mov	ecx, DWORD PTR _j$[ebp]
	imul	ecx, 132				; 00000084H
	add	ecx, OFFSET FLAT:?TrackRecords@@3URECORD_ENTRY@@A+1364
	push	ecx
	mov	edx, DWORD PTR _j$[ebp]
	imul	edx, 132				; 00000084H
	mov	eax, DWORD PTR ?TrackRecords@@3URECORD_ENTRY@@A[edx+1360]
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	ecx
	push	edx
	mov	edx, DWORD PTR _j$[ebp]
	imul	edx, 132				; 00000084H
	mov	eax, DWORD PTR ?TrackRecords@@3URECORD_ENTRY@@A[edx+1360]
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	ecx
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	push	edx
	mov	edx, DWORD PTR _j$[ebp]
	imul	edx, 132				; 00000084H
	mov	eax, DWORD PTR ?TrackRecords@@3URECORD_ENTRY@@A[edx+1360]
	cdq
	mov	ecx, 60000				; 0000ea60H
	idiv	ecx
	push	eax
	push	OFFSET FLAT:??_C@_0BN@GDMHONFH@?$CF02d?3?$CF02d?3?$CF03d?5?$CF6?46s?5?9?5?$CF6?46s?$AA@
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	DWORD PTR __imp__wsprintfA
	add	esp, 28					; 0000001cH

; 464  : 					DumpText(16, 128 + j * 16, 8, 16, 0x00ffff, buf);

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	push	65535					; 0000ffffH
	push	16					; 00000010H
	push	8
	mov	ecx, DWORD PTR _j$[ebp]
	shl	ecx, 4
	add	ecx, 128				; 00000080H
	push	ecx
	push	16					; 00000010H
	call	?DumpText@@YAXFFFFJPAD@Z		; DumpText
	add	esp, 24					; 00000018H

; 465  : 				}

	jmp	$L83362
$L83360:

; 466  : 			}
; 467  : #endif
; 468  : 
; 469  : // detail menu
; 470  : 
; 471  : 			if (Keys[DIK_F12] && !LastKeys[DIK_F12] && !DetailMenuTogg && (Keys[DIK_LSHIFT] || Everything))

	movsx	eax, BYTE PTR ?Keys@@3PADA+88
	test	eax, eax
	je	SHORT $L83364
	movsx	eax, BYTE PTR ?LastKeys@@3PADA+88
	test	eax, eax
	jne	SHORT $L83364
	movsx	eax, BYTE PTR ?DetailMenuTogg@@3DA	; DetailMenuTogg
	test	eax, eax
	jne	SHORT $L83364
	movsx	eax, BYTE PTR ?Keys@@3PADA+42
	test	eax, eax
	jne	SHORT $L83365
	movsx	eax, BYTE PTR ?Everything@@3DA		; Everything
	test	eax, eax
	je	SHORT $L83364
$L83365:

; 472  : 			{
; 473  : 				DetailMenuTogg = TRUE;

	mov	BYTE PTR ?DetailMenuTogg@@3DA, 1	; DetailMenuTogg
$L83364:

; 474  : 			}
; 475  : 			if (Keys[DIK_ESCAPE] && !LastKeys[DIK_ESCAPE] && DetailMenuTogg)

	movsx	eax, BYTE PTR ?Keys@@3PADA+1
	test	eax, eax
	je	SHORT $L83366
	movsx	eax, BYTE PTR ?LastKeys@@3PADA+1
	test	eax, eax
	jne	SHORT $L83366
	movsx	eax, BYTE PTR ?DetailMenuTogg@@3DA	; DetailMenuTogg
	test	eax, eax
	je	SHORT $L83366

; 476  : 			{
; 477  : 				DetailMenuTogg = FALSE;

	mov	BYTE PTR ?DetailMenuTogg@@3DA, 0	; DetailMenuTogg

; 478  : 				LastKeys[DIK_ESCAPE] = TRUE;

	mov	BYTE PTR ?LastKeys@@3PADA+1, 1
$L83366:

; 479  : 			}
; 480  : 			if (DetailMenuTogg) DetailMenu();

	movsx	eax, BYTE PTR ?DetailMenuTogg@@3DA	; DetailMenuTogg
	test	eax, eax
	je	SHORT $L83367
	call	?DetailMenu@@YAXXZ			; DetailMenu
$L83367:

; 481  : 
; 482  : 
; 483  : // paws?
; 484  : 
; 485  : 			if (GameSettings.Paws)

	cmp	DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+28, 0
	je	SHORT $L83368

; 486  : 			{
; 487  : 				if (PawsMenu())

	call	?PawsMenu@@YAJXZ			; PawsMenu
	test	eax, eax
	je	SHORT $L83368

; 488  : 				{
; 489  : 					LEV_EndLevel();

	call	?LEV_EndLevel@@YAXXZ			; LEV_EndLevel

; 490  : 					Event = GoFront;

	mov	DWORD PTR ?Event@@3P6AXXZA, OFFSET FLAT:?GoFront@@YAXXZ ; Event, GoFront
$L83368:

; 491  : 				}
; 492  : 			}
; 493  : 
; 494  : 			if (Keys[DIK_ESCAPE] && !LastKeys[DIK_ESCAPE] && !DetailMenuTogg && !GameSettings.Paws)

	movsx	eax, BYTE PTR ?Keys@@3PADA+1
	test	eax, eax
	je	SHORT $L83370
	movsx	eax, BYTE PTR ?LastKeys@@3PADA+1
	test	eax, eax
	jne	SHORT $L83370
	movsx	eax, BYTE PTR ?DetailMenuTogg@@3DA	; DetailMenuTogg
	test	eax, eax
	jne	SHORT $L83370
	cmp	DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+28, 0
	jne	SHORT $L83370

; 495  : 			{
; 496  : 				GameSettings.Paws = TRUE;

	mov	DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+28, 1

; 497  : 				PawsSelect = 0;

	mov	DWORD PTR _PawsSelect, 0

; 498  : 				SetMouseExclusive(FALSE);

	push	0
	call	?SetMouseExclusive@@YAXJ@Z		; SetMouseExclusive
	add	esp, 4

; 499  : 				PauseAllSfx();

	call	?PauseAllSfx@@YAXXZ			; PauseAllSfx
$L83370:

; 500  : 			}
; 501  : 
; 502  : // physics info
; 503  : 
; 504  : #if SHOW_PHYSICS_INFO
; 505  : 			if (Keys[DIK_F11] && !LastKeys[DIK_F11] && Everything) PhysicsInfoTog = !PhysicsInfoTog;

	movsx	eax, BYTE PTR ?Keys@@3PADA+87
	test	eax, eax
	je	SHORT $L83371
	movsx	eax, BYTE PTR ?LastKeys@@3PADA+87
	test	eax, eax
	jne	SHORT $L83371
	movsx	eax, BYTE PTR ?Everything@@3DA		; Everything
	test	eax, eax
	je	SHORT $L83371
	movzx	eax, BYTE PTR _PhysicsInfoTog
	neg	eax
	sbb	eax, eax
	inc	eax
	mov	BYTE PTR _PhysicsInfoTog, al
$L83371:

; 506  : 			if (PhysicsInfoTog) ShowPhysicsInfo();

	movzx	eax, BYTE PTR _PhysicsInfoTog
	test	eax, eax
	je	SHORT $L83298
	call	?ShowPhysicsInfo@@YAXXZ			; ShowPhysicsInfo
$L83298:

; 507  : #endif
; 508  : 
; 509  : // read zzz
; 510  : 
; 511  : #if CHECK_ZZZ
; 512  : 			CheckZZZ();
; 513  : #endif
; 514  : 
; 515  : 		}
; 516  : 	}
; 517  : 
; 518  : // end render
; 519  : 
; 520  : 	D3Ddevice->EndScene();

	jmp	$L83296
$L83297:
	mov	eax, DWORD PTR ?D3Ddevice@@3PAUIDirect3DDevice3@@A ; D3Ddevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?D3Ddevice@@3PAUIDirect3DDevice3@@A ; D3Ddevice
	push	edx
	call	DWORD PTR [ecx+40]

; 521  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GLP_GameLoop@@YAXXZ ENDP				; GLP_GameLoop
_TEXT	ENDS
EXTRN	?RenderTP@@3FA:WORD				; RenderTP
EXTRN	?DumpBigText@@YAXFFFFJPAD@Z:NEAR		; DumpBigText
EXTRN	?ResumeAllSfx@@YAXXZ:NEAR			; ResumeAllSfx
EXTRN	?TexInfo@@3PAUTEXINFO@@A:DWORD			; TexInfo
; Function compile flags: /Odt /ZI
;	COMDAT ?PawsMenu@@YAJXZ
_TEXT	SEGMENT
_col$ = -8						; size = 4
_i$ = -4						; size = 4
?PawsMenu@@YAJXZ PROC NEAR				; PawsMenu, COMDAT

; 528  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi

; 529  : 	long i, col;
; 530  : 
; 531  : // move
; 532  : 
; 533  : 	if (Keys[DIK_UP] && !LastKeys[DIK_UP] && PawsSelect) PawsSelect--;

	movsx	eax, BYTE PTR ?Keys@@3PADA+200
	test	eax, eax
	je	SHORT $L83378
	movsx	eax, BYTE PTR ?LastKeys@@3PADA+200
	test	eax, eax
	jne	SHORT $L83378
	cmp	DWORD PTR _PawsSelect, 0
	je	SHORT $L83378
	mov	eax, DWORD PTR _PawsSelect
	sub	eax, 1
	mov	DWORD PTR _PawsSelect, eax
$L83378:

; 534  : 	if (Keys[DIK_DOWN] && !LastKeys[DIK_DOWN] && PawsSelect < PAWS_MENU_NUM - 1) PawsSelect++;

	movsx	eax, BYTE PTR ?Keys@@3PADA+208
	test	eax, eax
	je	SHORT $L83379
	movsx	eax, BYTE PTR ?LastKeys@@3PADA+208
	test	eax, eax
	jne	SHORT $L83379
	cmp	DWORD PTR _PawsSelect, 1
	jge	SHORT $L83379
	mov	eax, DWORD PTR _PawsSelect
	add	eax, 1
	mov	DWORD PTR _PawsSelect, eax
$L83379:

; 535  : 
; 536  : // sort each detail setting
; 537  : 
; 538  : 	for (i = 0 ; i < PAWS_MENU_NUM ; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $L83380
$L83381:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$L83380:
	cmp	DWORD PTR _i$[ebp], 2
	jge	$L83382

; 539  : 	{
; 540  : 		if (i == PawsSelect)

	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _PawsSelect
	jne	SHORT $L83383

; 541  : 			col = 0xffffff;

	mov	DWORD PTR _col$[ebp], 16777215		; 00ffffffH

; 542  : 		else

	jmp	SHORT $L83384
$L83383:

; 543  : 			col = 0x808080;

	mov	DWORD PTR _col$[ebp], 8421504		; 00808080H
$L83384:

; 544  : 
; 545  : // dump text
; 546  : 
; 547  : 		SET_TPAGE(TPAGE_BIGFONT);

	movsx	eax, WORD PTR ?RenderTP@@3FA		; RenderTP
	cmp	eax, 23					; 00000017H
	je	SHORT $L83385
	mov	WORD PTR ?RenderTP@@3FA, 23		; RenderTP, 00000017H
	movsx	eax, WORD PTR ?RenderTP@@3FA		; RenderTP
	cmp	eax, -1
	jne	SHORT $L83386
	push	0
	push	0
	mov	eax, DWORD PTR ?D3Ddevice@@3PAUIDirect3DDevice3@@A ; D3Ddevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?D3Ddevice@@3PAUIDirect3DDevice3@@A ; D3Ddevice
	push	edx
	call	DWORD PTR [ecx+152]
	mov	eax, DWORD PTR ?TextureStateChange@@3JA	; TextureStateChange
	add	eax, 1
	mov	DWORD PTR ?TextureStateChange@@3JA, eax	; TextureStateChange
	jmp	SHORT $L83385
$L83386:
	movsx	eax, WORD PTR ?RenderTP@@3FA		; RenderTP
	shl	eax, 6
	mov	ecx, DWORD PTR ?TexInfo@@3PAUTEXINFO@@A	; TexInfo
	mov	edx, DWORD PTR [ecx+eax+52]
	push	edx
	push	0
	mov	eax, DWORD PTR ?D3Ddevice@@3PAUIDirect3DDevice3@@A ; D3Ddevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?D3Ddevice@@3PAUIDirect3DDevice3@@A ; D3Ddevice
	push	edx
	call	DWORD PTR [ecx+152]
	mov	eax, DWORD PTR ?TextureStateChange@@3JA	; TextureStateChange
	add	eax, 1
	mov	DWORD PTR ?TextureStateChange@@3JA, eax	; TextureStateChange
$L83385:

; 548  : 		DumpBigText(248, i * 32 + 208, 24, 32, col, PawsMenuText[i]);

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?PawsMenuText@@3PAPADA[eax*4]
	push	ecx
	mov	edx, DWORD PTR _col$[ebp]
	push	edx
	push	32					; 00000020H
	push	24					; 00000018H
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, 208				; 000000d0H
	push	eax
	push	248					; 000000f8H
	call	?DumpBigText@@YAXFFFFJPAD@Z		; DumpBigText
	add	esp, 24					; 00000018H

; 549  : 		SET_TPAGE(TPAGE_FONT);

	movsx	eax, WORD PTR ?RenderTP@@3FA		; RenderTP
	cmp	eax, 22					; 00000016H
	je	SHORT $L83388
	mov	WORD PTR ?RenderTP@@3FA, 22		; RenderTP, 00000016H
	movsx	eax, WORD PTR ?RenderTP@@3FA		; RenderTP
	cmp	eax, -1
	jne	SHORT $L83389
	push	0
	push	0
	mov	eax, DWORD PTR ?D3Ddevice@@3PAUIDirect3DDevice3@@A ; D3Ddevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?D3Ddevice@@3PAUIDirect3DDevice3@@A ; D3Ddevice
	push	edx
	call	DWORD PTR [ecx+152]
	mov	eax, DWORD PTR ?TextureStateChange@@3JA	; TextureStateChange
	add	eax, 1
	mov	DWORD PTR ?TextureStateChange@@3JA, eax	; TextureStateChange
	jmp	SHORT $L83388
$L83389:
	movsx	eax, WORD PTR ?RenderTP@@3FA		; RenderTP
	shl	eax, 6
	mov	ecx, DWORD PTR ?TexInfo@@3PAUTEXINFO@@A	; TexInfo
	mov	edx, DWORD PTR [ecx+eax+52]
	push	edx
	push	0
	mov	eax, DWORD PTR ?D3Ddevice@@3PAUIDirect3DDevice3@@A ; D3Ddevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?D3Ddevice@@3PAUIDirect3DDevice3@@A ; D3Ddevice
	push	edx
	call	DWORD PTR [ecx+152]
	mov	eax, DWORD PTR ?TextureStateChange@@3JA	; TextureStateChange
	add	eax, 1
	mov	DWORD PTR ?TextureStateChange@@3JA, eax	; TextureStateChange
$L83388:

; 550  : 	}

	jmp	$L83381
$L83382:

; 551  : 
; 552  : // selected?
; 553  : 
; 554  : 	if (Keys[DIK_RETURN] && !LastKeys[DIK_RETURN])

	movsx	eax, BYTE PTR ?Keys@@3PADA+28
	test	eax, eax
	je	SHORT $L83391
	movsx	eax, BYTE PTR ?LastKeys@@3PADA+28
	test	eax, eax
	jne	SHORT $L83391

; 555  : 	{
; 556  : 		SetMouseExclusive(TRUE);

	push	1
	call	?SetMouseExclusive@@YAXJ@Z		; SetMouseExclusive
	add	esp, 4

; 557  : 
; 558  : 		if (PawsSelect == PAWS_MENU_RESUME)

	cmp	DWORD PTR _PawsSelect, 0
	jne	SHORT $L83392

; 559  : 		{
; 560  : 			GameSettings.Paws = FALSE;

	mov	DWORD PTR ?GameSettings@@3UGAME_SETTINGS@@A+28, 0

; 561  : 			ResumeAllSfx();

	call	?ResumeAllSfx@@YAXXZ			; ResumeAllSfx
$L83392:

; 562  : 		}
; 563  : 
; 564  : 		if (PawsSelect == PAWS_MENU_QUIT)

	cmp	DWORD PTR _PawsSelect, 1
	jne	SHORT $L83391

; 565  : 		{
; 566  : 			return TRUE;

	mov	eax, 1
	jmp	SHORT $L83375
$L83391:

; 567  : 		}
; 568  : 	}
; 569  : 
; 570  : // return OK
; 571  : 
; 572  : 	return FALSE;

	xor	eax, eax
$L83375:

; 573  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?PawsMenu@@YAJXZ ENDP					; PawsMenu
_TEXT	ENDS
PUBLIC	__real@447a0000
PUBLIC	__real@46fffe00
PUBLIC	__real@40c00000
PUBLIC	__real@40000000
PUBLIC	__real@42c80000
PUBLIC	__real@42480000
PUBLIC	__real@42680000
PUBLIC	__real@42840000
PUBLIC	__real@42940000
PUBLIC	__real@42a40000
PUBLIC	__real@42b40000
EXTRN	?SetCameraAttached@@YAXPAUCameraStruct@@PAUobject_def@@J@Z:NEAR ; SetCameraAttached
EXTRN	?SetCameraRail@@YAXPAUCameraStruct@@PAUobject_def@@J@Z:NEAR ; SetCameraRail
EXTRN	?InitCamPos@@YAXPAUCameraStruct@@@Z:NEAR	; InitCamPos
EXTRN	?GHO_BestGhostInfo@@3PAUGhostInfoStruct@@A:DWORD ; GHO_BestGhostInfo
EXTRN	?GHO_BestFrame@@3JA:DWORD			; GHO_BestFrame
EXTRN	?BestGhostData@@3PAUGhostDataStruct@@A:DWORD	; BestGhostData
EXTRN	_rand:NEAR
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@46fffe00
CONST	SEGMENT
__real@46fffe00 DD 046fffe00r			; 32767
CONST	ENDS
;	COMDAT __real@40c00000
CONST	SEGMENT
__real@40c00000 DD 040c00000r			; 6
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@42480000
CONST	SEGMENT
__real@42480000 DD 042480000r			; 50
CONST	ENDS
;	COMDAT __real@42680000
CONST	SEGMENT
__real@42680000 DD 042680000r			; 58
CONST	ENDS
;	COMDAT __real@42840000
CONST	SEGMENT
__real@42840000 DD 042840000r			; 66
CONST	ENDS
;	COMDAT __real@42940000
CONST	SEGMENT
__real@42940000 DD 042940000r			; 74
CONST	ENDS
;	COMDAT __real@42a40000
CONST	SEGMENT
__real@42a40000 DD 042a40000r			; 82
CONST	ENDS
;	COMDAT __real@42b40000
CONST	SEGMENT
__real@42b40000 DD 042b40000r			; 90
; Function compile flags: /Odt /ZI
CONST	ENDS
;	COMDAT ?GhostTakeover@@YAXXZ
_TEXT	SEGMENT
tv271 = -80						; size = 4
tv269 = -80						; size = 4
_choice$83423 = -12					; size = 4
_keys$ = -8						; size = 4
_i$ = -4						; size = 4
?GhostTakeover@@YAXXZ PROC NEAR				; GhostTakeover, COMDAT

; 625  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi

; 626  : 	long i, keys;
; 627  : 	static bool ForceGhostCam = FALSE;
; 628  : 
; 629  : // cockdex
; 630  : 
; 631  : /*	GhostSolid = TRUE;
; 632  : 	ForceGhostCam = TRUE;
; 633  : 
; 634  : 	if (!GhostTakeoverFlag)
; 635  : 	{
; 636  : 		GhostTakeoverFlag = TRUE;
; 637  : 		SetCameraRail(CAM_MainCamera, GHO_GhostPlayer->ownobj, 1);
; 638  : 	}
; 639  : 
; 640  : 	if (!(rand() & 1023))
; 641  : 	{
; 642  : 		long flag, weapon;
; 643  : 		flag = (long)GHO_GhostPlayer;
; 644  : 		weapon = GhostWeapon[rand() % 5];
; 645  : 		CreateObject(&GHO_GhostPlayer->car.Body->Centre.Pos, &GHO_GhostPlayer->car.Body->Centre.WMatrix, weapon, &flag);
; 646  : 	}*/
; 647  : 
; 648  : // Don't fuck up edit mode
; 649  : 
; 650  : 	if ((CAM_MainCamera->Type == CAM_EDIT) || (CAM_MainCamera->Type == CAM_FREEDOM))

	mov	eax, DWORD PTR ?CAM_MainCamera@@3PAUCameraStruct@@A ; CAM_MainCamera
	cmp	DWORD PTR [eax], 5
	je	SHORT $L83404
	mov	eax, DWORD PTR ?CAM_MainCamera@@3PAUCameraStruct@@A ; CAM_MainCamera
	cmp	DWORD PTR [eax], 3
	jne	SHORT $L83403
$L83404:

; 651  : 		return;

	jmp	$L83398
$L83403:

; 652  : 
; 653  : // get key state
; 654  : 
; 655  : 	keys = (PLR_LocalPlayer->controls.dx | PLR_LocalPlayer->controls.dy);

	mov	eax, DWORD PTR ?PLR_LocalPlayer@@3PAUPlayerStruct@@A ; PLR_LocalPlayer
	movsx	ecx, BYTE PTR [eax+28]
	mov	edx, DWORD PTR ?PLR_LocalPlayer@@3PAUPlayerStruct@@A ; PLR_LocalPlayer
	movsx	eax, BYTE PTR [edx+29]
	or	ecx, eax
	mov	DWORD PTR _keys$[ebp], ecx

; 656  : 
; 657  : 	if (!keys) for (i = 0 ; i < 256 ; i++)

	jne	SHORT $L83405
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $L83406
$L83407:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$L83406:
	cmp	DWORD PTR _i$[ebp], 256			; 00000100H
	jge	SHORT $L83405

; 658  : 	{
; 659  : 		if ((keys = Keys[i])) break;

	mov	eax, DWORD PTR _i$[ebp]
	movsx	ecx, BYTE PTR ?Keys@@3PADA[eax]
	mov	DWORD PTR _keys$[ebp], ecx
	cmp	DWORD PTR _keys$[ebp], 0
	je	SHORT $L83409
	jmp	SHORT $L83405
$L83409:

; 660  : 	}

	jmp	SHORT $L83407
$L83405:

; 661  : 
; 662  : 	if (Keys[DIK_F6] && !LastKeys[DIK_F6]) {

	movsx	eax, BYTE PTR ?Keys@@3PADA+64
	test	eax, eax
	je	SHORT $L83410
	movsx	eax, BYTE PTR ?LastKeys@@3PADA+64
	test	eax, eax
	jne	SHORT $L83410

; 663  : 		ForceGhostCam = !ForceGhostCam;

	movzx	eax, BYTE PTR ?ForceGhostCam@?1??GhostTakeover@@YAXXZ@4_NA
	neg	eax
	sbb	eax, eax
	inc	eax
	mov	BYTE PTR ?ForceGhostCam@?1??GhostTakeover@@YAXXZ@4_NA, al

; 664  : 		if (ForceGhostCam) {

	movzx	eax, BYTE PTR ?ForceGhostCam@?1??GhostTakeover@@YAXXZ@4_NA
	test	eax, eax
	je	SHORT $L83411

; 665  : 			SetCameraRail(CAM_MainCamera, GHO_GhostPlayer->ownobj, 1);

	push	1
	mov	eax, DWORD PTR ?GHO_GhostPlayer@@3PAUPlayerStruct@@A ; GHO_GhostPlayer
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR ?CAM_MainCamera@@3PAUCameraStruct@@A ; CAM_MainCamera
	push	edx
	call	?SetCameraRail@@YAXPAUCameraStruct@@PAUobject_def@@J@Z ; SetCameraRail
	add	esp, 12					; 0000000cH

; 666  : 		} else {

	jmp	SHORT $L83410
$L83411:

; 667  : 			GhostTakeoverFlag = FALSE;

	mov	DWORD PTR ?GhostTakeoverFlag@@3JA, 0	; GhostTakeoverFlag

; 668  : 			GhostTakeoverTime = 0;

	mov	DWORD PTR ?GhostTakeoverTime@@3JA, 0	; GhostTakeoverTime

; 669  : 			SetCameraFollow(CAM_MainCamera, PLR_LocalPlayer->ownobj, 0);

	push	0
	mov	eax, DWORD PTR ?PLR_LocalPlayer@@3PAUPlayerStruct@@A ; PLR_LocalPlayer
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR ?CAM_MainCamera@@3PAUCameraStruct@@A ; CAM_MainCamera
	push	edx
	call	?SetCameraFollow@@YAXPAUCameraStruct@@PAUobject_def@@J@Z ; SetCameraFollow
	add	esp, 12					; 0000000cH
$L83410:

; 670  : 		}
; 671  : 	}
; 672  : 
; 673  : 	if (Keys[DIK_F7] && !LastKeys[DIK_F7]) {

	movsx	eax, BYTE PTR ?Keys@@3PADA+65
	test	eax, eax
	je	SHORT $L83413
	movsx	eax, BYTE PTR ?LastKeys@@3PADA+65
	test	eax, eax
	jne	SHORT $L83413

; 674  : 		if (CAM_MainCamera->Object == GHO_GhostPlayer->ownobj) {

	mov	eax, DWORD PTR ?CAM_MainCamera@@3PAUCameraStruct@@A ; CAM_MainCamera
	mov	ecx, DWORD PTR ?GHO_GhostPlayer@@3PAUPlayerStruct@@A ; GHO_GhostPlayer
	mov	edx, DWORD PTR [eax+164]
	cmp	edx, DWORD PTR [ecx+40]
	jne	SHORT $L83414

; 675  : 			CAM_MainCamera->Object = PLR_LocalPlayer->ownobj;

	mov	eax, DWORD PTR ?CAM_MainCamera@@3PAUCameraStruct@@A ; CAM_MainCamera
	mov	ecx, DWORD PTR ?PLR_LocalPlayer@@3PAUPlayerStruct@@A ; PLR_LocalPlayer
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR [eax+164], edx

; 676  : 		} else {

	jmp	SHORT $L83415
$L83414:

; 677  : 			CAM_MainCamera->Object = GHO_GhostPlayer->ownobj;

	mov	eax, DWORD PTR ?CAM_MainCamera@@3PAUCameraStruct@@A ; CAM_MainCamera
	mov	ecx, DWORD PTR ?GHO_GhostPlayer@@3PAUPlayerStruct@@A ; GHO_GhostPlayer
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR [eax+164], edx
$L83415:

; 678  : 		}
; 679  : 		InitCamPos(CAM_MainCamera);

	mov	eax, DWORD PTR ?CAM_MainCamera@@3PAUCameraStruct@@A ; CAM_MainCamera
	push	eax
	call	?InitCamPos@@YAXPAUCameraStruct@@@Z	; InitCamPos
	add	esp, 4
$L83413:

; 680  : 	}
; 681  : 
; 682  : // human
; 683  : 
; 684  : 	if (!GhostTakeoverFlag && !ForceGhostCam)

	cmp	DWORD PTR ?GhostTakeoverFlag@@3JA, 0	; GhostTakeoverFlag
	jne	SHORT $L83416
	movzx	eax, BYTE PTR ?ForceGhostCam@?1??GhostTakeover@@YAXXZ@4_NA
	test	eax, eax
	jne	SHORT $L83416

; 685  : 	{
; 686  : 		GhostTakeoverTime += (long)(TimeStep * 1000.0f);

	fld	DWORD PTR ?TimeStep@@3MA		; TimeStep
	fmul	DWORD PTR __real@447a0000
	call	__ftol2
	add	eax, DWORD PTR ?GhostTakeoverTime@@3JA	; GhostTakeoverTime
	mov	DWORD PTR ?GhostTakeoverTime@@3JA, eax	; GhostTakeoverTime

; 687  : 		if (keys) GhostTakeoverTime = 0;

	cmp	DWORD PTR _keys$[ebp], 0
	je	SHORT $L83418
	mov	DWORD PTR ?GhostTakeoverTime@@3JA, 0	; GhostTakeoverTime
$L83418:

; 688  : 		if (GhostTakeoverTime > GHOST_TAKEOVER_TIME)

	cmp	DWORD PTR ?GhostTakeoverTime@@3JA, 10000000 ; GhostTakeoverTime, 00989680H
	jle	SHORT $L83419

; 689  : 		{
; 690  : 			GhostTakeoverFlag = TRUE;

	mov	DWORD PTR ?GhostTakeoverFlag@@3JA, 1	; GhostTakeoverFlag

; 691  : 			SetCameraRail(CAM_MainCamera, GHO_GhostPlayer->ownobj, 1);

	push	1
	mov	eax, DWORD PTR ?GHO_GhostPlayer@@3PAUPlayerStruct@@A ; GHO_GhostPlayer
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR ?CAM_MainCamera@@3PAUCameraStruct@@A ; CAM_MainCamera
	push	edx
	call	?SetCameraRail@@YAXPAUCameraStruct@@PAUobject_def@@J@Z ; SetCameraRail
	add	esp, 12					; 0000000cH
$L83419:

; 692  : 		}
; 693  : 	}
; 694  : 
; 695  : // ghost
; 696  : 
; 697  : 	else

	jmp	$L83398
$L83416:

; 698  : 	{
; 699  : 		if (GHO_BestFrame > GHO_BestGhostInfo->NFrames - 3)

	mov	eax, DWORD PTR ?GHO_BestGhostInfo@@3PAUGhostInfoStruct@@A ; GHO_BestGhostInfo
	mov	ecx, DWORD PTR [eax+112]
	sub	ecx, 3
	cmp	DWORD PTR ?GHO_BestFrame@@3JA, ecx	; GHO_BestFrame
	jle	SHORT $L83421

; 700  : 		{
; 701  : 			GHO_BestFrame = 0;

	mov	DWORD PTR ?GHO_BestFrame@@3JA, 0	; GHO_BestFrame

; 702  : 			GHO_GhostPlayer->car.CurrentLapStartTime = TimerCurrent - 
; 703  : 				(GHO_GhostPlayer->car.CurrentLapTime - BestGhostData[GHO_BestGhostInfo->NFrames - 1].Time);

	mov	eax, DWORD PTR ?GHO_BestGhostInfo@@3PAUGhostInfoStruct@@A ; GHO_BestGhostInfo
	mov	ecx, DWORD PTR [eax+112]
	sub	ecx, 1
	imul	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR ?GHO_GhostPlayer@@3PAUPlayerStruct@@A ; GHO_GhostPlayer
	mov	eax, DWORD PTR ?BestGhostData@@3PAUGhostDataStruct@@A ; BestGhostData
	mov	edx, DWORD PTR [edx+3468]
	sub	edx, DWORD PTR [eax+ecx]
	mov	eax, DWORD PTR ?TimerCurrent@@3KA	; TimerCurrent
	sub	eax, edx
	mov	ecx, DWORD PTR ?GHO_GhostPlayer@@3PAUPlayerStruct@@A ; GHO_GhostPlayer
	mov	DWORD PTR [ecx+3544], eax
$L83421:

; 704  : 
; 705  : 		}
; 706  : 
; 707  : // Change camera?
; 708  : 
; 709  : 		if (CamTime > ChangeCamTime) {

	fld	DWORD PTR ?CamTime@@3MA			; CamTime
	fcomp	DWORD PTR ?ChangeCamTime@@3MA		; ChangeCamTime
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	$L83422

; 710  : 			REAL choice;
; 711  : 
; 712  : 			CamTime = ZERO;

	mov	DWORD PTR ?CamTime@@3MA, 0

; 713  : 			ChangeCamTime = Real(2) + frand(6);

	call	_rand
	mov	DWORD PTR tv269[ebp], eax
	fild	DWORD PTR tv269[ebp]
	fdiv	DWORD PTR __real@46fffe00
	fmul	DWORD PTR __real@40c00000
	fadd	DWORD PTR __real@40000000
	fstp	DWORD PTR ?ChangeCamTime@@3MA		; ChangeCamTime

; 714  : 
; 715  : 			choice = frand(100);

	call	_rand
	mov	DWORD PTR tv271[ebp], eax
	fild	DWORD PTR tv271[ebp]
	fdiv	DWORD PTR __real@46fffe00
	fmul	DWORD PTR __real@42c80000
	fstp	DWORD PTR _choice$83423[ebp]

; 716  : 			if (choice < 50) {	

	fld	DWORD PTR _choice$83423[ebp]
	fcomp	DWORD PTR __real@42480000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $L83427

; 717  : 				// Static camera
; 718  : 				SetCameraRail(CAM_MainCamera, GHO_GhostPlayer->ownobj, CAM_RAIL_STATIC_NEAREST);

	push	1
	mov	eax, DWORD PTR ?GHO_GhostPlayer@@3PAUPlayerStruct@@A ; GHO_GhostPlayer
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR ?CAM_MainCamera@@3PAUCameraStruct@@A ; CAM_MainCamera
	push	edx
	call	?SetCameraRail@@YAXPAUCameraStruct@@PAUobject_def@@J@Z ; SetCameraRail
	add	esp, 12					; 0000000cH

; 719  : 			} else if (choice < 58) {

	jmp	$L83428
$L83427:
	fld	DWORD PTR _choice$83423[ebp]
	fcomp	DWORD PTR __real@42680000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $L83429

; 720  : 				// Follow camera
; 721  : 				SetCameraFollow(CAM_MainCamera, GHO_GhostPlayer->ownobj, CAM_FOLLOW_BEHIND);

	push	0
	mov	eax, DWORD PTR ?GHO_GhostPlayer@@3PAUPlayerStruct@@A ; GHO_GhostPlayer
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR ?CAM_MainCamera@@3PAUCameraStruct@@A ; CAM_MainCamera
	push	edx
	call	?SetCameraFollow@@YAXPAUCameraStruct@@PAUobject_def@@J@Z ; SetCameraFollow
	add	esp, 12					; 0000000cH

; 722  : 			} else if (choice < 66) {

	jmp	$L83428
$L83429:
	fld	DWORD PTR _choice$83423[ebp]
	fcomp	DWORD PTR __real@42840000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $L83431

; 723  : 				// Follow camera close
; 724  : 				SetCameraFollow(CAM_MainCamera, GHO_GhostPlayer->ownobj, CAM_FOLLOW_CLOSE);

	push	1
	mov	eax, DWORD PTR ?GHO_GhostPlayer@@3PAUPlayerStruct@@A ; GHO_GhostPlayer
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR ?CAM_MainCamera@@3PAUCameraStruct@@A ; CAM_MainCamera
	push	edx
	call	?SetCameraFollow@@YAXPAUCameraStruct@@PAUobject_def@@J@Z ; SetCameraFollow
	add	esp, 12					; 0000000cH

; 725  : 			} else if (choice < 74) {

	jmp	$L83428
$L83431:
	fld	DWORD PTR _choice$83423[ebp]
	fcomp	DWORD PTR __real@42940000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $L83433

; 726  : 				// Side Camera
; 727  : 				SetCameraFollow(CAM_MainCamera, GHO_GhostPlayer->ownobj, CAM_FOLLOW_LEFT);

	push	2
	mov	eax, DWORD PTR ?GHO_GhostPlayer@@3PAUPlayerStruct@@A ; GHO_GhostPlayer
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR ?CAM_MainCamera@@3PAUCameraStruct@@A ; CAM_MainCamera
	push	edx
	call	?SetCameraFollow@@YAXPAUCameraStruct@@PAUobject_def@@J@Z ; SetCameraFollow
	add	esp, 12					; 0000000cH

; 728  : 			} else if (choice < 82) {

	jmp	SHORT $L83428
$L83433:
	fld	DWORD PTR _choice$83423[ebp]
	fcomp	DWORD PTR __real@42a40000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $L83435

; 729  : 				// Side Camera
; 730  : 				SetCameraFollow(CAM_MainCamera, GHO_GhostPlayer->ownobj, CAM_FOLLOW_RIGHT);

	push	3
	mov	eax, DWORD PTR ?GHO_GhostPlayer@@3PAUPlayerStruct@@A ; GHO_GhostPlayer
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR ?CAM_MainCamera@@3PAUCameraStruct@@A ; CAM_MainCamera
	push	edx
	call	?SetCameraFollow@@YAXPAUCameraStruct@@PAUobject_def@@J@Z ; SetCameraFollow
	add	esp, 12					; 0000000cH

; 731  : 			} else if (choice < 90) {

	jmp	SHORT $L83428
$L83435:
	fld	DWORD PTR _choice$83423[ebp]
	fcomp	DWORD PTR __real@42b40000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $L83437

; 732  : 				// Rear View Camera
; 733  : 				SetCameraFollow(CAM_MainCamera, GHO_GhostPlayer->ownobj, CAM_FOLLOW_FRONT);

	push	4
	mov	eax, DWORD PTR ?GHO_GhostPlayer@@3PAUPlayerStruct@@A ; GHO_GhostPlayer
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR ?CAM_MainCamera@@3PAUCameraStruct@@A ; CAM_MainCamera
	push	edx
	call	?SetCameraFollow@@YAXPAUCameraStruct@@PAUobject_def@@J@Z ; SetCameraFollow
	add	esp, 12					; 0000000cH

; 734  : 			} else {

	jmp	SHORT $L83428
$L83437:

; 735  : 				// In car camera
; 736  : 				SetCameraAttached(CAM_MainCamera, GHO_GhostPlayer->ownobj, CAM_ATTACHED_INCAR);

	push	0
	mov	eax, DWORD PTR ?GHO_GhostPlayer@@3PAUPlayerStruct@@A ; GHO_GhostPlayer
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR ?CAM_MainCamera@@3PAUCameraStruct@@A ; CAM_MainCamera
	push	edx
	call	?SetCameraAttached@@YAXPAUCameraStruct@@PAUobject_def@@J@Z ; SetCameraAttached
	add	esp, 12					; 0000000cH
$L83428:

; 737  : 			}
; 738  : 		} else {

	jmp	SHORT $L83439
$L83422:

; 739  : 			CamTime += TimeStep;

	fld	DWORD PTR ?CamTime@@3MA			; CamTime
	fadd	DWORD PTR ?TimeStep@@3MA		; TimeStep
	fstp	DWORD PTR ?CamTime@@3MA			; CamTime
$L83439:

; 740  : 		}
; 741  : 
; 742  : 		if (keys && !ForceGhostCam)

	cmp	DWORD PTR _keys$[ebp], 0
	je	SHORT $L83398
	movzx	eax, BYTE PTR ?ForceGhostCam@?1??GhostTakeover@@YAXXZ@4_NA
	test	eax, eax
	jne	SHORT $L83398

; 743  : 		{
; 744  : 			GhostTakeoverFlag = FALSE;

	mov	DWORD PTR ?GhostTakeoverFlag@@3JA, 0	; GhostTakeoverFlag

; 745  : 			GhostTakeoverTime = 0;

	mov	DWORD PTR ?GhostTakeoverTime@@3JA, 0	; GhostTakeoverTime

; 746  : 			SetCameraFollow(CAM_MainCamera, PLR_LocalPlayer->ownobj, 0);

	push	0
	mov	eax, DWORD PTR ?PLR_LocalPlayer@@3PAUPlayerStruct@@A ; PLR_LocalPlayer
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR ?CAM_MainCamera@@3PAUCameraStruct@@A ; CAM_MainCamera
	push	edx
	call	?SetCameraFollow@@YAXPAUCameraStruct@@PAUobject_def@@J@Z ; SetCameraFollow
	add	esp, 12					; 0000000cH
$L83398:

; 747  : 		}
; 748  : 	}
; 749  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GhostTakeover@@YAXXZ ENDP				; GhostTakeover
_TEXT	ENDS
END
