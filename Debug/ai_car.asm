; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\source\ai_car.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT _IsEqualGUID
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _==
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _acosl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _asinl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _atanl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _atan2l
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ceill
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _cosl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _coshl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _expl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _fabsl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _floorl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _fmodl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _frexpl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ldexpl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _logl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _log10l
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _modfl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _powl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sinl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sinhl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sqrtl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tanl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tanhl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _frexpf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ldexpf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _acosf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _asinf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _atanf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _atan2f
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ceilf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _cosf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _coshf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _expf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _fabsf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _floorf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _fmodf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _logf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _log10f
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _modff
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _powf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sinf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sinhf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sqrtf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tanf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tanhf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CAI_InitCarAI@@YAXPAUPlayerStruct@@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CAI_CarHelper@@YAXPAUPlayerStruct@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CAI_ResetCar@@YAXPAUPlayerStruct@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CAI_IsCarStuck@@YA_NPAUPlayerStruct@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CAI_IsCarInZone@@YA_NPAUPlayerStruct@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CAI_IsCarOnTrack@@YA_NPAUPlayerStruct@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CAI_TriggerAiHome@@YAXPAUPlayerStruct@@JJPAUVectorStruct@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Pow_int@N@@YANNH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Pow_int@H@@YAHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Pow_int@M@@YAMMH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Pow_int@O@@YAOOH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCD
INCLUDELIB OLDNAMES

PUBLIC	?s_Skills@@3PAU_CAI_SKILLS@@A			; s_Skills
_DATA	SEGMENT
?s_Skills@@3PAU_CAI_SKILLS@@A DD 0fH			; s_Skills
	DD	0fH
	DD	0fH
	DD	0fH
	ORG $+4
_DATA	ENDS
PUBLIC	?CAI_InitCarAI@@YAXPAUPlayerStruct@@J@Z		; CAI_InitCarAI
PUBLIC	?CAI_IsCarInZone@@YA_NPAUPlayerStruct@@@Z	; CAI_IsCarInZone
EXTRN	__fltused:NEAR
EXTRN	?AiStartNode@@3JA:DWORD				; AiStartNode
EXTRN	?AIN_GetForwardNode@@YAPAU_AINODE@@PAUPlayerStruct@@MPAM@Z:NEAR ; AIN_GetForwardNode
; Function compile flags: /Odt /ZI
; File c:\documents and settings\jarhead\desktop\shit to display my love for xbox revolt and fuck you borman-ness\revolt source\source\ai_car.cpp
;	COMDAT ?CAI_InitCarAI@@YAXPAUPlayerStruct@@J@Z
_TEXT	SEGMENT
_Player$ = 8						; size = 4
_Skill$ = 12						; size = 4
?CAI_InitCarAI@@YAXPAUPlayerStruct@@J@Z PROC NEAR	; CAI_InitCarAI, COMDAT

; 72   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 73   : 	Player->CarAI.ZoneID = 0;

	mov	eax, DWORD PTR _Player$[ebp]
	mov	DWORD PTR [eax+10120], 0

; 74   : 	Player->CarAI.LastValidZone = 0;

	mov	eax, DWORD PTR _Player$[ebp]
	mov	DWORD PTR [eax+10132], 0

; 75   : 	CAI_IsCarInZone(Player);

	mov	eax, DWORD PTR _Player$[ebp]
	push	eax
	call	?CAI_IsCarInZone@@YA_NPAUPlayerStruct@@@Z ; CAI_IsCarInZone
	add	esp, 4

; 76   : 
; 77   : 	Player->CarAI.PriChoice = 1;

	mov	eax, DWORD PTR _Player$[ebp]
	mov	DWORD PTR [eax+10148], 1

; 78   : 	Player->CarAI.RouteChoice = 0;

	mov	eax, DWORD PTR _Player$[ebp]
	mov	DWORD PTR [eax+10152], 0

; 79   : 	Player->CarAI.CurNode = AIN_GetForwardNode(Player, 0, (REAL *)&Player->CarAI.NodeDist);

	mov	eax, DWORD PTR _Player$[ebp]
	add	eax, 10144				; 000027a0H
	push	eax
	push	0
	mov	ecx, DWORD PTR _Player$[ebp]
	push	ecx
	call	?AIN_GetForwardNode@@YAPAU_AINODE@@PAUPlayerStruct@@MPAM@Z ; AIN_GetForwardNode
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _Player$[ebp]
	mov	DWORD PTR [edx+10136], eax

; 80   : 	Player->CarAI.LastNode = Player->CarAI.CurNode;

	mov	eax, DWORD PTR _Player$[ebp]
	mov	ecx, DWORD PTR _Player$[ebp]
	mov	edx, DWORD PTR [ecx+10136]
	mov	DWORD PTR [eax+10140], edx

; 81   : 
; 82   : 	Player->CarAI.AIState = CAI_S_RACE;

	mov	eax, DWORD PTR _Player$[ebp]
	mov	DWORD PTR [eax+10156], 0

; 83   : 	Player->CarAI.TrackMode = CAI_T_FORWARD;

	mov	eax, DWORD PTR _Player$[ebp]
	mov	DWORD PTR [eax+10160], 0

; 84   : 	Player->CarAI.Skills = s_Skills[Skill];

	mov	eax, DWORD PTR _Skill$[ebp]
	imul	eax, 20					; 00000014H
	add	eax, OFFSET FLAT:?s_Skills@@3PAU_CAI_SKILLS@@A ; s_Skills
	mov	ecx, DWORD PTR _Player$[ebp]
	add	ecx, 10164				; 000027b4H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], edx
	mov	eax, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx+16], eax

; 85   : 
; 86   : 	Player->CarAI.ResetCnt = 0;

	mov	eax, DWORD PTR _Player$[ebp]
	mov	DWORD PTR [eax+10184], 0

; 87   : 	Player->CarAI.StuckCnt = 0;

	mov	eax, DWORD PTR _Player$[ebp]
	mov	DWORD PTR [eax+10188], 0

; 88   : 
; 89   : 	Player->CarAI.FinishDistNode = AiStartNode;

	mov	eax, DWORD PTR _Player$[ebp]
	mov	ecx, DWORD PTR ?AiStartNode@@3JA	; AiStartNode
	mov	DWORD PTR [eax+10196], ecx

; 90   : 	Player->CarAI.FinishDist = 0.0f;

	mov	eax, DWORD PTR _Player$[ebp]
	mov	DWORD PTR [eax+10200], 0

; 91   : 	Player->CarAI.FinishDistPanel = 0.0f;

	mov	eax, DWORD PTR _Player$[ebp]
	mov	DWORD PTR [eax+10204], 0

; 92   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?CAI_InitCarAI@@YAXPAUPlayerStruct@@J@Z ENDP		; CAI_InitCarAI
_TEXT	ENDS
PUBLIC	__real@3f800000
PUBLIC	__real@42c80000
PUBLIC	__real@40400000
PUBLIC	?CAI_CarHelper@@YAXPAUPlayerStruct@@@Z		; CAI_CarHelper
PUBLIC	?CAI_ResetCar@@YAXPAUPlayerStruct@@@Z		; CAI_ResetCar
PUBLIC	?CAI_IsCarStuck@@YA_NPAUPlayerStruct@@@Z	; CAI_IsCarStuck
PUBLIC	?CAI_IsCarOnTrack@@YA_NPAUPlayerStruct@@@Z	; CAI_IsCarOnTrack
EXTRN	?TimeStep@@3MA:DWORD				; TimeStep
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
; Function compile flags: /Odt /ZI
CONST	ENDS
;	COMDAT ?CAI_CarHelper@@YAXPAUPlayerStruct@@@Z
_TEXT	SEGMENT
_Player$ = 8						; size = 4
?CAI_CarHelper@@YAXPAUPlayerStruct@@@Z PROC NEAR	; CAI_CarHelper, COMDAT

; 104  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 105  : 	Player->CarAI.IsInZone = CAI_IsCarInZone(Player);

	mov	eax, DWORD PTR _Player$[ebp]
	push	eax
	call	?CAI_IsCarInZone@@YA_NPAUPlayerStruct@@@Z ; CAI_IsCarInZone
	add	esp, 4
	movzx	ecx, al
	mov	edx, DWORD PTR _Player$[ebp]
	mov	DWORD PTR [edx+10112], ecx

; 106  : 	Player->CarAI.IsOnTrack = CAI_IsCarOnTrack(Player);

	mov	eax, DWORD PTR _Player$[ebp]
	push	eax
	call	?CAI_IsCarOnTrack@@YA_NPAUPlayerStruct@@@Z ; CAI_IsCarOnTrack
	add	esp, 4
	movzx	ecx, al
	mov	edx, DWORD PTR _Player$[ebp]
	mov	DWORD PTR [edx+10116], ecx

; 107  : 
; 108  : 	if ((!Player->CarAI.IsInZone) || (!Player->CarAI.IsOnTrack))

	mov	eax, DWORD PTR _Player$[ebp]
	cmp	DWORD PTR [eax+10112], 0
	je	SHORT $L81072
	mov	eax, DWORD PTR _Player$[ebp]
	cmp	DWORD PTR [eax+10116], 0
	jne	SHORT $L81071
$L81072:

; 109  : 	{
; 110  : 		Player->CarAI.ResetCnt++;

	mov	eax, DWORD PTR _Player$[ebp]
	fld	DWORD PTR [eax+10184]
	fadd	DWORD PTR __real@3f800000
	mov	ecx, DWORD PTR _Player$[ebp]
	fstp	DWORD PTR [ecx+10184]

; 111  : 		if (Player->CarAI.ResetCnt == MAX_RESET_CNT)

	mov	eax, DWORD PTR _Player$[ebp]
	fld	DWORD PTR __real@42c80000
	fld	DWORD PTR [eax+10184]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $L81073

; 112  : 		{
; 113  : 			CAI_ResetCar(Player);

	mov	eax, DWORD PTR _Player$[ebp]
	push	eax
	call	?CAI_ResetCar@@YAXPAUPlayerStruct@@@Z	; CAI_ResetCar
	add	esp, 4
$L81073:

; 114  : 		}
; 115  : 	}
; 116  : 	else

	jmp	SHORT $L81074
$L81071:

; 117  : 	{
; 118  : 		Player->CarAI.ResetCnt = 0;

	mov	eax, DWORD PTR _Player$[ebp]
	mov	DWORD PTR [eax+10184], 0
$L81074:

; 119  : 	}
; 120  : 
; 121  : 	if (CAI_IsCarStuck(Player))

	mov	eax, DWORD PTR _Player$[ebp]
	push	eax
	call	?CAI_IsCarStuck@@YA_NPAUPlayerStruct@@@Z ; CAI_IsCarStuck
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $L81075

; 122  : 	{
; 123  : 		Player->CarAI.StuckCnt += TimeStep;

	mov	eax, DWORD PTR _Player$[ebp]
	fld	DWORD PTR ?TimeStep@@3MA		; TimeStep
	fadd	DWORD PTR [eax+10188]
	mov	ecx, DWORD PTR _Player$[ebp]
	fstp	DWORD PTR [ecx+10188]

; 124  : 		if (Player->CarAI.StuckCnt > MAX_STUCK_CNT)

	mov	eax, DWORD PTR _Player$[ebp]
	fld	DWORD PTR [eax+10188]
	fcomp	DWORD PTR __real@40400000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $L81076

; 125  : 		{
; 126  : 			CAI_ResetCar(Player);

	mov	eax, DWORD PTR _Player$[ebp]
	push	eax
	call	?CAI_ResetCar@@YAXPAUPlayerStruct@@@Z	; CAI_ResetCar
	add	esp, 4
$L81076:

; 127  : 		}
; 128  : 	}
; 129  : 	else

	jmp	SHORT $L81070
$L81075:

; 130  : 	{
; 131  : 		Player->CarAI.StuckCnt = ZERO;

	mov	eax, DWORD PTR _Player$[ebp]
	mov	DWORD PTR [eax+10188], 0
$L81070:

; 132  : 	}
; 133  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?CAI_CarHelper@@YAXPAUPlayerStruct@@@Z ENDP		; CAI_CarHelper
; Function compile flags: /Odt /ZI
_TEXT	ENDS
;	COMDAT ?CAI_ResetCar@@YAXPAUPlayerStruct@@@Z
_TEXT	SEGMENT
_car$ = -4						; size = 4
_Player$ = 8						; size = 4
?CAI_ResetCar@@YAXPAUPlayerStruct@@@Z PROC NEAR		; CAI_ResetCar, COMDAT

; 144  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 145  : 	CAR	*car;
; 146  : 
; 147  : 	car = &Player->car;

	mov	eax, DWORD PTR _Player$[ebp]
	add	eax, 44					; 0000002cH
	mov	DWORD PTR _car$[ebp], eax

; 148  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?CAI_ResetCar@@YAXPAUPlayerStruct@@@Z ENDP		; CAI_ResetCar
_TEXT	ENDS
PUBLIC	__real@3fa999999999999a
;	COMDAT __real@3fa999999999999a
CONST	SEGMENT
__real@3fa999999999999a DQ 03fa999999999999ar	; 0.05
; Function compile flags: /Odt /ZI
CONST	ENDS
;	COMDAT ?CAI_IsCarStuck@@YA_NPAUPlayerStruct@@@Z
_TEXT	SEGMENT
_car$ = -4						; size = 4
_Player$ = 8						; size = 4
?CAI_IsCarStuck@@YA_NPAUPlayerStruct@@@Z PROC NEAR	; CAI_IsCarStuck, COMDAT

; 160  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 161  : 	CAR	*car;
; 162  : 
; 163  : 	car = &Player->car;

	mov	eax, DWORD PTR _Player$[ebp]
	add	eax, 44					; 0000002cH
	mov	DWORD PTR _car$[ebp], eax

; 164  : 
; 165  : 	if (car->NWheelFloorContacts == 0) {

	mov	eax, DWORD PTR _car$[ebp]
	cmp	DWORD PTR [eax+3588], 0
	jne	SHORT $L81086

; 166  : 		if ((car->Body->NWorldContacts != 0) || (car->Body->NoContactTime < 0.05) || (car->NWheelColls > 0)) {

	mov	eax, DWORD PTR _car$[ebp]
	mov	ecx, DWORD PTR [eax+856]
	cmp	DWORD PTR [ecx+520], 0
	jne	SHORT $L81088
	mov	eax, DWORD PTR _car$[ebp]
	mov	ecx, DWORD PTR [eax+856]
	fld	DWORD PTR [ecx+528]
	fcomp	QWORD PTR __real@3fa999999999999a
	fnstsw	ax
	test	ah, 5
	jnp	SHORT $L81088
	mov	eax, DWORD PTR _car$[ebp]
	cmp	DWORD PTR [eax+3580], 0
	jle	SHORT $L81086
$L81088:

; 167  : 			return TRUE;

	mov	al, 1
	jmp	SHORT $L81084
$L81086:

; 168  : 		}
; 169  : 	}
; 170  : 
; 171  : 	return(FALSE);

	xor	al, al
$L81084:

; 172  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?CAI_IsCarStuck@@YA_NPAUPlayerStruct@@@Z ENDP		; CAI_IsCarStuck
_TEXT	ENDS
EXTRN	?AiZoneNumID@@3JA:DWORD				; AiZoneNumID
EXTRN	?AiZones@@3PAUAIZONE@@A:DWORD			; AiZones
EXTRN	?AiZoneHeaders@@3PAUAIZONE_HEADER@@A:DWORD	; AiZoneHeaders
; Function compile flags: /Odt /ZI
;	COMDAT ?CAI_IsCarInZone@@YA_NPAUPlayerStruct@@@Z
_TEXT	SEGMENT
_car$ = -28						; size = 4
_zone$ = -24						; size = 4
_dist$ = -20						; size = 4
_flag$ = -16						; size = 4
_kk$ = -12						; size = 4
_jj$ = -8						; size = 4
_ii$ = -4						; size = 4
_Player$ = 8						; size = 4
?CAI_IsCarInZone@@YA_NPAUPlayerStruct@@@Z PROC NEAR	; CAI_IsCarInZone, COMDAT

; 184  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi

; 185  : 	long	ii, jj, kk;
; 186  : 	long	flag;
; 187  : 	float	dist;
; 188  : 	AIZONE	*zone;
; 189  : 	CAR	*car;
; 190  : 
; 191  : 	car = &Player->car;

	mov	eax, DWORD PTR _Player$[ebp]
	add	eax, 44					; 0000002cH
	mov	DWORD PTR _car$[ebp], eax

; 192  : 
; 193  : 	if (!AiZones) { return(FALSE); }								// If no AI zones load, return FALSE

	cmp	DWORD PTR ?AiZones@@3PAUAIZONE@@A, 0	; AiZones
	jne	SHORT $L81099
	xor	al, al
	jmp	$L81091
$L81099:

; 194  : 
; 195  : 	for (ii = 0; ii < AiZoneNumID; ii++)							// Check all car centre against all AI zones

	mov	DWORD PTR _ii$[ebp], 0
	jmp	SHORT $L81100
$L81101:
	mov	eax, DWORD PTR _ii$[ebp]
	add	eax, 1
	mov	DWORD PTR _ii$[ebp], eax
$L81100:
	mov	eax, DWORD PTR _ii$[ebp]
	cmp	eax, DWORD PTR ?AiZoneNumID@@3JA	; AiZoneNumID
	jge	$L81102

; 196  : 	{
; 197  : 		for (jj = 0; jj < AiZoneHeaders[ii].Count; jj++)

	mov	DWORD PTR _jj$[ebp], 0
	jmp	SHORT $L81103
$L81104:
	mov	eax, DWORD PTR _jj$[ebp]
	add	eax, 1
	mov	DWORD PTR _jj$[ebp], eax
$L81103:
	mov	eax, DWORD PTR _ii$[ebp]
	mov	ecx, DWORD PTR ?AiZoneHeaders@@3PAUAIZONE_HEADER@@A ; AiZoneHeaders
	mov	edx, DWORD PTR _jj$[ebp]
	cmp	edx, DWORD PTR [ecx+eax*8]
	jge	$L81105

; 198  : 		{
; 199  : 			zone = AiZoneHeaders[ii].Zones + jj;

	mov	eax, DWORD PTR _jj$[ebp]
	imul	eax, 80					; 00000050H
	mov	ecx, DWORD PTR _ii$[ebp]
	mov	edx, DWORD PTR ?AiZoneHeaders@@3PAUAIZONE_HEADER@@A ; AiZoneHeaders
	add	eax, DWORD PTR [edx+ecx*8+4]
	mov	DWORD PTR _zone$[ebp], eax

; 200  : 			flag = 0;

	mov	DWORD PTR _flag$[ebp], 0

; 201  : 			for (kk = 0; kk < 3; kk++)

	mov	DWORD PTR _kk$[ebp], 0
	jmp	SHORT $L81106
$L81107:
	mov	eax, DWORD PTR _kk$[ebp]
	add	eax, 1
	mov	DWORD PTR _kk$[ebp], eax
$L81106:
	cmp	DWORD PTR _kk$[ebp], 3
	jge	$L81108

; 202  : 			{
; 203  : 				dist = PlaneDist(&zone->Plane[kk], &car->Body->Centre.Pos);

	mov	eax, DWORD PTR _car$[ebp]
	mov	ecx, DWORD PTR [eax+856]
	mov	edx, DWORD PTR _kk$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _zone$[ebp]
	fld	DWORD PTR [ecx+20]
	fmul	DWORD PTR [eax+edx+28]
	mov	ecx, DWORD PTR _car$[ebp]
	mov	edx, DWORD PTR [ecx+856]
	mov	eax, DWORD PTR _kk$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _zone$[ebp]
	fld	DWORD PTR [edx+24]
	fmul	DWORD PTR [ecx+eax+32]
	faddp	ST(1), ST(0)
	mov	edx, DWORD PTR _car$[ebp]
	mov	eax, DWORD PTR [edx+856]
	mov	ecx, DWORD PTR _kk$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _zone$[ebp]
	fld	DWORD PTR [eax+28]
	fmul	DWORD PTR [edx+ecx+36]
	faddp	ST(1), ST(0)
	mov	eax, DWORD PTR _kk$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _zone$[ebp]
	fadd	DWORD PTR [ecx+eax+40]
	fstp	DWORD PTR _dist$[ebp]

; 204  : 				if (dist < -zone->Size[kk] || dist > zone->Size[kk])

	mov	eax, DWORD PTR _kk$[ebp]
	mov	ecx, DWORD PTR _zone$[ebp]
	fld	DWORD PTR [ecx+eax*4+16]
	fchs
	fcomp	DWORD PTR _dist$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	je	SHORT $L81110
	mov	eax, DWORD PTR _kk$[ebp]
	mov	ecx, DWORD PTR _zone$[ebp]
	fld	DWORD PTR _dist$[ebp]
	fcomp	DWORD PTR [ecx+eax*4+16]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $L81109
$L81110:

; 205  : 				{
; 206  : 					flag = 1;

	mov	DWORD PTR _flag$[ebp], 1

; 207  : 					break;

	jmp	SHORT $L81108
$L81109:

; 208  : 				}
; 209  : 			}

	jmp	$L81107
$L81108:

; 210  : 			if (!flag)

	cmp	DWORD PTR _flag$[ebp], 0
	jne	SHORT $L81111

; 211  : 			{
; 212  : 				Player->CarAI.LastValidZone = Player->CarAI.CurZone;

	mov	eax, DWORD PTR _Player$[ebp]
	mov	ecx, DWORD PTR _Player$[ebp]
	mov	edx, DWORD PTR [ecx+10124]
	mov	DWORD PTR [eax+10132], edx

; 213  : 				Player->CarAI.CurZone = ii;

	mov	eax, DWORD PTR _Player$[ebp]
	mov	ecx, DWORD PTR _ii$[ebp]
	mov	DWORD PTR [eax+10124], ecx

; 214  : 				Player->CarAI.CurZoneBBox = jj;

	mov	eax, DWORD PTR _Player$[ebp]
	mov	ecx, DWORD PTR _jj$[ebp]
	mov	DWORD PTR [eax+10128], ecx

; 215  : 				return(TRUE);

	mov	al, 1
	jmp	SHORT $L81091
$L81111:

; 216  : 			}
; 217  : 		}

	jmp	$L81104
$L81105:

; 218  : 	}

	jmp	$L81101
$L81102:

; 219  : 	return(FALSE);

	xor	al, al
$L81091:

; 220  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?CAI_IsCarInZone@@YA_NPAUPlayerStruct@@@Z ENDP		; CAI_IsCarInZone
; Function compile flags: /Odt /ZI
_TEXT	ENDS
;	COMDAT ?CAI_IsCarOnTrack@@YA_NPAUPlayerStruct@@@Z
_TEXT	SEGMENT
_car$ = -4						; size = 4
_Player$ = 8						; size = 4
?CAI_IsCarOnTrack@@YA_NPAUPlayerStruct@@@Z PROC NEAR	; CAI_IsCarOnTrack, COMDAT

; 231  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 232  : 	CAR	*car;
; 233  : 
; 234  : 	car = &Player->car;

	mov	eax, DWORD PTR _Player$[ebp]
	add	eax, 44					; 0000002cH
	mov	DWORD PTR _car$[ebp], eax

; 235  : 
; 236  : 	return(TRUE);

	mov	al, 1

; 237  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?CAI_IsCarOnTrack@@YA_NPAUPlayerStruct@@@Z ENDP		; CAI_IsCarOnTrack
_TEXT	ENDS
PUBLIC	?CAI_TriggerAiHome@@YAXPAUPlayerStruct@@JJPAUVectorStruct@@@Z ; CAI_TriggerAiHome
; Function compile flags: /Odt /ZI
;	COMDAT ?CAI_TriggerAiHome@@YAXPAUPlayerStruct@@JJPAUVectorStruct@@@Z
_TEXT	SEGMENT
_car$ = -4						; size = 4
_Player$ = 8						; size = 4
_flag$ = 12						; size = 4
_n$ = 16						; size = 4
_vec$ = 20						; size = 4
?CAI_TriggerAiHome@@YAXPAUPlayerStruct@@JJPAUVectorStruct@@@Z PROC NEAR ; CAI_TriggerAiHome, COMDAT

; 244  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 245  : 	CAR	*car;
; 246  : 
; 247  : 	car = &Player->car;

	mov	eax, DWORD PTR _Player$[ebp]
	add	eax, 44					; 0000002cH
	mov	DWORD PTR _car$[ebp], eax

; 248  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?CAI_TriggerAiHome@@YAXPAUPlayerStruct@@JJPAUVectorStruct@@@Z ENDP ; CAI_TriggerAiHome
_TEXT	ENDS
END
