/////////////////////////////////////////////////////////////////////
//
// Util.h: useful functions header file
//
/////////////////////////////////////////////////////////////////////

#ifndef __UTIL_H__
#define __UTIL_H__

/////////////////////////////////////////////////////////////////////
//
// abs: return absolute value of passed variable
//
/////////////////////////////////////////////////////////////////////
#define abs(x) ((x) > 0 ? (x) : -(x))

/////////////////////////////////////////////////////////////////////
//
// Wrap: contstrain a variable to remain within the limits passed
// and if it goes past the end, wrap it around to the other end
//
/////////////////////////////////////////////////////////////////////
#define Wrap(var, min, max) \
{ \
	if ((var) < (min)) (var) = (max) + (var) - (min); \
	if ((var) >= (max)) (var) = (min) + (var) - (max); \
}


#define Limit(var, min, max) \
{ \
	if ((var) < (min)) (var) = (min); \
	if ((var) > (max)) (var) = (max); \
} 

		
/////////////////////////////////////////////////////////////////////
//
// Sign: return -1, or +1 depending on the sign of a variable
//
/////////////////////////////////////////////////////////////////////
#define Sign(var) (((var) == 0)? 0: ((var) < 0)? -1: 1)


/////////////////////////////////////////////////////////////////////
//
// Min and Max:
//
/////////////////////////////////////////////////////////////////////
#define Min(a, b) (((a) < (b))? a: b)
#define Max(a, b) (((a) > (b))? a: b)


/////////////////////////////////////////////////////////////////////
//
// ApproxEqual: determine whether to REALs are roughly equal
//
/////////////////////////////////////////////////////////////////////
#define ApproxEqual(a, b) ( (abs((a) - (b)) < SIMILAR_REAL)? TRUE: FALSE)

////////////////////////////////////////
// frand: return a random float 0 - n //
////////////////////////////////////////

#define frand(_n) \
	((REAL)rand() / RAND_MAX * (_n))

////////////////
// prototypes //
////////////////

extern REAL GoodWrap(REAL *var, REAL min, REAL max);


#endif