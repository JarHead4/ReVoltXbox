<?xml version="1.0" ?>
<XDX version="0.2" >

<VertexShader id="VSLightDiffuseTexture">
<decl>
<stream index="0">
<vreg index="0" name="POSITION" format="FLOAT3" />
<vreg index="2" name="NORMAL" format="FLOAT3" />
<vreg index="3" name="DIFFUSE" format="D3DCOLOR" />
<vreg index="9" name="TEXCOORD0" format="FLOAT2" />
</stream>
</decl>
<asm>
vs.1.1
m4x4 oPos, v0, c4   // transform point to projection space
// Transform the normal into view space
// dp3 r0.x, v2, c8  
// dp3 r0.y, v2, c9
// dp3 r0.z, v2, c10  
// dp3 r1, r0, c1		// color = normal dot light
// mul r1, r1, v2		// modulate by per-vertex diffuse
// mul oD0, r1, c0		// modulate by material diffuse
mov oD0,c0
mov oT0, v9		// texture coords
</asm>
<Constant index="0" name="Diffuse">1 1 1 1</Constant>
<Constant index="1" name="LightDirection">0 0 1 1</Constant>
<Constant index="4" name="World * View * Projection" count="4">
	1 0 0 0
	0 1 0 0
	0 0 1 0
	0 0 0 1
</Constant>
<Constant index="8" name="Transpose(Inverse(World))" count="3">
	1 0 0 0
	0 1 0 0
	0 0 1 0
</Constant>
</VertexShader>

<VertexShader id="VSLightDiffuse">
<decl>
<stream index="0">
<vreg index="0" name="POSITION" format="FLOAT3" />
<vreg index="2" name="NORMAL" format="FLOAT3" />
<vreg index="3" name="DIFFUSE" format="D3DCOLOR" />
</stream>
</decl>
<asm>
vs.1.1
m4x4 oPos, v0, c4   // transform point to projection space
// Transform the normal into view space
dp3 r0.x, v2, c8  
dp3 r0.y, v2, c9
dp3 r0.z, v2, c10  
dp3 r1, r0, c1		// color = normal dot light
// mul r1, r1, v2		// modulate by per-vertex diffuse
mul oD0, r1, c0		// modulate by material diffuse
</asm>
<Constant index="0" name="Diffuse">1 1 1 1</Constant>
<Constant index="1" name="LightDirection">0 0 1 1</Constant>
<Constant index="4" name="World * View * Projection" count="4">
	1 0 0 0
	0 1 0 0
	0 0 1 0
	0 0 0 1
</Constant>
<Constant index="8" name="Transpose(Inverse(World))" count="3">
	1 0 0 0
	0 1 0 0
	0 0 1 0
</Constant>
</VertexShader>

</XDX>
